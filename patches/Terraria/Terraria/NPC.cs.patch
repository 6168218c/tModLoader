--- src/decompiled/Terraria/NPC.cs
+++ src/Terraria/Terraria/NPC.cs
@@ -23955,8 +_,8 @@
 
 						vector145 *= 20f + Main.rand.NextFloat() * 400f;
 						bool flag76 = true;
-						Vector2 vec3 = base.Center + vector145;
+						Vector2 vector146 = base.Center + vector145;
-						Point point5 = vec3.ToTileCoordinates();
+						Point point5 = vector146.ToTileCoordinates();
 						if (!WorldGen.InWorld(point5.X, point5.Y))
 							flag76 = false;
 
@@ -23970,14 +_,29 @@
 						float num1171 = 1f + Main.rand.NextFloat();
 						float fadeIn = 0.4f + Main.rand.NextFloat();
 						int num1172 = Utils.SelectRandom<int>(Main.rand, 31, 229);
+#if CLIENT
+						if (flag76) {
+							MoonlordDeathDrama.AddExplosion(vector146);
+							for (float num1173 = 0f; num1173 < num1168 * 2f; num1173++) {
+								Dust dust2 = Main.dust[Dust.NewDust(vector146, 0, 0, 229)];
+								dust2.noGravity = true;
+								dust2.position = vector146;
+								dust2.velocity = Vector2.UnitY.RotatedBy(num1170 + num1169 * num1173) * scaleFactor6 * (Main.rand.NextFloat() * 1.6f + 1.6f);
+								dust2.fadeIn = fadeIn;
+								dust2.scale = num1171;
+							}
+						}
+
+#endif
+
-						for (float num1173 = 0f; num1173 < this.ai[1] / 60f; num1173++) {
+						for (float num1174 = 0f; num1174 < this.ai[1] / 60f; num1174++) {
-							Vector2 vector146 = Utils.RandomVector2(Main.rand, -1f, 1f);
+							Vector2 vector147 = Utils.RandomVector2(Main.rand, -1f, 1f);
-							if (vector146 != Vector2.Zero)
+							if (vector147 != Vector2.Zero)
-								vector146.Normalize();
+								vector147.Normalize();
 
-							vector146 *= 20f + Main.rand.NextFloat() * 800f;
+							vector147 *= 20f + Main.rand.NextFloat() * 800f;
-							Vector2 vector147 = base.Center + vector146;
+							Vector2 vector148 = base.Center + vector147;
-							Point point6 = vector147.ToTileCoordinates();
+							Point point6 = vector148.ToTileCoordinates();
 							bool flag77 = true;
 							if (!WorldGen.InWorld(point6.X, point6.Y))
 								flag77 = false;
@@ -23986,25 +_,25 @@
 								flag77 = false;
 
 							if (flag77) {
-								Dust dust2 = Main.dust[Dust.NewDust(vector147, 0, 0, num1172)];
+								Dust dust3 = Main.dust[Dust.NewDust(vector148, 0, 0, num1172)];
-								dust2.noGravity = true;
+								dust3.noGravity = true;
-								dust2.position = vector147;
+								dust3.position = vector148;
-								dust2.velocity = -Vector2.UnitY * scaleFactor6 * (Main.rand.NextFloat() * 0.9f + 1.6f);
+								dust3.velocity = -Vector2.UnitY * scaleFactor6 * (Main.rand.NextFloat() * 0.9f + 1.6f);
-								dust2.fadeIn = fadeIn;
+								dust3.fadeIn = fadeIn;
-								dust2.scale = num1171;
+								dust3.scale = num1171;
 							}
 						}
 					}
 
 					if (this.ai[1] % 15f == 0f && this.ai[1] < 480f && this.ai[1] >= 90f && Main.netMode != 1) {
-						Vector2 vector148 = Utils.RandomVector2(Main.rand, -1f, 1f);
+						Vector2 vector149 = Utils.RandomVector2(Main.rand, -1f, 1f);
-						if (vector148 != Vector2.Zero)
+						if (vector149 != Vector2.Zero)
-							vector148.Normalize();
+							vector149.Normalize();
 
-						vector148 *= 20f + Main.rand.NextFloat() * 400f;
+						vector149 *= 20f + Main.rand.NextFloat() * 400f;
 						bool flag78 = true;
-						Vector2 vec4 = base.Center + vector148;
+						Vector2 vec3 = base.Center + vector149;
-						Point point7 = vec4.ToTileCoordinates();
+						Point point7 = vec3.ToTileCoordinates();
 						if (!WorldGen.InWorld(point7.X, point7.Y))
 							flag78 = false;
 
@@ -24012,9 +_,9 @@
 							flag78 = false;
 
 						if (flag78) {
-							float num1174 = (float)(Main.rand.Next(4) < 2).ToDirectionInt() * ((float)Math.PI / 8f + (float)Math.PI / 4f * Main.rand.NextFloat());
+							float num1175 = (float)(Main.rand.Next(4) < 2).ToDirectionInt() * ((float)Math.PI / 8f + (float)Math.PI / 4f * Main.rand.NextFloat());
-							Vector2 vector149 = new Vector2(0f, (0f - Main.rand.NextFloat()) * 0.5f - 0.5f).RotatedBy(num1174) * 6f;
+							Vector2 vector150 = new Vector2(0f, (0f - Main.rand.NextFloat()) * 0.5f - 0.5f).RotatedBy(num1175) * 6f;
-							Projectile.NewProjectile(vec4.X, vec4.Y, vector149.X, vector149.Y, 622, 0, 0f, Main.myPlayer);
+							Projectile.NewProjectile(vec3.X, vec3.Y, vector150.X, vector150.Y, 622, 0, 0f, Main.myPlayer);
 						}
 					}
 
@@ -24039,17 +_,17 @@
 						MoonlordDeathDrama.RequestLight(this.ai[1] / 40f, base.Center);
 
 					if (this.ai[1] == 40f) {
-						for (int num1175 = 0; num1175 < 1000; num1175++) {
+						for (int num1176 = 0; num1176 < 1000; num1176++) {
-							Projectile projectile2 = Main.projectile[num1175];
+							Projectile projectile2 = Main.projectile[num1176];
 							if (projectile2.active && (projectile2.type == 456 || projectile2.type == 462 || projectile2.type == 455 || projectile2.type == 452 || projectile2.type == 454)) {
 								projectile2.active = false;
 								if (Main.netMode != 1)
-									NetMessage.SendData(27, -1, -1, null, num1175);
+									NetMessage.SendData(27, -1, -1, null, num1176);
 							}
 						}
 
-						for (int num1176 = 0; num1176 < 200; num1176++) {
+						for (int num1177 = 0; num1177 < 200; num1177++) {
-							NPC nPC4 = Main.npc[num1176];
+							NPC nPC4 = Main.npc[num1177];
 							if (nPC4.active && nPC4.type == 400) {
 								nPC4.active = false;
 								if (Main.netMode != 1)
@@ -24057,16 +_,16 @@
 							}
 						}
 
-						for (int num1177 = 0; num1177 < 500; num1177++) {
+						for (int num1178 = 0; num1178 < 500; num1178++) {
-							Gore gore2 = Main.gore[num1177];
+							Gore gore2 = Main.gore[num1178];
 							if (gore2.active && gore2.type >= 619 && gore2.type <= 622)
 								gore2.active = false;
 						}
 					}
 
 					if (this.ai[1] >= 60f) {
-						for (int num1178 = 0; num1178 < 200; num1178++) {
+						for (int num1179 = 0; num1179 < 200; num1179++) {
-							NPC nPC5 = Main.npc[num1178];
+							NPC nPC5 = Main.npc[num1179];
 							if (nPC5.active && (nPC5.type == 400 || nPC5.type == 397 || nPC5.type == 396)) {
 								nPC5.active = false;
 								if (Main.netMode != 1)
@@ -24094,8 +_,8 @@
 					flag79 = true;
 
 				if (!flag79) {
-					for (int num1179 = 0; num1179 < 255; num1179++) {
+					for (int num1180 = 0; num1180 < 255; num1180++) {
-						if (Main.player[num1179].active && !Main.player[num1179].dead) {
+						if (Main.player[num1180].active && !Main.player[num1180].dead) {
 							flag79 = true;
 							break;
 						}
@@ -24113,31 +_,31 @@
 
 				this.ai[0] = -2f;
 				netUpdate = true;
-				Vector2 vector150 = Main.player[target].Center - Vector2.UnitY * 150f - base.Center;
+				Vector2 vector151 = Main.player[target].Center - Vector2.UnitY * 150f - base.Center;
-				base.position += vector150;
+				base.position += vector151;
 				if (Main.npc[(int)localAI[0]].active) {
 					NPC nPC6 = Main.npc[(int)localAI[0]];
-					nPC6.position += vector150;
+					nPC6.position += vector151;
 					Main.npc[(int)localAI[0]].netUpdate = true;
 				}
 
 				if (Main.npc[(int)localAI[1]].active) {
 					NPC nPC6 = Main.npc[(int)localAI[1]];
-					nPC6.position += vector150;
+					nPC6.position += vector151;
 					Main.npc[(int)localAI[1]].netUpdate = true;
 				}
 
 				if (Main.npc[(int)localAI[2]].active) {
 					NPC nPC6 = Main.npc[(int)localAI[2]];
-					nPC6.position += vector150;
+					nPC6.position += vector151;
 					Main.npc[(int)localAI[2]].netUpdate = true;
 				}
 
-				for (int num1180 = 0; num1180 < 200; num1180++) {
+				for (int num1181 = 0; num1181 < 200; num1181++) {
-					NPC nPC7 = Main.npc[num1180];
+					NPC nPC7 = Main.npc[num1181];
 					if (nPC7.active && nPC7.type == 400) {
 						NPC nPC6 = nPC7;
-						nPC6.position += vector150;
+						nPC6.position += vector151;
 						nPC7.netUpdate = true;
 					}
 				}
@@ -24151,45 +_,45 @@
 				}
 
 				bool flag80 = this.ai[2] == 0f;
-				float num1181 = -flag80.ToDirectionInt();
+				float num1182 = -flag80.ToDirectionInt();
-				spriteDirection = (int)num1181;
+				spriteDirection = (int)num1182;
 				dontTakeDamage = (frameCounter >= 21.0);
-				Vector2 vector151 = new Vector2(30f, 66f);
+				Vector2 vector152 = new Vector2(30f, 66f);
-				float num1182 = 0f;
 				float num1183 = 0f;
+				float num1184 = 0f;
 				bool flag81 = true;
-				int num1184 = 0;
+				int num1185 = 0;
 				if (this.ai[0] != -2f) {
-					float num1185 = this.ai[0];
+					float num1186 = this.ai[0];
 					this.ai[1]++;
-					int num1186 = (int)Main.npc[(int)this.ai[3]].ai[2];
+					int num1187 = (int)Main.npc[(int)this.ai[3]].ai[2];
-					int num1187 = (!flag80) ? 1 : 0;
+					int num1188 = (!flag80) ? 1 : 0;
-					int num1188 = 0;
 					int num1189 = 0;
+					int num1190 = 0;
-					for (; num1188 < 5; num1188++) {
+					for (; num1189 < 5; num1189++) {
-						num1183 = MoonLordAttacksArray[num1186, num1187, 1, num1188];
+						num1184 = MoonLordAttacksArray[num1187, num1188, 1, num1189];
-						if (!(num1183 + (float)num1189 <= this.ai[1]))
+						if (!(num1184 + (float)num1190 <= this.ai[1]))
 							break;
 
-						num1189 += (int)num1183;
+						num1190 += (int)num1184;
 					}
 
-					if (num1188 == 5) {
+					if (num1189 == 5) {
-						num1188 = 0;
-						this.ai[1] = 0f;
-						num1183 = MoonLordAttacksArray[num1186, num1187, 1, num1188];
 						num1189 = 0;
+						this.ai[1] = 0f;
+						num1184 = MoonLordAttacksArray[num1187, num1188, 1, num1189];
+						num1190 = 0;
 					}
 
-					this.ai[0] = MoonLordAttacksArray[num1186, num1187, 0, num1188];
+					this.ai[0] = MoonLordAttacksArray[num1187, num1188, 0, num1189];
-					num1182 = (int)this.ai[1] - num1189;
+					num1183 = (int)this.ai[1] - num1190;
-					if (this.ai[0] != num1185)
+					if (this.ai[0] != num1186)
 						netUpdate = true;
 				}
 
 				if (this.ai[0] == -2f) {
 					damage = 80;
-					num1184 = 0;
+					num1185 = 0;
 					dontTakeDamage = true;
 					this.ai[1]++;
 					if (this.ai[1] >= 32f)
@@ -24199,60 +_,60 @@
 						this.ai[1] = 0f;
 
 					Vector2 center15 = Main.npc[(int)this.ai[3]].Center;
-					Vector2 value11 = center15 + new Vector2(350f * num1181, -100f);
+					Vector2 value11 = center15 + new Vector2(350f * num1182, -100f);
-					Vector2 vector152 = value11 - base.Center;
+					Vector2 vector153 = value11 - base.Center;
-					if (vector152.Length() > 20f) {
-						vector152.Normalize();
-						vector152 *= 6f;
-						Vector2 velocity3 = base.velocity;
-						if (vector152 != Vector2.Zero)
-							SimpleFlyMovement(vector152, 0.3f);
-
-						base.velocity = Vector2.Lerp(velocity3, base.velocity, 0.5f);
-					}
-				}
-				else if (this.ai[0] == 0f) {
-					num1184 = 3;
-					localAI[1] -= 0.05f;
-					if (localAI[1] < 0f)
-						localAI[1] = 0f;
-
-					Vector2 center16 = Main.npc[(int)this.ai[3]].Center;
-					Vector2 value12 = center16 + new Vector2(350f * num1181, -100f);
-					Vector2 vector153 = value12 - base.Center;
 					if (vector153.Length() > 20f) {
 						vector153.Normalize();
 						vector153 *= 6f;
-						Vector2 velocity4 = base.velocity;
+						Vector2 velocity3 = base.velocity;
 						if (vector153 != Vector2.Zero)
 							SimpleFlyMovement(vector153, 0.3f);
 
+						base.velocity = Vector2.Lerp(velocity3, base.velocity, 0.5f);
+					}
+				}
+				else if (this.ai[0] == 0f) {
+					num1185 = 3;
+					localAI[1] -= 0.05f;
+					if (localAI[1] < 0f)
+						localAI[1] = 0f;
+
+					Vector2 center16 = Main.npc[(int)this.ai[3]].Center;
+					Vector2 value12 = center16 + new Vector2(350f * num1182, -100f);
+					Vector2 vector154 = value12 - base.Center;
+					if (vector154.Length() > 20f) {
+						vector154.Normalize();
+						vector154 *= 6f;
+						Vector2 velocity4 = base.velocity;
+						if (vector154 != Vector2.Zero)
+							SimpleFlyMovement(vector154, 0.3f);
+
 						base.velocity = Vector2.Lerp(velocity4, base.velocity, 0.5f);
 					}
 				}
 				else if (this.ai[0] == 1f) {
-					num1184 = 0;
+					num1185 = 0;
-					int num1190 = 7;
+					int num1191 = 7;
-					int num1191 = 4;
+					int num1192 = 4;
-					if (num1182 >= (float)(num1190 * num1191 * 2)) {
+					if (num1183 >= (float)(num1191 * num1192 * 2)) {
 						localAI[1] -= 0.07f;
 						if (localAI[1] < 0f)
 							localAI[1] = 0f;
 					}
-					else if (num1182 >= (float)(num1190 * num1191)) {
+					else if (num1183 >= (float)(num1191 * num1192)) {
 						localAI[1] += 0.05f;
 						if (localAI[1] > 0.75f)
 							localAI[1] = 0.75f;
 
-						float num1192 = (float)Math.PI * 2f * (num1182 % (float)(num1190 * num1191)) / (float)(num1190 * num1191) - (float)Math.PI / 2f;
+						float num1193 = (float)Math.PI * 2f * (num1183 % (float)(num1191 * num1192)) / (float)(num1191 * num1192) - (float)Math.PI / 2f;
-						localAI[0] = new Vector2((float)Math.Cos(num1192) * vector151.X, (float)Math.Sin(num1192) * vector151.Y).ToRotation();
+						localAI[0] = new Vector2((float)Math.Cos(num1193) * vector152.X, (float)Math.Sin(num1193) * vector152.Y).ToRotation();
-						if (num1182 % (float)num1191 == 0f) {
+						if (num1183 % (float)num1192 == 0f) {
-							Vector2 value13 = new Vector2(1f * (0f - num1181), 3f);
+							Vector2 value13 = new Vector2(1f * (0f - num1182), 3f);
-							Vector2 vector154 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), vector151 * localAI[1]);
+							Vector2 vector155 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), vector152 * localAI[1]);
-							Vector2 vector155 = base.Center + Vector2.Normalize(vector154) * vector151.Length() * 0.4f + value13;
+							Vector2 vector156 = base.Center + Vector2.Normalize(vector155) * vector152.Length() * 0.4f + value13;
-							Vector2 vector156 = Vector2.Normalize(vector154) * 8f;
+							Vector2 vector157 = Vector2.Normalize(vector155) * 8f;
-							float ai = ((float)Math.PI * 2f * (float)Main.rand.NextDouble() - (float)Math.PI) / 30f + (float)Math.PI / 180f * num1181;
+							float ai = ((float)Math.PI * 2f * (float)Main.rand.NextDouble() - (float)Math.PI) / 30f + (float)Math.PI / 180f * num1182;
-							Projectile.NewProjectile(vector155.X, vector155.Y, vector156.X, vector156.Y, 452, 30, 0f, Main.myPlayer, 0f, ai);
+							Projectile.NewProjectile(vector156.X, vector156.Y, vector157.X, vector157.Y, 452, 30, 0f, Main.myPlayer, 0f, ai);
 						}
 					}
 					else {
@@ -24260,8 +_,8 @@
 						if (localAI[1] > 0.75f)
 							localAI[1] = 0.75f;
 
-						float num1193 = (float)Math.PI * 2f * (num1182 % (float)(num1190 * num1191)) / (float)(num1190 * num1191) - (float)Math.PI / 2f;
+						float num1194 = (float)Math.PI * 2f * (num1183 % (float)(num1191 * num1192)) / (float)(num1191 * num1192) - (float)Math.PI / 2f;
-						localAI[0] = new Vector2((float)Math.Cos(num1193) * vector151.X, (float)Math.Sin(num1193) * vector151.Y).ToRotation();
+						localAI[0] = new Vector2((float)Math.Cos(num1194) * vector152.X, (float)Math.Sin(num1194) * vector152.Y).ToRotation();
 					}
 				}
 				else if (this.ai[0] == 2f) {
@@ -24270,59 +_,59 @@
 						localAI[1] = 0f;
 
 					Vector2 center17 = Main.npc[(int)this.ai[3]].Center;
-					Vector2 value14 = new Vector2(220f * num1181, -60f) + center17;
+					Vector2 value14 = new Vector2(220f * num1182, -60f) + center17;
-					value14 += new Vector2(num1181 * 100f, -50f);
+					value14 += new Vector2(num1182 * 100f, -50f);
-					Vector2 value15 = new Vector2(400f * num1181, -60f);
+					Vector2 value15 = new Vector2(400f * num1182, -60f);
-					if (num1182 < 30f) {
+					if (num1183 < 30f) {
-						Vector2 vector157 = value14 - base.Center;
+						Vector2 vector158 = value14 - base.Center;
-						if (vector157 != Vector2.Zero) {
+						if (vector158 != Vector2.Zero) {
-							Vector2 vector158 = vector157;
+							Vector2 vector159 = vector158;
-							vector158.Normalize();
+							vector159.Normalize();
-							base.velocity = Vector2.SmoothStep(base.velocity, vector158 * Math.Min(8f, vector157.Length()), 0.2f);
+							base.velocity = Vector2.SmoothStep(base.velocity, vector159 * Math.Min(8f, vector158.Length()), 0.2f);
 						}
 					}
-					else if (num1182 < 210f) {
+					else if (num1183 < 210f) {
-						num1184 = 1;
+						num1185 = 1;
-						int num1194 = (int)num1182 - 30;
+						int num1195 = (int)num1183 - 30;
-						if (num1194 % 30 == 0 && Main.netMode != 1) {
+						if (num1195 % 30 == 0 && Main.netMode != 1) {
-							Vector2 vector159 = new Vector2(5f * num1181, -8f);
+							Vector2 vector160 = new Vector2(5f * num1182, -8f);
-							int num1195 = num1194 / 30;
+							int num1196 = num1195 / 30;
-							vector159.X += ((float)num1195 - 3.5f) * num1181 * 3f;
+							vector160.X += ((float)num1196 - 3.5f) * num1182 * 3f;
-							vector159.Y += ((float)num1195 - 4.5f) * 1f;
+							vector160.Y += ((float)num1196 - 4.5f) * 1f;
-							vector159 *= 1.2f;
+							vector160 *= 1.2f;
-							int num1196 = Projectile.NewProjectile(base.Center.X, base.Center.Y, vector159.X, vector159.Y, 454, 50, 1f, Main.myPlayer, 0f, whoAmI);
+							int num1197 = Projectile.NewProjectile(base.Center.X, base.Center.Y, vector160.X, vector160.Y, 454, 50, 1f, Main.myPlayer, 0f, whoAmI);
 						}
 
-						Vector2 vector160 = Vector2.SmoothStep(value14, value14 + value15, (num1182 - 30f) / 180f) - base.Center;
+						Vector2 vector161 = Vector2.SmoothStep(value14, value14 + value15, (num1183 - 30f) / 180f) - base.Center;
-						if (vector160 != Vector2.Zero) {
+						if (vector161 != Vector2.Zero) {
-							Vector2 vector161 = vector160;
+							Vector2 vector162 = vector161;
-							vector161.Normalize();
+							vector162.Normalize();
-							base.velocity = Vector2.Lerp(base.velocity, vector161 * Math.Min(20f, vector160.Length()), 0.5f);
+							base.velocity = Vector2.Lerp(base.velocity, vector162 * Math.Min(20f, vector161.Length()), 0.5f);
 						}
 					}
-					else if (num1182 < 282f) {
+					else if (num1183 < 282f) {
-						num1184 = 0;
+						num1185 = 0;
 						base.velocity *= 0.9f;
 					}
-					else if (num1182 < 287f) {
+					else if (num1183 < 287f) {
-						num1184 = 1;
+						num1185 = 1;
 						base.velocity *= 0.9f;
 					}
-					else if (num1182 < 292f) {
+					else if (num1183 < 292f) {
-						num1184 = 2;
+						num1185 = 2;
 						base.velocity *= 0.9f;
 					}
-					else if (num1182 < 300f) {
+					else if (num1183 < 300f) {
-						num1184 = 3;
+						num1185 = 3;
-						if (num1182 == 292f && Main.netMode != 1) {
+						if (num1183 == 292f && Main.netMode != 1) {
-							int num1197 = Player.FindClosest(base.position, width, height);
+							int num1198 = Player.FindClosest(base.position, width, height);
-							Vector2 velocity5 = Vector2.Normalize(Main.player[num1197].Center - (base.Center + Vector2.UnitY * -350f));
+							Vector2 velocity5 = Vector2.Normalize(Main.player[num1198].Center - (base.Center + Vector2.UnitY * -350f));
 							if (float.IsNaN(velocity5.X) || float.IsNaN(velocity5.Y))
 								velocity5 = Vector2.UnitY;
 
 							velocity5 *= 12f;
-							for (int num1198 = 0; num1198 < 1000; num1198++) {
+							for (int num1199 = 0; num1199 < 1000; num1199++) {
-								Projectile projectile3 = Main.projectile[num1198];
+								Projectile projectile3 = Main.projectile[num1199];
 								if (projectile3.active && projectile3.type == 454 && projectile3.ai[1] == (float)whoAmI && projectile3.ai[0] != -1f) {
 									projectile3.ai[0] = -1f;
 									projectile3.velocity = velocity5;
@@ -24331,25 +_,25 @@
 							}
 						}
 
-						Vector2 vector162 = Vector2.SmoothStep(value14, value14 + value15, 1f - (num1182 - 270f) / 30f) - base.Center;
+						Vector2 vector163 = Vector2.SmoothStep(value14, value14 + value15, 1f - (num1183 - 270f) / 30f) - base.Center;
-						if (vector162 != Vector2.Zero) {
+						if (vector163 != Vector2.Zero) {
-							Vector2 vector163 = vector162;
+							Vector2 vector164 = vector163;
-							vector163.Normalize();
+							vector164.Normalize();
-							base.velocity = Vector2.Lerp(base.velocity, vector163 * Math.Min(14f, vector162.Length()), 0.1f);
+							base.velocity = Vector2.Lerp(base.velocity, vector164 * Math.Min(14f, vector163.Length()), 0.1f);
 						}
 					}
 					else {
-						num1184 = 3;
+						num1185 = 3;
-						Vector2 vector164 = value14 - base.Center;
+						Vector2 vector165 = value14 - base.Center;
-						if (vector164 != Vector2.Zero) {
+						if (vector165 != Vector2.Zero) {
-							Vector2 vector165 = vector164;
+							Vector2 vector166 = vector165;
-							vector165.Normalize();
+							vector166.Normalize();
-							base.velocity = Vector2.SmoothStep(base.velocity, vector165 * Math.Min(8f, vector164.Length()), 0.2f);
+							base.velocity = Vector2.SmoothStep(base.velocity, vector166 * Math.Min(8f, vector165.Length()), 0.2f);
 						}
 					}
 				}
 				else if (this.ai[0] == 3f) {
-					if (num1182 == 0f) {
+					if (num1183 == 0f) {
 						TargetClosest(faceTarget: false);
 						netUpdate = true;
 					}
@@ -24360,37 +_,37 @@
 					if (localAI[1] > 1f)
 						localAI[1] = 1f;
 
-					if (num1182 == num1183 - 35f)
+					if (num1183 == num1184 - 35f)
 						Main.PlaySound(4, (int)base.position.X, (int)base.position.Y, 6);
 
-					if ((num1182 == num1183 - 14f || num1182 == num1183 - 7f || num1182 == num1183) && Main.netMode != 1) {
+					if ((num1183 == num1184 - 14f || num1183 == num1184 - 7f || num1183 == num1184) && Main.netMode != 1) {
-						Vector2 vector166 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), vector151 * localAI[1]);
+						Vector2 vector167 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), vector152 * localAI[1]);
-						Vector2 vector167 = Vector2.Normalize(v2) * 8f;
+						Vector2 vector168 = Vector2.Normalize(v2) * 8f;
-						Projectile.NewProjectile(base.Center.X + vector166.X, base.Center.Y + vector166.Y, vector167.X, vector167.Y, 462, 30, 0f, Main.myPlayer);
+						Projectile.NewProjectile(base.Center.X + vector167.X, base.Center.Y + vector167.Y, vector168.X, vector168.Y, 462, 30, 0f, Main.myPlayer);
 					}
 				}
 
 				if (flag81) {
 					Vector2 center18 = Main.npc[(int)this.ai[3]].Center;
-					Vector2 value16 = new Vector2(220f * num1181, -60f) + center18;
+					Vector2 value16 = new Vector2(220f * num1182, -60f) + center18;
-					Vector2 vector168 = value16 + new Vector2(num1181 * 110f, -150f);
+					Vector2 vector169 = value16 + new Vector2(num1182 * 110f, -150f);
-					Vector2 max = vector168 + new Vector2(num1181 * 370f, 150f);
+					Vector2 max = vector169 + new Vector2(num1182 * 370f, 150f);
-					if (vector168.X > max.X)
+					if (vector169.X > max.X)
-						Utils.Swap(ref vector168.X, ref max.X);
+						Utils.Swap(ref vector169.X, ref max.X);
 
-					if (vector168.Y > max.Y)
+					if (vector169.Y > max.Y)
-						Utils.Swap(ref vector168.Y, ref max.Y);
+						Utils.Swap(ref vector169.Y, ref max.Y);
 
-					Vector2 value17 = Vector2.Clamp(base.Center + base.velocity, vector168, max);
+					Vector2 value17 = Vector2.Clamp(base.Center + base.velocity, vector169, max);
 					if (value17 != base.Center + base.velocity)
 						base.Center = value17 - base.velocity;
 				}
 
-				int num1199 = num1184 * 7;
+				int num1200 = num1185 * 7;
-				if ((double)num1199 > frameCounter)
+				if ((double)num1200 > frameCounter)
 					frameCounter++;
 
-				if ((double)num1199 < frameCounter)
+				if ((double)num1200 < frameCounter)
 					frameCounter--;
 
 				if (frameCounter < 0.0)
@@ -24399,11 +_,11 @@
 				if (frameCounter > 21.0)
 					frameCounter = 21.0;
 
-				int num1200 = 0;
+				int num1201 = 0;
 				if (flag80)
-					num1200 = 0;
+					num1201 = 0;
 
-				switch (num1200) {
+				switch (num1201) {
 					case 1:
 						if (this.ai[0] == 0f) {
 							if ((this.ai[1] += 1f) >= 20f) {
@@ -24449,33 +_,33 @@
 						}
 						break;
 					case 2: {
-							Vector2 vector169 = new Vector2(30f, 66f);
+							Vector2 vector170 = new Vector2(30f, 66f);
 							TargetClosest(faceTarget: false);
 							Vector2 v3 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - base.Center;
-							float num1201 = v3.Length() / 200f;
+							float num1202 = v3.Length() / 200f;
-							if (num1201 > 1f)
+							if (num1202 > 1f)
-								num1201 = 1f;
+								num1202 = 1f;
 
-							num1201 = 1f - num1201;
+							num1202 = 1f - num1202;
-							num1201 *= 2f;
+							num1202 *= 2f;
-							if (num1201 > 1f)
+							if (num1202 > 1f)
-								num1201 = 1f;
+								num1202 = 1f;
 
 							localAI[0] = v3.ToRotation();
-							localAI[1] = num1201;
+							localAI[1] = num1202;
 							localAI[1] = 1f;
 							break;
 						}
 					case 3: {
-							int num1207 = 7;
+							int num1208 = 7;
-							int num1208 = 4;
+							int num1209 = 4;
 							this.ai[1]++;
-							if (this.ai[1] >= (float)(num1207 * num1208 * 10)) {
+							if (this.ai[1] >= (float)(num1208 * num1209 * 10)) {
 								this.ai[1] = 0f;
 								break;
 							}
 
-							if (this.ai[1] >= (float)(num1207 * num1208)) {
+							if (this.ai[1] >= (float)(num1208 * num1209)) {
 								localAI[1] -= 0.07f;
 								if (localAI[1] < 0f)
 									localAI[1] = 0f;
@@ -24487,49 +_,49 @@
 							if (localAI[1] > 0.75f)
 								localAI[1] = 0.75f;
 
-							float num1209 = (float)Math.PI * 2f * (this.ai[1] % (float)(num1207 * num1208)) / (float)(num1207 * num1208) - (float)Math.PI / 2f;
+							float num1210 = (float)Math.PI * 2f * (this.ai[1] % (float)(num1208 * num1209)) / (float)(num1208 * num1209) - (float)Math.PI / 2f;
-							localAI[0] = new Vector2((float)Math.Cos(num1209) * vector151.X, (float)Math.Sin(num1209) * vector151.Y).ToRotation();
+							localAI[0] = new Vector2((float)Math.Cos(num1210) * vector152.X, (float)Math.Sin(num1210) * vector152.Y).ToRotation();
-							if (this.ai[1] % (float)num1208 == 0f) {
+							if (this.ai[1] % (float)num1209 == 0f) {
-								Vector2 value20 = new Vector2(1f * (0f - num1181), 3f);
+								Vector2 value20 = new Vector2(1f * (0f - num1182), 3f);
-								Vector2 vector177 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), vector151 * localAI[1]);
+								Vector2 vector178 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), vector152 * localAI[1]);
-								Vector2 vector178 = base.Center + Vector2.Normalize(vector177) * vector151.Length() * 0.4f + value20;
+								Vector2 vector179 = base.Center + Vector2.Normalize(vector178) * vector152.Length() * 0.4f + value20;
-								Vector2 vector179 = Vector2.Normalize(vector177) * 8f;
+								Vector2 vector180 = Vector2.Normalize(vector178) * 8f;
-								float ai2 = ((float)Math.PI * 2f * (float)Main.rand.NextDouble() - (float)Math.PI) / 30f + (float)Math.PI / 180f * num1181;
+								float ai2 = ((float)Math.PI * 2f * (float)Main.rand.NextDouble() - (float)Math.PI) / 30f + (float)Math.PI / 180f * num1182;
-								Projectile.NewProjectile(vector178.X, vector178.Y, vector179.X, vector179.Y, 452, 5, 0f, Main.myPlayer, 0f, ai2);
+								Projectile.NewProjectile(vector179.X, vector179.Y, vector180.X, vector180.Y, 452, 5, 0f, Main.myPlayer, 0f, ai2);
 							}
 
 							break;
 						}
 					case 4: {
 							Vector2 center19 = Main.npc[(int)this.ai[3]].Center;
-							Vector2 value18 = new Vector2(220f * num1181, -60f) + center19;
+							Vector2 value18 = new Vector2(220f * num1182, -60f) + center19;
-							value18 += new Vector2(num1181 * 100f, -50f);
+							value18 += new Vector2(num1182 * 100f, -50f);
-							Vector2 value19 = new Vector2(400f * num1181, -60f);
+							Vector2 value19 = new Vector2(400f * num1182, -60f);
 							this.ai[1]++;
 							if (this.ai[1] < 30f) {
-								Vector2 vector170 = value18 - base.Center;
+								Vector2 vector171 = value18 - base.Center;
-								if (vector170 != Vector2.Zero) {
+								if (vector171 != Vector2.Zero) {
-									Vector2 vector171 = vector170;
+									Vector2 vector172 = vector171;
-									vector171.Normalize();
+									vector172.Normalize();
-									base.velocity = Vector2.SmoothStep(base.velocity, vector171 * Math.Min(8f, vector170.Length()), 0.2f);
+									base.velocity = Vector2.SmoothStep(base.velocity, vector172 * Math.Min(8f, vector171.Length()), 0.2f);
 								}
 							}
 							else if (this.ai[1] < 210f) {
-								int num1202 = (int)this.ai[1] - 30;
+								int num1203 = (int)this.ai[1] - 30;
-								if (num1202 % 30 == 0 && Main.netMode != 1) {
+								if (num1203 % 30 == 0 && Main.netMode != 1) {
-									Vector2 vector172 = new Vector2(5f * num1181, -8f);
+									Vector2 vector173 = new Vector2(5f * num1182, -8f);
-									int num1203 = num1202 / 30;
+									int num1204 = num1203 / 30;
-									vector172.X += ((float)num1203 - 3.5f) * num1181 * 3f;
+									vector173.X += ((float)num1204 - 3.5f) * num1182 * 3f;
-									vector172.Y += ((float)num1203 - 4.5f) * 1f;
+									vector173.Y += ((float)num1204 - 4.5f) * 1f;
-									vector172 *= 1.2f;
+									vector173 *= 1.2f;
-									int num1204 = Projectile.NewProjectile(base.Center.X, base.Center.Y, vector172.X, vector172.Y, 454, 1, 1f, Main.myPlayer, 0f, whoAmI);
+									int num1205 = Projectile.NewProjectile(base.Center.X, base.Center.Y, vector173.X, vector173.Y, 454, 1, 1f, Main.myPlayer, 0f, whoAmI);
 								}
 
-								Vector2 vector173 = Vector2.SmoothStep(value18, value18 + value19, (this.ai[1] - 30f) / 180f) - base.Center;
+								Vector2 vector174 = Vector2.SmoothStep(value18, value18 + value19, (this.ai[1] - 30f) / 180f) - base.Center;
-								if (vector173 != Vector2.Zero) {
+								if (vector174 != Vector2.Zero) {
-									Vector2 vector174 = vector173;
+									Vector2 vector175 = vector174;
-									vector174.Normalize();
+									vector175.Normalize();
-									base.velocity = Vector2.Lerp(base.velocity, vector174 * Math.Min(4f, vector173.Length()), 0.1f);
+									base.velocity = Vector2.Lerp(base.velocity, vector175 * Math.Min(4f, vector174.Length()), 0.1f);
 								}
 							}
 							else if (this.ai[1] < 270f) {
@@ -24537,14 +_,14 @@
 							}
 							else if (this.ai[1] < 300f) {
 								if (this.ai[1] == 270f && Main.netMode != 1) {
-									int num1205 = Player.FindClosest(base.position, width, height);
+									int num1206 = Player.FindClosest(base.position, width, height);
-									Vector2 velocity6 = Vector2.Normalize(Main.player[num1205].Center - (base.Center + Vector2.UnitY * -350f));
+									Vector2 velocity6 = Vector2.Normalize(Main.player[num1206].Center - (base.Center + Vector2.UnitY * -350f));
 									if (float.IsNaN(velocity6.X) || float.IsNaN(velocity6.Y))
 										velocity6 = Vector2.UnitY;
 
 									velocity6 *= 12f;
-									for (int num1206 = 0; num1206 < 1000; num1206++) {
+									for (int num1207 = 0; num1207 < 1000; num1207++) {
-										Projectile projectile4 = Main.projectile[num1206];
+										Projectile projectile4 = Main.projectile[num1207];
 										if (projectile4.active && projectile4.type == 454 && projectile4.ai[1] == (float)whoAmI && projectile4.ai[0] != -1f) {
 											projectile4.ai[0] = -1f;
 											projectile4.velocity = velocity6;
@@ -24553,11 +_,11 @@
 									}
 								}
 
-								Vector2 vector175 = Vector2.SmoothStep(value18, value18 + value19, 1f - (this.ai[1] - 270f) / 30f) - base.Center;
+								Vector2 vector176 = Vector2.SmoothStep(value18, value18 + value19, 1f - (this.ai[1] - 270f) / 30f) - base.Center;
-								if (vector175 != Vector2.Zero) {
+								if (vector176 != Vector2.Zero) {
-									Vector2 vector176 = vector175;
+									Vector2 vector177 = vector176;
-									vector176.Normalize();
+									vector177.Normalize();
-									base.velocity = Vector2.Lerp(base.velocity, vector176 * Math.Min(14f, vector175.Length()), 0.1f);
+									base.velocity = Vector2.Lerp(base.velocity, vector177 * Math.Min(14f, vector176.Length()), 0.1f);
 								}
 							}
 							else {
@@ -24585,35 +_,35 @@
 				base.velocity = Vector2.Zero;
 				base.Center = Main.npc[(int)this.ai[3]].Center + new Vector2(0f, -400f);
 				Vector2 value21 = new Vector2(27f, 59f);
-				float num1210 = 0f;
 				float num1211 = 0f;
-				int num1212 = 0;
+				float num1212 = 0f;
 				int num1213 = 0;
+				int num1214 = 0;
 				if (this.ai[0] >= 0f) {
-					float num1214 = this.ai[0];
+					float num1215 = this.ai[0];
 					this.ai[1]++;
-					int num1215 = (int)Main.npc[(int)this.ai[3]].ai[2];
+					int num1216 = (int)Main.npc[(int)this.ai[3]].ai[2];
-					int num1216 = 2;
+					int num1217 = 2;
-					int num1217 = 0;
 					int num1218 = 0;
+					int num1219 = 0;
-					for (; num1217 < 5; num1217++) {
+					for (; num1218 < 5; num1218++) {
-						num1211 = MoonLordAttacksArray[num1215, num1216, 1, num1217];
+						num1212 = MoonLordAttacksArray[num1216, num1217, 1, num1218];
-						if (!(num1211 + (float)num1218 <= this.ai[1]))
+						if (!(num1212 + (float)num1219 <= this.ai[1]))
 							break;
 
-						num1218 += (int)num1211;
+						num1219 += (int)num1212;
 					}
 
-					if (num1217 == 5) {
+					if (num1218 == 5) {
-						num1217 = 0;
-						this.ai[1] = 0f;
-						num1211 = MoonLordAttacksArray[num1215, num1216, 1, num1217];
 						num1218 = 0;
+						this.ai[1] = 0f;
+						num1212 = MoonLordAttacksArray[num1216, num1217, 1, num1218];
+						num1219 = 0;
 					}
 
-					this.ai[0] = MoonLordAttacksArray[num1215, num1216, 0, num1217];
+					this.ai[0] = MoonLordAttacksArray[num1216, num1217, 0, num1218];
-					num1210 = (int)this.ai[1] - num1218;
+					num1211 = (int)this.ai[1] - num1219;
-					if (this.ai[0] != num1214)
+					if (this.ai[0] != num1215)
 						netUpdate = true;
 				}
 
@@ -24651,97 +_,97 @@
 						this.ai[2] = 0f;
 
 					if (this.ai[2] >= 120f) {
-						num1210 = this.ai[2] - 120f;
+						num1211 = this.ai[2] - 120f;
-						num1211 = 555f;
+						num1212 = 555f;
-						num1212 = 2;
+						num1213 = 2;
 						Vector2 value22 = new Vector2(0f, 216f);
-						if (num1210 == 0f && Main.netMode != 1) {
+						if (num1211 == 0f && Main.netMode != 1) {
 							Vector2 value23 = base.Center + value22;
-							for (int num1219 = 0; num1219 < 255; num1219++) {
+							for (int num1220 = 0; num1220 < 255; num1220++) {
-								Player player5 = Main.player[num1219];
+								Player player5 = Main.player[num1220];
 								if (player5.active && !player5.dead && Vector2.Distance(player5.Center, value23) <= 3000f) {
 									Vector2 value24 = Main.player[target].Center - value23;
 									if (value24 != Vector2.Zero)
 										value24.Normalize();
 
-									Projectile.NewProjectile(value23.X, value23.Y, value24.X, value24.Y, 456, 0, 0f, Main.myPlayer, whoAmI + 1, num1219);
+									Projectile.NewProjectile(value23.X, value23.Y, value24.X, value24.Y, 456, 0, 0f, Main.myPlayer, whoAmI + 1, num1220);
 								}
 							}
 						}
 
-						if ((num1210 == 120f || num1210 == 180f || num1210 == 240f) && Main.netMode != 1) {
+						if ((num1211 == 120f || num1211 == 180f || num1211 == 240f) && Main.netMode != 1) {
-							for (int num1220 = 0; num1220 < 1000; num1220++) {
+							for (int num1221 = 0; num1221 < 1000; num1221++) {
-								Projectile projectile5 = Main.projectile[num1220];
+								Projectile projectile5 = Main.projectile[num1221];
 								if (projectile5.active && projectile5.type == 456 && Main.player[(int)projectile5.ai[1]].FindBuffIndex(145) != -1) {
 									Vector2 center20 = Main.player[target].Center;
-									int num1221 = NewNPC((int)center20.X, (int)center20.Y, 401);
+									int num1222 = NewNPC((int)center20.X, (int)center20.Y, 401);
-									Main.npc[num1221].netUpdate = true;
+									Main.npc[num1222].netUpdate = true;
-									Main.npc[num1221].ai[0] = whoAmI + 1;
+									Main.npc[num1222].ai[0] = whoAmI + 1;
-									Main.npc[num1221].ai[1] = num1220;
+									Main.npc[num1222].ai[1] = num1221;
 								}
 							}
 						}
 					}
 				}
 				else if (this.ai[0] == 0f) {
-					num1213 = 3;
+					num1214 = 3;
 					TargetClosest(faceTarget: false);
 					Vector2 v4 = Main.player[target].Center - base.Center - new Vector2(0f, -22f);
-					float num1222 = v4.Length() / 500f;
+					float num1223 = v4.Length() / 500f;
-					if (num1222 > 1f)
+					if (num1223 > 1f)
-						num1222 = 1f;
+						num1223 = 1f;
 
-					num1222 = 1f - num1222;
+					num1223 = 1f - num1223;
-					num1222 *= 2f;
+					num1223 *= 2f;
-					if (num1222 > 1f)
+					if (num1223 > 1f)
-						num1222 = 1f;
+						num1223 = 1f;
 
 					localAI[0] = v4.ToRotation();
-					localAI[1] = num1222;
+					localAI[1] = num1223;
 					localAI[2] = MathHelper.Lerp(localAI[2], 1f, 0.2f);
 				}
 
 				if (this.ai[0] == 1f) {
-					if (num1210 < 180f) {
+					if (num1211 < 180f) {
 						localAI[1] -= 0.05f;
 						if (localAI[1] < 0f)
 							localAI[1] = 0f;
 
-						if (num1210 >= 60f) {
+						if (num1211 >= 60f) {
 							Vector2 center21 = base.Center;
-							int num1223 = 0;
+							int num1224 = 0;
-							if (num1210 >= 120f)
+							if (num1211 >= 120f)
-								num1223 = 1;
+								num1224 = 1;
 
-							for (int num1224 = 0; num1224 < 1 + num1223; num1224++) {
+							for (int num1225 = 0; num1225 < 1 + num1224; num1225++) {
-								int num1225 = 229;
+								int num1226 = 229;
-								float num1226 = 0.8f;
+								float num1227 = 0.8f;
-								if (num1224 % 2 == 1) {
+								if (num1225 % 2 == 1) {
-									num1225 = 229;
+									num1226 = 229;
-									num1226 = 1.65f;
+									num1227 = 1.65f;
 								}
 
-								Vector2 vector180 = center21 + ((float)Main.rand.NextDouble() * ((float)Math.PI * 2f)).ToRotationVector2() * value21 / 2f;
+								Vector2 vector181 = center21 + ((float)Main.rand.NextDouble() * ((float)Math.PI * 2f)).ToRotationVector2() * value21 / 2f;
-								int num1227 = Dust.NewDust(vector180 - Vector2.One * 8f, 16, 16, num1225, base.velocity.X / 2f, base.velocity.Y / 2f);
+								int num1228 = Dust.NewDust(vector181 - Vector2.One * 8f, 16, 16, num1226, base.velocity.X / 2f, base.velocity.Y / 2f);
-								Main.dust[num1227].velocity = Vector2.Normalize(center21 - vector180) * 3.5f * (10f - (float)num1223 * 2f) / 10f;
+								Main.dust[num1228].velocity = Vector2.Normalize(center21 - vector181) * 3.5f * (10f - (float)num1224 * 2f) / 10f;
-								Main.dust[num1227].noGravity = true;
+								Main.dust[num1228].noGravity = true;
-								Main.dust[num1227].scale = num1226;
+								Main.dust[num1228].scale = num1227;
-								Main.dust[num1227].customData = this;
+								Main.dust[num1228].customData = this;
 							}
 						}
 					}
-					else if (num1210 < num1211 - 15f) {
+					else if (num1211 < num1212 - 15f) {
-						if (num1210 == 180f && Main.netMode != 1) {
+						if (num1211 == 180f && Main.netMode != 1) {
 							TargetClosest(faceTarget: false);
 							Vector2 spinningpoint8 = Main.player[target].Center - base.Center;
 							spinningpoint8.Normalize();
-							float num1228 = -1f;
+							float num1229 = -1f;
 							if (spinningpoint8.X < 0f)
-								num1228 = 1f;
+								num1229 = 1f;
 
-							spinningpoint8 = spinningpoint8.RotatedBy((0f - num1228) * ((float)Math.PI * 2f) / 6f);
+							spinningpoint8 = spinningpoint8.RotatedBy((0f - num1229) * ((float)Math.PI * 2f) / 6f);
-							Projectile.NewProjectile(base.Center.X, base.Center.Y, spinningpoint8.X, spinningpoint8.Y, 455, 75, 0f, Main.myPlayer, num1228 * ((float)Math.PI * 2f) / 540f, whoAmI);
+							Projectile.NewProjectile(base.Center.X, base.Center.Y, spinningpoint8.X, spinningpoint8.Y, 455, 75, 0f, Main.myPlayer, num1229 * ((float)Math.PI * 2f) / 540f, whoAmI);
-							this.ai[2] = (spinningpoint8.ToRotation() + (float)Math.PI * 3f) * num1228;
+							this.ai[2] = (spinningpoint8.ToRotation() + (float)Math.PI * 3f) * num1229;
 							netUpdate = true;
 						}
 
@@ -24749,57 +_,57 @@
 						if (localAI[1] > 1f)
 							localAI[1] = 1f;
 
-						float num1229 = (this.ai[2] >= 0f).ToDirectionInt();
+						float num1230 = (this.ai[2] >= 0f).ToDirectionInt();
-						float num1230 = this.ai[2];
+						float num1231 = this.ai[2];
-						if (num1230 < 0f)
+						if (num1231 < 0f)
-							num1230 *= -1f;
+							num1231 *= -1f;
 
-						num1230 += (float)Math.PI * -3f;
+						num1231 += (float)Math.PI * -3f;
-						num1230 += num1229 * ((float)Math.PI * 2f) / 540f;
+						num1231 += num1230 * ((float)Math.PI * 2f) / 540f;
-						localAI[0] = num1230;
+						localAI[0] = num1231;
-						this.ai[2] = (num1230 + (float)Math.PI * 3f) * num1229;
+						this.ai[2] = (num1231 + (float)Math.PI * 3f) * num1230;
 					}
 					else {
 						localAI[1] -= 0.07f;
 						if (localAI[1] < 0f)
 							localAI[1] = 0f;
 
-						num1213 = 3;
+						num1214 = 3;
 					}
 				}
 				else if (this.ai[0] == 2f) {
-					num1212 = 2;
+					num1213 = 2;
-					num1213 = 3;
+					num1214 = 3;
 					Vector2 value25 = new Vector2(0f, 216f);
-					if (num1210 == 0f && Main.netMode != 1) {
+					if (num1211 == 0f && Main.netMode != 1) {
 						Vector2 value26 = base.Center + value25;
-						for (int num1231 = 0; num1231 < 255; num1231++) {
+						for (int num1232 = 0; num1232 < 255; num1232++) {
-							Player player6 = Main.player[num1231];
+							Player player6 = Main.player[num1232];
 							if (player6.active && !player6.dead && Vector2.Distance(player6.Center, value26) <= 3000f) {
 								Vector2 value27 = Main.player[target].Center - value26;
 								if (value27 != Vector2.Zero)
 									value27.Normalize();
 
-								Projectile.NewProjectile(value26.X, value26.Y, value27.X, value27.Y, 456, 0, 0f, Main.myPlayer, whoAmI + 1, num1231);
+								Projectile.NewProjectile(value26.X, value26.Y, value27.X, value27.Y, 456, 0, 0f, Main.myPlayer, whoAmI + 1, num1232);
 							}
 						}
 					}
 
-					if ((num1210 == 120f || num1210 == 180f || num1210 == 240f) && Main.netMode != 1) {
+					if ((num1211 == 120f || num1211 == 180f || num1211 == 240f) && Main.netMode != 1) {
-						for (int num1232 = 0; num1232 < 1000; num1232++) {
+						for (int num1233 = 0; num1233 < 1000; num1233++) {
-							Projectile projectile6 = Main.projectile[num1232];
+							Projectile projectile6 = Main.projectile[num1233];
 							if (projectile6.active && projectile6.type == 456 && Main.player[(int)projectile6.ai[1]].FindBuffIndex(145) != -1) {
 								Vector2 center22 = Main.player[target].Center;
-								int num1233 = NewNPC((int)center22.X, (int)center22.Y, 401);
+								int num1234 = NewNPC((int)center22.X, (int)center22.Y, 401);
-								Main.npc[num1233].netUpdate = true;
+								Main.npc[num1234].netUpdate = true;
-								Main.npc[num1233].ai[0] = whoAmI + 1;
+								Main.npc[num1234].ai[0] = whoAmI + 1;
-								Main.npc[num1233].ai[1] = num1232;
+								Main.npc[num1234].ai[1] = num1233;
 							}
 						}
 					}
 				}
 				else if (this.ai[0] == 3f) {
-					if (num1210 == 0f) {
+					if (num1211 == 0f) {
 						TargetClosest(faceTarget: false);
 						netUpdate = true;
 					}
@@ -24810,21 +_,21 @@
 					if (localAI[1] > 1f)
 						localAI[1] = 1f;
 
-					if (num1210 == num1211 - 35f)
+					if (num1211 == num1212 - 35f)
 						Main.PlaySound(4, (int)base.position.X, (int)base.position.Y, 6);
 
-					if ((num1210 == num1211 - 14f || num1210 == num1211 - 7f || num1210 == num1211) && Main.netMode != 1) {
+					if ((num1211 == num1212 - 14f || num1211 == num1212 - 7f || num1211 == num1212) && Main.netMode != 1) {
-						Vector2 vector181 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), value21 * localAI[1]);
+						Vector2 vector182 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), value21 * localAI[1]);
-						Vector2 vector182 = Vector2.Normalize(v5) * 8f;
+						Vector2 vector183 = Vector2.Normalize(v5) * 8f;
-						Projectile.NewProjectile(base.Center.X + vector181.X, base.Center.Y + vector181.Y, vector182.X, vector182.Y, 462, 30, 0f, Main.myPlayer);
+						Projectile.NewProjectile(base.Center.X + vector182.X, base.Center.Y + vector182.Y, vector183.X, vector183.Y, 462, 30, 0f, Main.myPlayer);
 					}
 				}
 
-				int num1234 = num1212 * 7;
+				int num1235 = num1213 * 7;
-				if ((float)num1234 > localAI[2])
+				if ((float)num1235 > localAI[2])
 					localAI[2]++;
 
-				if ((float)num1234 < localAI[2])
+				if ((float)num1235 < localAI[2])
 					localAI[2]--;
 
 				if (localAI[2] < 0f)
@@ -24833,11 +_,11 @@
 				if (localAI[2] > 14f)
 					localAI[2] = 14f;
 
-				int num1235 = num1213 * 5;
+				int num1236 = num1214 * 5;
-				if ((float)num1235 > localAI[3])
+				if ((float)num1236 > localAI[3])
 					localAI[3]++;
 
-				if ((float)num1235 < localAI[3])
+				if ((float)num1236 < localAI[3])
 					localAI[3]--;
 
 				if (localAI[3] < 0f)
@@ -24846,34 +_,34 @@
 				if (localAI[3] > 15f)
 					localAI[2] = 15f;
 
-				int num1236 = 0;
+				int num1237 = 0;
-				if (num1236 == 1) {
+				if (num1237 == 1) {
-					Vector2 vector183 = new Vector2(27f, 59f);
+					Vector2 vector184 = new Vector2(27f, 59f);
 					TargetClosest(faceTarget: false);
 					Vector2 v6 = Main.screenPosition + new Vector2(Main.mouseX, Main.mouseY) - base.Center;
-					float num1237 = v6.Length() / 200f;
+					float num1238 = v6.Length() / 200f;
-					if (num1237 > 1f)
+					if (num1238 > 1f)
-						num1237 = 1f;
+						num1238 = 1f;
 
-					num1237 = 1f - num1237;
+					num1238 = 1f - num1238;
-					num1237 *= 2f;
+					num1238 *= 2f;
-					if (num1237 > 1f)
+					if (num1238 > 1f)
-						num1237 = 1f;
+						num1238 = 1f;
 
 					localAI[0] = v6.ToRotation();
-					localAI[1] = num1237;
+					localAI[1] = num1238;
 					localAI[1] = 1f;
 				}
 
-				if (num1236 == 2) {
+				if (num1237 == 2) {
-					Vector2 vector184 = new Vector2(27f, 59f);
+					Vector2 vector185 = new Vector2(27f, 59f);
-					float num1238 = (float)Math.PI * 2f * ((float)Main.time % 600f) / 600f;
+					float num1239 = (float)Math.PI * 2f * ((float)Main.time % 600f) / 600f;
-					localAI[0] = new Vector2((float)Math.Cos(num1238) * vector184.X, (float)Math.Sin(num1238) * vector184.Y).ToRotation();
+					localAI[0] = new Vector2((float)Math.Cos(num1239) * vector185.X, (float)Math.Sin(num1239) * vector185.Y).ToRotation();
 					localAI[1] = 0.75f;
 					if (this.ai[1] == 0f) {
-						Vector2 vector185 = num1238.ToRotationVector2();
+						Vector2 vector186 = num1239.ToRotationVector2();
-						vector185 = Vector2.One;
+						vector186 = Vector2.One;
-						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector185.X, vector185.Y, 455, 1, 0f, Main.myPlayer, (float)Math.PI / 300f, whoAmI);
+						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector186.X, vector186.Y, 455, 1, 0f, Main.myPlayer, (float)Math.PI / 300f, whoAmI);
 					}
 
 					this.ai[1]++;
@@ -24881,13 +_,13 @@
 						this.ai[1] = 0f;
 				}
 
-				if (num1236 == 3) {
+				if (num1237 == 3) {
-					Vector2 vector186 = new Vector2(0f, 216f);
+					Vector2 vector187 = new Vector2(0f, 216f);
 					if (this.ai[1] == 0f) {
 						TargetClosest(faceTarget: false);
-						Vector2 vector187 = Main.player[target].Center - base.Center;
+						Vector2 vector188 = Main.player[target].Center - base.Center;
-						vector187.Normalize();
+						vector188.Normalize();
-						Projectile.NewProjectile(base.Center.X + vector186.X, base.Center.Y + vector186.Y, vector187.X, vector187.Y, 456, 0, 0f, Main.myPlayer, whoAmI + 1, target);
+						Projectile.NewProjectile(base.Center.X + vector187.X, base.Center.Y + vector187.Y, vector188.X, vector188.Y, 456, 0, 0f, Main.myPlayer, whoAmI + 1, target);
 					}
 
 					this.ai[1]++;
@@ -24895,8 +_,8 @@
 						this.ai[1] = 0f;
 				}
 
-				if (num1236 == 4) {
+				if (num1237 == 4) {
-					Vector2 vector188 = new Vector2(27f, 59f);
+					Vector2 vector189 = new Vector2(27f, 59f);
 					TargetClosest(faceTarget: false);
 					Vector2 v7 = Main.player[target].Center + Main.player[target].velocity * 20f - base.Center;
 					localAI[0] = localAI[0].AngleLerp(v7.ToRotation(), 0.5f);
@@ -24906,9 +_,9 @@
 						Main.PlaySound(4, (int)base.position.X, (int)base.position.Y, 6);
 
 					if (this.ai[1] == 76f || this.ai[1] == 83f || this.ai[1] == 90f) {
-						Vector2 vector189 = Utils.Vector2FromElipse(elipseSizes: new Vector2(27f, 59f) * localAI[1], angleVector: localAI[0].ToRotationVector2());
+						Vector2 vector190 = Utils.Vector2FromElipse(elipseSizes: new Vector2(27f, 59f) * localAI[1], angleVector: localAI[0].ToRotationVector2());
-						Vector2 vector190 = Vector2.Normalize(v7) * 8f;
+						Vector2 vector191 = Vector2.Normalize(v7) * 8f;
-						Projectile.NewProjectile(base.Center.X + vector189.X, base.Center.Y + vector189.Y, vector190.X, vector190.Y, 462, 5, 0f, Main.myPlayer);
+						Projectile.NewProjectile(base.Center.X + vector190.X, base.Center.Y + vector190.Y, vector191.X, vector191.Y, 462, 5, 0f, Main.myPlayer);
 					}
 
 					if (this.ai[1] >= 90f)
@@ -24930,29 +_,29 @@
 					base.velocity.X = 3f * (float)base.direction;
 					Vector2 center23 = base.Center;
 					Point point8 = center23.ToTileCoordinates();
-					int num1239 = 30;
+					int num1240 = 30;
 					if (WorldGen.InWorld(point8.X, point8.Y, 30)) {
-						for (int num1240 = 0; num1240 < 30; num1240++) {
+						for (int num1241 = 0; num1241 < 30; num1241++) {
-							if (WorldGen.SolidTile(point8.X, point8.Y + num1240)) {
+							if (WorldGen.SolidTile(point8.X, point8.Y + num1241)) {
-								num1239 = num1240;
+								num1240 = num1241;
 								break;
 							}
 						}
 					}
 
-					if (num1239 < 15)
+					if (num1240 < 15)
 						base.velocity.Y = Math.Max(base.velocity.Y - 0.05f, -3.5f);
-					else if (num1239 < 20)
+					else if (num1240 < 20)
 						base.velocity.Y *= 0.95f;
 					else
 						base.velocity.Y = Math.Min(base.velocity.Y + 0.05f, 1.5f);
 
 					float distanceToPlayer;
-					int num1241 = FindClosestPlayer(out distanceToPlayer);
+					int num1242 = FindClosestPlayer(out distanceToPlayer);
-					if (num1241 == -1 || Main.player[num1241].dead)
+					if (num1242 == -1 || Main.player[num1242].dead)
 						return;
 
-					if (distanceToPlayer < 352f && Main.player[num1241].Center.Y > base.Center.Y) {
+					if (distanceToPlayer < 352f && Main.player[num1242].Center.Y > base.Center.Y) {
 						this.ai[0] = 1f;
 						this.ai[1] = 0f;
 						netUpdate = true;
@@ -24964,9 +_,9 @@
 					if (this.ai[1] >= 60f) {
 						this.ai[1] = 0f;
 						this.ai[0] = 2f;
-						int num1242 = FindClosestPlayer();
+						int num1243 = FindClosestPlayer();
-						if (num1242 != -1)
+						if (num1243 != -1)
-							this.ai[3] = ((Main.player[num1242].Center.X > base.Center.X) ? (-1f) : 1f);
+							this.ai[3] = ((Main.player[num1243].Center.X > base.Center.X) ? (-1f) : 1f);
 						else
 							this.ai[3] = 1f;
 
@@ -25003,30 +_,30 @@
 					active = false;
 				}
 
-				float num1243 = 0f;
 				float num1244 = 0f;
+				float num1245 = 0f;
-				float num1245 = this.ai[0];
+				float num1246 = this.ai[0];
 				this.ai[1]++;
-				int num1246 = 0;
 				int num1247 = 0;
+				int num1248 = 0;
-				for (; num1246 < 10; num1246++) {
+				for (; num1247 < 10; num1247++) {
-					num1244 = MoonLordAttacksArray2[1, num1246];
+					num1245 = MoonLordAttacksArray2[1, num1247];
-					if (!(num1244 + (float)num1247 <= this.ai[1]))
+					if (!(num1245 + (float)num1248 <= this.ai[1]))
 						break;
 
-					num1247 += (int)num1244;
+					num1248 += (int)num1245;
 				}
 
-				if (num1246 == 10) {
+				if (num1247 == 10) {
-					num1246 = 0;
-					this.ai[1] = 0f;
-					num1244 = MoonLordAttacksArray2[1, num1246];
 					num1247 = 0;
+					this.ai[1] = 0f;
+					num1245 = MoonLordAttacksArray2[1, num1247];
+					num1248 = 0;
 				}
 
-				this.ai[0] = MoonLordAttacksArray2[0, num1246];
+				this.ai[0] = MoonLordAttacksArray2[0, num1247];
-				num1243 = (int)this.ai[1] - num1247;
+				num1244 = (int)this.ai[1] - num1248;
-				if (this.ai[0] != num1245)
+				if (this.ai[0] != num1246)
 					netUpdate = true;
 
 				if (this.ai[0] == -1f) {
@@ -25034,29 +_,29 @@
 					if (this.ai[1] > 180f)
 						this.ai[1] = 0f;
 
-					float num1248 = 1f;
+					float num1249 = 1f;
 					if (this.ai[1] < 60f) {
-						num1248 = 0.75f;
+						num1249 = 0.75f;
 						localAI[0] = 0f;
 						localAI[1] = (float)Math.Sin(this.ai[1] * ((float)Math.PI * 2f) / 15f) * 0.35f;
 						if (localAI[1] < 0f)
 							localAI[0] = (float)Math.PI;
 					}
 					else if (this.ai[1] < 120f) {
-						num1248 = 1f;
+						num1249 = 1f;
 						if (localAI[1] < 0.5f)
 							localAI[1] += 0.025f;
 
 						localAI[0] += (float)Math.PI / 15f;
 					}
 					else {
-						num1248 = 1.15f;
+						num1249 = 1.15f;
 						localAI[1] -= 0.05f;
 						if (localAI[1] < 0f)
 							localAI[1] = 0f;
 					}
 
-					localAI[2] = MathHelper.Lerp(localAI[2], num1248, 0.3f);
+					localAI[2] = MathHelper.Lerp(localAI[2], num1249, 0.3f);
 				}
 
 				if (this.ai[0] == 0f) {
@@ -25072,28 +_,28 @@
 					Vector2 center24 = base.Center;
 					Vector2 center25 = Main.player[target].Center;
 					Vector2 value29 = center25 - center24;
-					Vector2 vector191 = value29 - Vector2.UnitY * 200f;
+					Vector2 vector192 = value29 - Vector2.UnitY * 200f;
-					vector191 = Vector2.Normalize(vector191) * scaleFactor7;
+					vector192 = Vector2.Normalize(vector192) * scaleFactor7;
-					int num1249 = 30;
+					int num1250 = 30;
-					base.velocity.X = (base.velocity.X * (float)(num1249 - 1) + vector191.X) / (float)num1249;
+					base.velocity.X = (base.velocity.X * (float)(num1250 - 1) + vector192.X) / (float)num1250;
-					base.velocity.Y = (base.velocity.Y * (float)(num1249 - 1) + vector191.Y) / (float)num1249;
+					base.velocity.Y = (base.velocity.Y * (float)(num1250 - 1) + vector192.Y) / (float)num1250;
-					float num1250 = 0.25f;
+					float num1251 = 0.25f;
-					for (int num1251 = 0; num1251 < 200; num1251++) {
+					for (int num1252 = 0; num1252 < 200; num1252++) {
-						if (num1251 != whoAmI && Main.npc[num1251].active && Main.npc[num1251].type == 400 && Vector2.Distance(base.Center, Main.npc[num1251].Center) < 150f) {
+						if (num1252 != whoAmI && Main.npc[num1252].active && Main.npc[num1252].type == 400 && Vector2.Distance(base.Center, Main.npc[num1252].Center) < 150f) {
-							if (base.position.X < Main.npc[num1251].position.X)
+							if (base.position.X < Main.npc[num1252].position.X)
-								base.velocity.X -= num1250;
+								base.velocity.X -= num1251;
 							else
-								base.velocity.X += num1250;
+								base.velocity.X += num1251;
 
-							if (base.position.Y < Main.npc[num1251].position.Y)
+							if (base.position.Y < Main.npc[num1252].position.Y)
-								base.velocity.Y -= num1250;
+								base.velocity.Y -= num1251;
 							else
-								base.velocity.Y += num1250;
+								base.velocity.Y += num1251;
 						}
 					}
 				}
 				else if (this.ai[0] == 1f) {
-					if (num1243 == 0f) {
+					if (num1244 == 0f) {
 						TargetClosest(faceTarget: false);
 						netUpdate = true;
 					}
@@ -25108,22 +_,22 @@
 					if (localAI[1] > 1f)
 						localAI[1] = 1f;
 
-					if (num1243 < 20f)
+					if (num1244 < 20f)
 						localAI[2] = MathHelper.Lerp(localAI[2], 1.1f, 0.2f);
 					else
 						localAI[2] = MathHelper.Lerp(localAI[2], 0.4f, 0.2f);
 
-					if (num1243 == num1244 - 35f)
+					if (num1244 == num1245 - 35f)
 						Main.PlaySound(4, (int)base.position.X, (int)base.position.Y, 6);
 
-					if ((num1243 == num1244 - 14f || num1243 == num1244 - 7f || num1243 == num1244) && Main.netMode != 1) {
+					if ((num1244 == num1245 - 14f || num1244 == num1245 - 7f || num1244 == num1245) && Main.netMode != 1) {
-						Vector2 vector192 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), value28 * localAI[1]);
+						Vector2 vector193 = Utils.Vector2FromElipse(localAI[0].ToRotationVector2(), value28 * localAI[1]);
-						Vector2 vector193 = Vector2.Normalize(v9) * 8f;
+						Vector2 vector194 = Vector2.Normalize(v9) * 8f;
-						Projectile.NewProjectile(base.Center.X + vector192.X, base.Center.Y + vector192.Y, vector193.X, vector193.Y, 462, 35, 0f, Main.myPlayer);
+						Projectile.NewProjectile(base.Center.X + vector193.X, base.Center.Y + vector193.Y, vector194.X, vector194.Y, 462, 35, 0f, Main.myPlayer);
 					}
 				}
 				else if (this.ai[0] == 2f) {
-					if (num1243 < 15f) {
+					if (num1244 < 15f) {
 						localAI[1] -= 0.07f;
 						if (localAI[1] < 0f)
 							localAI[1] = 0f;
@@ -25133,69 +_,69 @@
 						if (base.velocity.Length() < 1f)
 							base.velocity = Vector2.Zero;
 					}
-					else if (num1243 < 75f) {
+					else if (num1244 < 75f) {
-						float num1252 = (num1243 - 15f) / 10f;
+						float num1253 = (num1244 - 15f) / 10f;
-						int num1253 = 0;
 						int num1254 = 0;
+						int num1255 = 0;
-						switch ((int)num1252) {
+						switch ((int)num1253) {
 							case 0:
-								num1253 = 0;
+								num1254 = 0;
+								num1255 = 2;
+								break;
+							case 1:
 								num1254 = 2;
+								num1255 = 5;
 								break;
-							case 1:
+							case 2:
-								num1253 = 2;
 								num1254 = 5;
-								break;
-							case 2:
-								num1253 = 5;
-								num1254 = 3;
+								num1255 = 3;
 								break;
 							case 3:
-								num1253 = 3;
+								num1254 = 3;
-								num1254 = 1;
+								num1255 = 1;
 								break;
 							case 4:
-								num1253 = 1;
+								num1254 = 1;
-								num1254 = 4;
+								num1255 = 4;
 								break;
 							case 5:
-								num1253 = 4;
+								num1254 = 4;
-								num1254 = 0;
+								num1255 = 0;
 								break;
 						}
 
 						Vector2 spinningpoint9 = Vector2.UnitY * -30f;
-						Vector2 value30 = spinningpoint9.RotatedBy((float)num1253 * ((float)Math.PI * 2f) / 6f);
+						Vector2 value30 = spinningpoint9.RotatedBy((float)num1254 * ((float)Math.PI * 2f) / 6f);
-						Vector2 value31 = spinningpoint9.RotatedBy((float)num1254 * ((float)Math.PI * 2f) / 6f);
+						Vector2 value31 = spinningpoint9.RotatedBy((float)num1255 * ((float)Math.PI * 2f) / 6f);
-						Vector2 vector194 = Vector2.Lerp(value30, value31, num1252 - (float)(int)num1252);
+						Vector2 vector195 = Vector2.Lerp(value30, value31, num1253 - (float)(int)num1253);
-						float value32 = vector194.Length() / 30f;
+						float value32 = vector195.Length() / 30f;
-						localAI[0] = vector194.ToRotation();
+						localAI[0] = vector195.ToRotation();
 						localAI[1] = MathHelper.Lerp(localAI[1], value32, 0.5f);
-						for (int num1255 = 0; num1255 < 2; num1255++) {
+						for (int num1256 = 0; num1256 < 2; num1256++) {
-							int num1256 = Dust.NewDust(base.Center + vector194 - Vector2.One * 4f, 0, 0, 229);
+							int num1257 = Dust.NewDust(base.Center + vector195 - Vector2.One * 4f, 0, 0, 229);
-							Dust dust = Main.dust[num1256];
+							Dust dust = Main.dust[num1257];
-							dust.velocity += vector194 / 15f;
+							dust.velocity += vector195 / 15f;
-							Main.dust[num1256].noGravity = true;
+							Main.dust[num1257].noGravity = true;
 						}
 
-						if ((num1243 - 15f) % 10f == 0f && Main.netMode != 1) {
+						if ((num1244 - 15f) % 10f == 0f && Main.netMode != 1) {
-							Vector2 vec5 = Vector2.Normalize(vector194);
+							Vector2 vec4 = Vector2.Normalize(vector195);
-							if (vec5.HasNaNs())
+							if (vec4.HasNaNs())
-								vec5 = Vector2.UnitY * -1f;
+								vec4 = Vector2.UnitY * -1f;
 
-							vec5 *= 4f;
+							vec4 *= 4f;
-							int num1257 = Projectile.NewProjectile(base.Center.X + vector194.X, base.Center.Y + vector194.Y, vec5.X, vec5.Y, 454, 55, 0f, Main.myPlayer, 30f, whoAmI);
+							int num1258 = Projectile.NewProjectile(base.Center.X + vector195.X, base.Center.Y + vector195.Y, vec4.X, vec4.Y, 454, 55, 0f, Main.myPlayer, 30f, whoAmI);
 						}
 					}
-					else if (num1243 < 105f) {
+					else if (num1244 < 105f) {
 						localAI[0] = localAI[0].AngleLerp(this.ai[2] - (float)Math.PI / 2f, 0.2f);
 						localAI[2] = MathHelper.Lerp(localAI[2], 0.75f, 0.2f);
-						if (num1243 == 75f) {
+						if (num1244 == 75f) {
 							TargetClosest(faceTarget: false);
 							netUpdate = true;
 							base.velocity = Vector2.UnitY * -7f;
-							for (int num1258 = 0; num1258 < 1000; num1258++) {
+							for (int num1259 = 0; num1259 < 1000; num1259++) {
-								Projectile projectile7 = Main.projectile[num1258];
+								Projectile projectile7 = Main.projectile[num1259];
 								if (projectile7.active && projectile7.type == 454 && projectile7.ai[1] == (float)whoAmI && projectile7.ai[0] != -1f) {
 									Projectile projectile8 = projectile7;
 									projectile8.velocity += base.velocity;
@@ -25208,15 +_,15 @@
 						this.ai[2] = (Main.player[target].Center - base.Center).ToRotation() + (float)Math.PI / 2f;
 						rotation = rotation.AngleTowards(this.ai[2], (float)Math.PI / 30f);
 					}
-					else if (num1243 < 120f) {
+					else if (num1244 < 120f) {
 						Main.PlaySound(29, (int)base.Center.X, (int)base.Center.Y, 102);
-						if (num1243 == 105f)
+						if (num1244 == 105f)
 							netUpdate = true;
 
 						Vector2 velocity7 = (this.ai[2] - (float)Math.PI / 2f).ToRotationVector2() * 12f;
 						base.velocity = velocity7 * 2f;
-						for (int num1259 = 0; num1259 < 1000; num1259++) {
+						for (int num1260 = 0; num1260 < 1000; num1260++) {
-							Projectile projectile9 = Main.projectile[num1259];
+							Projectile projectile9 = Main.projectile[num1260];
 							if (projectile9.active && projectile9.type == 454 && projectile9.ai[1] == (float)whoAmI && projectile9.ai[0] != -1f) {
 								projectile9.ai[0] = -1f;
 								projectile9.velocity = velocity7;
@@ -25230,7 +_,7 @@
 					}
 				}
 				else if (this.ai[0] == 3f) {
-					if (num1243 < 15f) {
+					if (num1244 < 15f) {
 						localAI[1] -= 0.07f;
 						if (localAI[1] < 0f)
 							localAI[1] = 0f;
@@ -25240,19 +_,19 @@
 						if (base.velocity.Length() < 1f)
 							base.velocity = Vector2.Zero;
 					}
-					else if (num1243 < 45f) {
+					else if (num1244 < 45f) {
 						localAI[0] = 0f;
-						localAI[1] = (float)Math.Sin((num1243 - 15f) * ((float)Math.PI * 2f) / 15f) * 0.5f;
+						localAI[1] = (float)Math.Sin((num1244 - 15f) * ((float)Math.PI * 2f) / 15f) * 0.5f;
 						if (localAI[1] < 0f)
 							localAI[0] = (float)Math.PI;
 					}
-					else if (num1243 < 185f) {
+					else if (num1244 < 185f) {
-						if (num1243 == 45f) {
+						if (num1244 == 45f) {
 							this.ai[2] = (float)(Main.rand.Next(2) == 0).ToDirectionInt() * ((float)Math.PI * 2f) / 40f;
 							netUpdate = true;
 						}
 
-						if ((num1243 - 15f - 30f) % 40f == 0f)
+						if ((num1244 - 15f - 30f) % 40f == 0f)
 							this.ai[2] *= 0.95f;
 
 						localAI[0] += this.ai[2];
@@ -25260,15 +_,15 @@
 						if (localAI[1] > 1f)
 							localAI[1] = 1f;
 
-						Vector2 vector195 = localAI[0].ToRotationVector2() * value28 * localAI[1];
+						Vector2 vector196 = localAI[0].ToRotationVector2() * value28 * localAI[1];
-						float scaleFactor8 = MathHelper.Lerp(8f, 20f, (num1243 - 15f - 30f) / 140f);
+						float scaleFactor8 = MathHelper.Lerp(8f, 20f, (num1244 - 15f - 30f) / 140f);
-						base.velocity = Vector2.Normalize(vector195) * scaleFactor8;
+						base.velocity = Vector2.Normalize(vector196) * scaleFactor8;
 						rotation = rotation.AngleLerp(base.velocity.ToRotation() + (float)Math.PI / 2f, 0.2f);
-						if ((num1243 - 15f - 30f) % 10f == 0f && Main.netMode != 1) {
+						if ((num1244 - 15f - 30f) % 10f == 0f && Main.netMode != 1) {
-							Vector2 vector196 = base.Center + Vector2.Normalize(vector195) * value28.Length() * 0.4f;
+							Vector2 vector197 = base.Center + Vector2.Normalize(vector196) * value28.Length() * 0.4f;
-							Vector2 vector197 = Vector2.Normalize(vector195) * 8f;
+							Vector2 vector198 = Vector2.Normalize(vector196) * 8f;
 							float ai3 = ((float)Math.PI * 2f * (float)Main.rand.NextDouble() - (float)Math.PI) / 30f + (float)Math.PI / 180f * this.ai[2];
-							Projectile.NewProjectile(vector196.X, vector196.Y, vector197.X, vector197.Y, 452, 35, 0f, Main.myPlayer, 0f, ai3);
+							Projectile.NewProjectile(vector197.X, vector197.Y, vector198.X, vector198.Y, 452, 35, 0f, Main.myPlayer, 0f, ai3);
 						}
 					}
 					else {
@@ -25285,12 +_,12 @@
 					if (this.ai[0] != 4f)
 						return;
 
-					if (num1243 == 0f) {
+					if (num1244 == 0f) {
 						TargetClosest(faceTarget: false);
 						netUpdate = true;
 					}
 
-					if (num1243 < 180f) {
+					if (num1244 < 180f) {
 						localAI[2] = MathHelper.Lerp(localAI[2], 1f, 0.2f);
 						localAI[1] -= 0.05f;
 						if (localAI[1] < 0f)
@@ -25300,42 +_,42 @@
 						if (base.velocity.Length() < 1f)
 							base.velocity = Vector2.Zero;
 
-						if (!(num1243 >= 60f))
+						if (!(num1244 >= 60f))
 							return;
 
 						Vector2 center26 = base.Center;
-						int num1260 = 0;
+						int num1261 = 0;
-						if (num1243 >= 120f)
+						if (num1244 >= 120f)
-							num1260 = 1;
+							num1261 = 1;
 
-						for (int num1261 = 0; num1261 < 1 + num1260; num1261++) {
+						for (int num1262 = 0; num1262 < 1 + num1261; num1262++) {
-							int num1262 = 229;
+							int num1263 = 229;
-							float num1263 = 0.8f;
+							float num1264 = 0.8f;
-							if (num1261 % 2 == 1) {
+							if (num1262 % 2 == 1) {
-								num1262 = 229;
+								num1263 = 229;
-								num1263 = 1.65f;
+								num1264 = 1.65f;
 							}
 
-							Vector2 vector198 = center26 + ((float)Main.rand.NextDouble() * ((float)Math.PI * 2f)).ToRotationVector2() * value28 / 2f;
+							Vector2 vector199 = center26 + ((float)Main.rand.NextDouble() * ((float)Math.PI * 2f)).ToRotationVector2() * value28 / 2f;
-							int num1264 = Dust.NewDust(vector198 - Vector2.One * 8f, 16, 16, num1262, base.velocity.X / 2f, base.velocity.Y / 2f);
+							int num1265 = Dust.NewDust(vector199 - Vector2.One * 8f, 16, 16, num1263, base.velocity.X / 2f, base.velocity.Y / 2f);
-							Main.dust[num1264].velocity = Vector2.Normalize(center26 - vector198) * 3.5f * (10f - (float)num1260 * 2f) / 10f;
+							Main.dust[num1265].velocity = Vector2.Normalize(center26 - vector199) * 3.5f * (10f - (float)num1261 * 2f) / 10f;
-							Main.dust[num1264].noGravity = true;
+							Main.dust[num1265].noGravity = true;
-							Main.dust[num1264].scale = num1263;
+							Main.dust[num1265].scale = num1264;
-							Main.dust[num1264].customData = this;
+							Main.dust[num1265].customData = this;
 						}
 					}
-					else if (num1243 < num1244 - 15f) {
+					else if (num1244 < num1245 - 15f) {
-						if (num1243 == 180f && Main.netMode != 1) {
+						if (num1244 == 180f && Main.netMode != 1) {
 							TargetClosest(faceTarget: false);
 							Vector2 spinningpoint10 = Main.player[target].Center - base.Center;
 							spinningpoint10.Normalize();
-							float num1265 = -1f;
+							float num1266 = -1f;
 							if (spinningpoint10.X < 0f)
-								num1265 = 1f;
+								num1266 = 1f;
 
-							spinningpoint10 = spinningpoint10.RotatedBy((0f - num1265) * ((float)Math.PI * 2f) / 6f);
+							spinningpoint10 = spinningpoint10.RotatedBy((0f - num1266) * ((float)Math.PI * 2f) / 6f);
-							Projectile.NewProjectile(base.Center.X, base.Center.Y, spinningpoint10.X, spinningpoint10.Y, 455, 50, 0f, Main.myPlayer, num1265 * ((float)Math.PI * 2f) / 540f, whoAmI);
+							Projectile.NewProjectile(base.Center.X, base.Center.Y, spinningpoint10.X, spinningpoint10.Y, 455, 50, 0f, Main.myPlayer, num1266 * ((float)Math.PI * 2f) / 540f, whoAmI);
-							this.ai[2] = (spinningpoint10.ToRotation() + (float)Math.PI * 3f) * num1265;
+							this.ai[2] = (spinningpoint10.ToRotation() + (float)Math.PI * 3f) * num1266;
 							netUpdate = true;
 						}
 
@@ -25343,15 +_,15 @@
 						if (localAI[1] > 1f)
 							localAI[1] = 1f;
 
-						float num1266 = (this.ai[2] >= 0f).ToDirectionInt();
+						float num1267 = (this.ai[2] >= 0f).ToDirectionInt();
-						float num1267 = this.ai[2];
+						float num1268 = this.ai[2];
-						if (num1267 < 0f)
+						if (num1268 < 0f)
-							num1267 *= -1f;
+							num1268 *= -1f;
 
-						num1267 += (float)Math.PI * -3f;
+						num1268 += (float)Math.PI * -3f;
-						num1267 += num1266 * ((float)Math.PI * 2f) / 540f;
+						num1268 += num1267 * ((float)Math.PI * 2f) / 540f;
-						localAI[0] = num1267;
+						localAI[0] = num1268;
-						this.ai[2] = (num1267 + (float)Math.PI * 3f) * num1266;
+						this.ai[2] = (num1268 + (float)Math.PI * 3f) * num1267;
 					}
 					else {
 						localAI[1] -= 0.07f;
@@ -25361,11 +_,11 @@
 				}
 			}
 			else if (aiStyle == 82) {
-				float num1268 = 90f;
+				float num1269 = 90f;
 				Vector2 value33 = new Vector2(0f, 216f);
-				int num1269 = (int)Math.Abs(this.ai[0]) - 1;
+				int num1270 = (int)Math.Abs(this.ai[0]) - 1;
-				int num1270 = (int)this.ai[1];
+				int num1271 = (int)this.ai[1];
-				if (!Main.npc[num1269].active || Main.npc[num1269].type != 396) {
+				if (!Main.npc[num1270].active || Main.npc[num1270].type != 396) {
 					life = 0;
 					HitEffect();
 					active = false;
@@ -25373,76 +_,76 @@
 				}
 
 				this.ai[2]++;
-				if (this.ai[2] >= num1268) {
+				if (this.ai[2] >= num1269) {
 					if (Main.netMode != 1) {
-						int num1271 = (int)Main.npc[num1269].ai[3];
+						int num1272 = (int)Main.npc[num1270].ai[3];
-						int num1272 = -1;
 						int num1273 = -1;
+						int num1274 = -1;
-						int num1274 = num1269;
+						int num1275 = num1270;
-						for (int num1275 = 0; num1275 < 200; num1275++) {
+						for (int num1276 = 0; num1276 < 200; num1276++) {
-							if (Main.npc[num1275].active && Main.npc[num1275].ai[3] == (float)num1271) {
+							if (Main.npc[num1276].active && Main.npc[num1276].ai[3] == (float)num1272) {
-								if (num1272 == -1 && Main.npc[num1275].type == 397 && Main.npc[num1275].ai[2] == 0f)
+								if (num1273 == -1 && Main.npc[num1276].type == 397 && Main.npc[num1276].ai[2] == 0f)
-									num1272 = num1275;
+									num1273 = num1276;
 
-								if (num1273 == -1 && Main.npc[num1275].type == 397 && Main.npc[num1275].ai[2] == 1f)
+								if (num1274 == -1 && Main.npc[num1276].type == 397 && Main.npc[num1276].ai[2] == 1f)
-									num1273 = num1275;
+									num1274 = num1276;
 
-								if (num1272 != -1 && num1273 != -1 && num1274 != -1)
+								if (num1273 != -1 && num1274 != -1 && num1275 != -1)
 									break;
 							}
 						}
 
-						int num1276 = 1000;
+						int num1277 = 1000;
-						int num1277 = Main.npc[num1271].lifeMax - Main.npc[num1271].life;
 						int num1278 = Main.npc[num1272].lifeMax - Main.npc[num1272].life;
 						int num1279 = Main.npc[num1273].lifeMax - Main.npc[num1273].life;
 						int num1280 = Main.npc[num1274].lifeMax - Main.npc[num1274].life;
-						if (num1280 > 0 && num1276 > 0) {
-							int num1281 = num1280 - num1276;
-							if (num1281 > 0)
-								num1281 = 0;
-
-							int num1282 = num1276 + num1281;
-							num1276 -= num1282;
-							NPC nPC6 = Main.npc[num1274];
-							nPC6.life += num1282;
-							HealEffect(Utils.CenteredRectangle(Main.npc[num1274].Center, new Vector2(50f)), num1282);
-						}
-
+						int num1281 = Main.npc[num1275].lifeMax - Main.npc[num1275].life;
-						if (num1277 > 0 && num1276 > 0) {
+						if (num1281 > 0 && num1277 > 0) {
-							int num1283 = num1277 - num1276;
+							int num1282 = num1281 - num1277;
-							if (num1283 > 0)
+							if (num1282 > 0)
-								num1283 = 0;
+								num1282 = 0;
 
-							int num1284 = num1276 + num1283;
+							int num1283 = num1277 + num1282;
-							num1276 -= num1284;
+							num1277 -= num1283;
-							NPC nPC6 = Main.npc[num1271];
+							NPC nPC6 = Main.npc[num1275];
-							nPC6.life += num1284;
+							nPC6.life += num1283;
-							HealEffect(Utils.CenteredRectangle(Main.npc[num1271].Center, new Vector2(50f)), num1284);
+							HealEffect(Utils.CenteredRectangle(Main.npc[num1275].Center, new Vector2(50f)), num1283);
 						}
 
-						if (num1278 > 0 && num1276 > 0) {
+						if (num1278 > 0 && num1277 > 0) {
-							int num1285 = num1278 - num1276;
+							int num1284 = num1278 - num1277;
-							if (num1285 > 0)
+							if (num1284 > 0)
-								num1285 = 0;
+								num1284 = 0;
 
-							int num1286 = num1276 + num1285;
+							int num1285 = num1277 + num1284;
-							num1276 -= num1286;
+							num1277 -= num1285;
 							NPC nPC6 = Main.npc[num1272];
-							nPC6.life += num1286;
+							nPC6.life += num1285;
-							HealEffect(Utils.CenteredRectangle(Main.npc[num1272].Center, new Vector2(50f)), num1286);
+							HealEffect(Utils.CenteredRectangle(Main.npc[num1272].Center, new Vector2(50f)), num1285);
 						}
 
-						if (num1279 > 0 && num1276 > 0) {
+						if (num1279 > 0 && num1277 > 0) {
-							int num1287 = num1279 - num1276;
+							int num1286 = num1279 - num1277;
-							if (num1287 > 0)
+							if (num1286 > 0)
-								num1287 = 0;
+								num1286 = 0;
 
-							int num1288 = num1276 + num1287;
+							int num1287 = num1277 + num1286;
-							num1276 -= num1288;
+							num1277 -= num1287;
 							NPC nPC6 = Main.npc[num1273];
-							nPC6.life += num1288;
+							nPC6.life += num1287;
-							HealEffect(Utils.CenteredRectangle(Main.npc[num1273].Center, new Vector2(50f)), num1288);
+							HealEffect(Utils.CenteredRectangle(Main.npc[num1273].Center, new Vector2(50f)), num1287);
+						}
+
+						if (num1280 > 0 && num1277 > 0) {
+							int num1288 = num1280 - num1277;
+							if (num1288 > 0)
+								num1288 = 0;
+
+							int num1289 = num1277 + num1288;
+							num1277 -= num1289;
+							NPC nPC6 = Main.npc[num1274];
+							nPC6.life += num1289;
+							HealEffect(Utils.CenteredRectangle(Main.npc[num1274].Center, new Vector2(50f)), num1289);
 						}
 					}
 
@@ -25452,22 +_,22 @@
 				}
 				else {
 					base.velocity = Vector2.Zero;
-					base.Center = Vector2.Lerp(Main.projectile[num1270].Center, Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center + value33, this.ai[2] / num1268);
+					base.Center = Vector2.Lerp(Main.projectile[num1271].Center, Main.npc[(int)Math.Abs(this.ai[0]) - 1].Center + value33, this.ai[2] / num1269);
 					Vector2 spinningpoint11 = Vector2.UnitY * -height / 2f;
-					for (int num1289 = 0; num1289 < 6; num1289++) {
+					for (int num1290 = 0; num1290 < 6; num1290++) {
-						int num1290 = Dust.NewDust(base.Center - Vector2.One * 4f + spinningpoint11.RotatedBy((float)num1289 * ((float)Math.PI * 2f) / 6f), 0, 0, 229);
+						int num1291 = Dust.NewDust(base.Center - Vector2.One * 4f + spinningpoint11.RotatedBy((float)num1290 * ((float)Math.PI * 2f) / 6f), 0, 0, 229);
-						Main.dust[num1290].velocity = -Vector2.UnitY;
+						Main.dust[num1291].velocity = -Vector2.UnitY;
-						Main.dust[num1290].noGravity = true;
+						Main.dust[num1291].noGravity = true;
-						Main.dust[num1290].scale = 0.7f;
+						Main.dust[num1291].scale = 0.7f;
-						Main.dust[num1290].customData = this;
+						Main.dust[num1291].customData = this;
 					}
 
 					spinningpoint11 = Vector2.UnitY * -height / 6f;
-					for (int num1291 = 0; num1291 < 3; num1291++) {
+					for (int num1292 = 0; num1292 < 3; num1292++) {
-						int num1292 = Dust.NewDust(base.Center - Vector2.One * 4f + spinningpoint11.RotatedBy((float)num1291 * ((float)Math.PI * 2f) / 6f), 0, 0, 229, 0f, -2f);
+						int num1293 = Dust.NewDust(base.Center - Vector2.One * 4f + spinningpoint11.RotatedBy((float)num1292 * ((float)Math.PI * 2f) / 6f), 0, 0, 229, 0f, -2f);
-						Main.dust[num1292].noGravity = true;
+						Main.dust[num1293].noGravity = true;
-						Main.dust[num1292].scale = 1.5f;
+						Main.dust[num1293].scale = 1.5f;
-						Main.dust[num1292].customData = this;
+						Main.dust[num1293].customData = this;
 					}
 				}
 			}
@@ -25484,44 +_,44 @@
 							return;
 						}
 
-						int num1293 = 0;
+						int num1294 = 0;
-						int num1294 = 1;
+						int num1295 = 1;
-						for (int num1295 = 0; num1295 < 4; num1295++) {
+						for (int num1296 = 0; num1296 < 4; num1296++) {
-							int num1296 = 0;
+							int num1297 = 0;
-							bool flag82 = num1295 == 1 || num1295 == 2;
+							bool flag82 = num1296 == 1 || num1296 == 2;
-							num1296 = ((!flag82) ? 379 : 438);
+							num1297 = ((!flag82) ? 379 : 438);
-							int num1297 = NewNPC(spawnPoints[num1295].X * 16 + 8, spawnPoints[num1295].Y * 16 - 48, num1296);
+							int num1298 = NewNPC(spawnPoints[num1296].X * 16 + 8, spawnPoints[num1296].Y * 16 - 48, num1297);
 							if (flag82) {
-								localAI[num1294++] = num1297 + 1;
+								localAI[num1295++] = num1298 + 1;
-								Main.npc[num1297].ai[3] = -(whoAmI + 1);
+								Main.npc[num1298].ai[3] = -(whoAmI + 1);
 							}
 							else {
-								this.ai[num1293++] = num1297 + 1;
+								this.ai[num1294++] = num1298 + 1;
-								Main.npc[num1297].ai[3] = -(whoAmI + 1);
+								Main.npc[num1298].ai[3] = -(whoAmI + 1);
 							}
 
-							Main.npc[num1297].netUpdate = true;
+							Main.npc[num1298].netUpdate = true;
 						}
 					}
 
 					if (localAI[0] == 1f && Main.netMode != 1) {
 						localAI[0] = 2f;
-						for (int num1298 = 0; num1298 < 2; num1298++) {
+						for (int num1299 = 0; num1299 < 2; num1299++) {
-							Main.npc[(int)localAI[num1298 + 1] - 1].ai[1] = 1f;
+							Main.npc[(int)localAI[num1299 + 1] - 1].ai[1] = 1f;
-							Main.npc[(int)localAI[num1298 + 1] - 1].netUpdate = true;
+							Main.npc[(int)localAI[num1299 + 1] - 1].netUpdate = true;
-							Main.npc[(int)this.ai[num1298] - 1].ai[3] = 0f;
+							Main.npc[(int)this.ai[num1299] - 1].ai[3] = 0f;
-							Main.npc[(int)this.ai[num1298] - 1].TargetClosest();
+							Main.npc[(int)this.ai[num1299] - 1].TargetClosest();
-							Main.npc[(int)this.ai[num1298] - 1].netUpdate = true;
+							Main.npc[(int)this.ai[num1299] - 1].netUpdate = true;
 						}
 					}
 
 					if (this.ai[0] != -1f && Main.netMode != 1) {
 						bool flag83 = true;
-						for (int num1299 = 0; num1299 < 2; num1299++) {
+						for (int num1300 = 0; num1300 < 2; num1300++) {
-							if (Main.npc[(int)localAI[num1299 + 1] - 1].active && Main.npc[(int)localAI[num1299 + 1] - 1].type == 438)
+							if (Main.npc[(int)localAI[num1300 + 1] - 1].active && Main.npc[(int)localAI[num1300 + 1] - 1].type == 438)
 								flag83 = false;
 
-							if (Main.npc[(int)this.ai[num1299] - 1].active && Main.npc[(int)this.ai[num1299] - 1].type == 379)
+							if (Main.npc[(int)this.ai[num1300] - 1].active && Main.npc[(int)this.ai[num1300] - 1].type == 379)
 								flag83 = false;
 						}
 
@@ -25529,23 +_,23 @@
 							this.ai[0] = -1f;
 							this.ai[1] = 0f;
 							this.ai[3] = 0f;
-							int num1300 = (int)base.Center.X / 16 + 11 * (Main.rand.Next(2) == 0).ToDirectionInt();
+							int num1301 = (int)base.Center.X / 16 + 11 * (Main.rand.Next(2) == 0).ToDirectionInt();
-							int num1301 = 0;
+							int num1302 = 0;
-							for (int num1302 = -5; num1302 < 12; num1302++) {
+							for (int num1303 = -5; num1303 < 12; num1303++) {
-								int num1303 = num1300;
+								int num1304 = num1301;
-								int num1304 = (int)base.Center.Y / 16 + num1302;
+								int num1305 = (int)base.Center.Y / 16 + num1303;
-								if (WorldGen.SolidTile(num1303, num1304) && !Collision.SolidTiles(num1303 - 1, num1303 + 1, num1304 - 3, num1304 - 1)) {
+								if (WorldGen.SolidTile(num1304, num1305) && !Collision.SolidTiles(num1304 - 1, num1304 + 1, num1305 - 3, num1305 - 1)) {
-									num1301 = num1304;
+									num1302 = num1305;
 									break;
 								}
 
-								if (num1302 == 11)
+								if (num1303 == 11)
-									num1301 = num1304;
+									num1302 = num1305;
 							}
 
-							int num1305 = NewNPC(num1300 * 16 + 10, num1301 * 16 - 2, 439);
+							int num1306 = NewNPC(num1301 * 16 + 10, num1302 * 16 - 2, 439);
-							Main.npc[num1305].direction = (Main.npc[num1305].spriteDirection = Math.Sign(base.Center.X - (float)(num1300 * 16) - 10f));
+							Main.npc[num1306].direction = (Main.npc[num1306].spriteDirection = Math.Sign(base.Center.X - (float)(num1301 * 16) - 10f));
-							this.ai[2] = num1305;
+							this.ai[2] = num1306;
 							netUpdate = true;
 							CultistRitual.TabletDestroyed();
 						}
@@ -25558,32 +_,32 @@
 							HitEffect(0, 9999.0);
 							active = false;
 							if (Main.netMode != 1) {
-								for (int num1306 = 0; num1306 < 6; num1306++) {
+								for (int num1307 = 0; num1307 < 6; num1307++) {
-									float num1307 = 3f + Main.rand.NextFloat() * 6f;
+									float num1308 = 3f + Main.rand.NextFloat() * 6f;
-									Vector2 vector199 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
+									Vector2 vector200 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
 									Vector2 center27 = base.Center;
-									center27 += vector199 * 30f;
+									center27 += vector200 * 30f;
-									Projectile.NewProjectile(center27.X, center27.Y, vector199.X * num1307, vector199.Y * num1307, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
+									Projectile.NewProjectile(center27.X, center27.Y, vector200.X * num1308, vector200.Y * num1308, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
 								}
 
-								for (int num1308 = 0; num1308 < 20; num1308++) {
+								for (int num1309 = 0; num1309 < 20; num1309++) {
 									if (Main.rand.Next(2) != 0) {
-										float num1309 = 3f + Main.rand.NextFloat() * 6f;
+										float num1310 = 3f + Main.rand.NextFloat() * 6f;
-										Vector2 vector200 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
+										Vector2 vector201 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
 										Vector2 center28 = base.Center;
-										center28 += vector200 * 30f;
+										center28 += vector201 * 30f;
-										Vector2 vector201 = base.Center + vector200 * (Main.rand.NextFloat() * 45f + 45f) + Vector2.UnitY * 20f;
+										Vector2 vector202 = base.Center + vector201 * (Main.rand.NextFloat() * 45f + 45f) + Vector2.UnitY * 20f;
-										Projectile.NewProjectile(center28.X, center28.Y, vector200.X * num1309, -20f, 526, 0, 0f, Main.myPlayer, vector201.X, vector201.Y);
+										Projectile.NewProjectile(center28.X, center28.Y, vector201.X * num1310, -20f, 526, 0, 0f, Main.myPlayer, vector202.X, vector202.Y);
 									}
 								}
 							}
 						}
 						else if (this.ai[3] % 10f == 1f && this.ai[3] > 120f && Main.netMode != 1) {
-							float num1310 = 3f + Main.rand.NextFloat() * 6f;
+							float num1311 = 3f + Main.rand.NextFloat() * 6f;
-							Vector2 vector202 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
+							Vector2 vector203 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
 							Vector2 center29 = base.Center;
-							center29 += vector202 * 25f;
+							center29 += vector203 * 25f;
-							Projectile.NewProjectile(center29.X, center29.Y, vector202.X * num1310, vector202.Y * num1310, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
+							Projectile.NewProjectile(center29.X, center29.Y, vector203.X * num1311, vector203.Y * num1311, 526, 0, 0f, Main.myPlayer, Main.npc[(int)this.ai[2]].Center.X, Main.npc[(int)this.ai[2]].Center.Y);
 						}
 					}
 				}
@@ -25593,23 +_,23 @@
 					if ((double)base.velocity.X > -0.1 && (double)base.velocity.X < 0.1)
 						base.velocity.X = 0f;
 
-					int num1311 = (int)(0f - this.ai[3] - 1f);
+					int num1312 = (int)(0f - this.ai[3] - 1f);
-					if (num1311 == -1) {
+					if (num1312 == -1) {
 						life = 0;
 						HitEffect();
 						active = false;
 						return;
 					}
 
-					int num1312 = Math.Sign(Main.npc[num1311].Center.X - base.Center.X);
+					int num1313 = Math.Sign(Main.npc[num1312].Center.X - base.Center.X);
-					if (num1312 != base.direction) {
+					if (num1313 != base.direction) {
 						base.velocity.X = 0f;
-						base.direction = (spriteDirection = num1312);
+						base.direction = (spriteDirection = num1313);
 						netUpdate = true;
 					}
 
-					if (justHit && Main.netMode != 1 && Main.npc[num1311].localAI[0] == 0f)
+					if (justHit && Main.netMode != 1 && Main.npc[num1312].localAI[0] == 0f)
-						Main.npc[num1311].localAI[0] = 1f;
+						Main.npc[num1312].localAI[0] = 1f;
 
 					if ((this.ai[0] += 1f) >= 300f) {
 						this.ai[0] = 0f;
@@ -25631,23 +_,23 @@
 						this.ai[0] = 1f;
 					}
 					else {
-						Vector2 vector203 = Main.player[target].Center - base.Center;
+						Vector2 vector204 = Main.player[target].Center - base.Center;
-						vector203.Y -= Main.player[target].height / 4;
+						vector204.Y -= Main.player[target].height / 4;
-						float num1313 = vector203.Length();
+						float num1314 = vector204.Length();
-						if (num1313 > 800f) {
+						if (num1314 > 800f) {
 							this.ai[0] = 2f;
 						}
 						else {
 							Vector2 center30 = base.Center;
 							center30.X = Main.player[target].Center.X;
-							Vector2 vector204 = center30 - base.Center;
+							Vector2 vector205 = center30 - base.Center;
-							if (vector204.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center30, 1, 1)) {
+							if (vector205.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center30, 1, 1)) {
 								this.ai[0] = 3f;
 								this.ai[1] = center30.X;
 								this.ai[2] = center30.Y;
 								Vector2 center31 = base.Center;
 								center31.Y = Main.player[target].Center.Y;
-								if (vector204.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center31, 1, 1) && Collision.CanHit(center31, 1, 1, Main.player[target].position, 1, 1)) {
+								if (vector205.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center31, 1, 1) && Collision.CanHit(center31, 1, 1, Main.player[target].position, 1, 1)) {
 									this.ai[0] = 3f;
 									this.ai[1] = center31.X;
 									this.ai[2] = center31.Y;
@@ -25665,9 +_,9 @@
 
 							if (this.ai[0] == 0f) {
 								localAI[0] = 0f;
-								vector203.Normalize();
+								vector204.Normalize();
-								vector203 *= 0.5f;
+								vector204 *= 0.5f;
-								base.velocity += vector203;
+								base.velocity += vector204;
 								this.ai[0] = 4f;
 								this.ai[1] = 0f;
 							}
@@ -25680,22 +_,22 @@
 					if (type == 421)
 						value34 = Main.player[target].Top - base.Center;
 
-					float num1314 = value34.Length();
+					float num1315 = value34.Length();
-					float num1315 = 5.5f;
+					float num1316 = 5.5f;
-					num1315 += num1314 / 100f;
+					num1316 += num1315 / 100f;
-					int num1316 = 50;
+					int num1317 = 50;
 					value34.Normalize();
-					value34 *= num1315;
+					value34 *= num1316;
-					base.velocity = (base.velocity * (num1316 - 1) + value34) / num1316;
+					base.velocity = (base.velocity * (num1317 - 1) + value34) / num1317;
 					if (!Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1)) {
 						this.ai[0] = 0f;
 						this.ai[1] = 0f;
 					}
 
-					if (type == 421 && num1314 < 40f && Main.player[target].active && !Main.player[target].dead) {
+					if (type == 421 && num1315 < 40f && Main.player[target].active && !Main.player[target].dead) {
 						bool flag84 = true;
-						for (int num1317 = 0; num1317 < 200; num1317++) {
+						for (int num1318 = 0; num1318 < 200; num1318++) {
-							NPC nPC8 = Main.npc[num1317];
+							NPC nPC8 = Main.npc[num1318];
 							if (nPC8.active && nPC8.type == type && nPC8.ai[0] == 5f && nPC8.target == target) {
 								flag84 = false;
 								break;
@@ -25715,31 +_,31 @@
 					rotation = base.velocity.X * 0.1f;
 					noTileCollide = true;
 					Vector2 value35 = Main.player[target].Center - base.Center;
-					float num1318 = value35.Length();
+					float num1319 = value35.Length();
-					float num1319 = 3f;
+					float num1320 = 3f;
-					int num1320 = 3;
+					int num1321 = 3;
 					value35.Normalize();
-					value35 *= num1319;
+					value35 *= num1320;
-					base.velocity = (base.velocity * (num1320 - 1) + value35) / num1320;
+					base.velocity = (base.velocity * (num1321 - 1) + value35) / num1321;
-					if (num1318 < 600f && !Collision.SolidCollision(base.position, width, height))
+					if (num1319 < 600f && !Collision.SolidCollision(base.position, width, height))
 						this.ai[0] = 0f;
 				}
 				else if (this.ai[0] == 3f) {
 					rotation = base.velocity.X * 0.1f;
 					Vector2 value36 = new Vector2(this.ai[1], this.ai[2]);
 					Vector2 value37 = value36 - base.Center;
-					float num1321 = value37.Length();
+					float num1322 = value37.Length();
-					float num1322 = 2f;
+					float num1323 = 2f;
-					float num1323 = 3f;
+					float num1324 = 3f;
 					value37.Normalize();
-					value37 *= num1322;
+					value37 *= num1323;
-					base.velocity = (base.velocity * (num1323 - 1f) + value37) / num1323;
+					base.velocity = (base.velocity * (num1324 - 1f) + value37) / num1324;
 					if (collideX || collideY) {
 						this.ai[0] = 4f;
 						this.ai[1] = 0f;
 					}
 
-					if (num1321 < num1322 || num1321 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1))
+					if (num1322 < num1323 || num1322 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1))
 						this.ai[0] = 0f;
 				}
 				else if (this.ai[0] == 4f) {
@@ -25758,12 +_,12 @@
 						base.velocity = value38 * 0.1f;
 					}
 
-					float num1324 = 2f;
+					float num1325 = 2f;
-					float num1325 = 20f;
+					float num1326 = 20f;
 					value38 = base.velocity;
 					value38.Normalize();
-					value38 *= num1324;
+					value38 *= num1325;
-					base.velocity = (base.velocity * (num1325 - 1f) + value38) / num1325;
+					base.velocity = (base.velocity * (num1326 - 1f) + value38) / num1326;
 					this.ai[1] += 1f;
 					if (this.ai[1] > 180f) {
 						this.ai[0] = 0f;
@@ -25811,26 +_,6 @@
 
 				if (type == 405) {
 					rotation = 0f;
-					for (int num1326 = 0; num1326 < 200; num1326++) {
-						if (num1326 != whoAmI && Main.npc[num1326].active && Main.npc[num1326].type == type && Math.Abs(base.position.X - Main.npc[num1326].position.X) + Math.Abs(base.position.Y - Main.npc[num1326].position.Y) < (float)width) {
-							if (base.position.X < Main.npc[num1326].position.X)
-								base.velocity.X -= 0.05f;
-							else
-								base.velocity.X += 0.05f;
-
-							if (base.position.Y < Main.npc[num1326].position.Y)
-								base.velocity.Y -= 0.05f;
-							else
-								base.velocity.Y += 0.05f;
-						}
-					}
-				}
-				else {
-					if (type != 421)
-						return;
-
-					hide = (this.ai[0] == 5f);
-					rotation = base.velocity.X * 0.1f;
 					for (int num1327 = 0; num1327 < 200; num1327++) {
 						if (num1327 != whoAmI && Main.npc[num1327].active && Main.npc[num1327].type == type && Math.Abs(base.position.X - Main.npc[num1327].position.X) + Math.Abs(base.position.Y - Main.npc[num1327].position.Y) < (float)width) {
 							if (base.position.X < Main.npc[num1327].position.X)
@@ -25845,6 +_,26 @@
 						}
 					}
 				}
+				else {
+					if (type != 421)
+						return;
+
+					hide = (this.ai[0] == 5f);
+					rotation = base.velocity.X * 0.1f;
+					for (int num1328 = 0; num1328 < 200; num1328++) {
+						if (num1328 != whoAmI && Main.npc[num1328].active && Main.npc[num1328].type == type && Math.Abs(base.position.X - Main.npc[num1328].position.X) + Math.Abs(base.position.Y - Main.npc[num1328].position.Y) < (float)width) {
+							if (base.position.X < Main.npc[num1328].position.X)
+								base.velocity.X -= 0.05f;
+							else
+								base.velocity.X += 0.05f;
+
+							if (base.position.Y < Main.npc[num1328].position.Y)
+								base.velocity.Y -= 0.05f;
+							else
+								base.velocity.Y += 0.05f;
+						}
+					}
+				}
 			}
 			else if (aiStyle == 86) {
 				if (alpha > 0) {
@@ -25856,31 +_,31 @@
 				noGravity = true;
 				noTileCollide = true;
 				knockBackResist = 0f;
-				for (int num1328 = 0; num1328 < 200; num1328++) {
+				for (int num1329 = 0; num1329 < 200; num1329++) {
-					if (num1328 == whoAmI || !Main.npc[num1328].active || Main.npc[num1328].type != type)
+					if (num1329 == whoAmI || !Main.npc[num1329].active || Main.npc[num1329].type != type)
 						continue;
 
-					Vector2 vector205 = Main.npc[num1328].Center - base.Center;
+					Vector2 vector206 = Main.npc[num1329].Center - base.Center;
-					if (!(vector205.Length() < 50f))
+					if (!(vector206.Length() < 50f))
 						continue;
 
-					vector205.Normalize();
+					vector206.Normalize();
-					if (vector205.X == 0f && vector205.Y == 0f) {
+					if (vector206.X == 0f && vector206.Y == 0f) {
-						if (num1328 > whoAmI)
+						if (num1329 > whoAmI)
-							vector205.X = 1f;
+							vector206.X = 1f;
 						else
-							vector205.X = -1f;
+							vector206.X = -1f;
 					}
 
-					vector205 *= 0.4f;
+					vector206 *= 0.4f;
-					base.velocity -= vector205;
+					base.velocity -= vector206;
-					NPC nPC6 = Main.npc[num1328];
+					NPC nPC6 = Main.npc[num1329];
-					nPC6.velocity += vector205;
+					nPC6.velocity += vector206;
 				}
 
 				if (type == 472) {
-					float num1329 = 120f;
+					float num1330 = 120f;
-					if (localAI[0] < num1329) {
+					if (localAI[0] < num1330) {
 						if (localAI[0] == 0f) {
 							Main.PlaySound(SoundID.Item8, base.Center);
 							TargetClosest();
@@ -25889,46 +_,46 @@
 							else
 								base.velocity.X -= 2f;
 
-							for (int num1330 = 0; num1330 < 20; num1330++) {
+							for (int num1331 = 0; num1331 < 20; num1331++) {
 								Vector2 center33 = base.Center;
 								center33.Y -= 18f;
-								Vector2 vector206 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
+								Vector2 vector207 = new Vector2(Main.rand.Next(-100, 101), Main.rand.Next(-100, 101));
-								vector206.Normalize();
+								vector207.Normalize();
-								vector206 *= (float)Main.rand.Next(0, 100) * 0.1f;
+								vector207 *= (float)Main.rand.Next(0, 100) * 0.1f;
-								center33 += vector206;
+								center33 += vector207;
-								vector206.Normalize();
+								vector207.Normalize();
-								vector206 *= (float)Main.rand.Next(50, 90) * 0.2f;
+								vector207 *= (float)Main.rand.Next(50, 90) * 0.2f;
-								int num1331 = Dust.NewDust(center33, 1, 1, 27);
+								int num1332 = Dust.NewDust(center33, 1, 1, 27);
-								Main.dust[num1331].velocity = -vector206 * 0.3f;
+								Main.dust[num1332].velocity = -vector207 * 0.3f;
-								Main.dust[num1331].alpha = 100;
+								Main.dust[num1332].alpha = 100;
 								if (Main.rand.Next(2) == 0) {
-									Main.dust[num1331].noGravity = true;
+									Main.dust[num1332].noGravity = true;
-									Dust dust = Main.dust[num1331];
+									Dust dust = Main.dust[num1332];
 									dust.scale += 0.3f;
 								}
 							}
 						}
 
 						localAI[0] += 1f;
-						float num1332 = 1f - localAI[0] / num1329;
+						float num1333 = 1f - localAI[0] / num1330;
-						float num1333 = num1332 * 20f;
+						float num1334 = num1333 * 20f;
-						for (int num1334 = 0; (float)num1334 < num1333; num1334++) {
+						for (int num1335 = 0; (float)num1335 < num1334; num1335++) {
 							if (Main.rand.Next(5) == 0) {
-								int num1335 = Dust.NewDust(base.position, width, height, 27);
+								int num1336 = Dust.NewDust(base.position, width, height, 27);
-								Main.dust[num1335].alpha = 100;
+								Main.dust[num1336].alpha = 100;
-								Dust dust = Main.dust[num1335];
+								Dust dust = Main.dust[num1336];
 								dust.velocity *= 0.3f;
-								dust = Main.dust[num1335];
+								dust = Main.dust[num1336];
 								dust.velocity += base.velocity * 0.75f;
-								Main.dust[num1335].noGravity = true;
+								Main.dust[num1336].noGravity = true;
 							}
 						}
 					}
 				}
 
 				if (type == 521) {
-					float num1336 = 120f;
+					float num1337 = 120f;
-					if (localAI[0] < num1336) {
+					if (localAI[0] < num1337) {
 						if (localAI[0] == 0f) {
 							Main.PlaySound(SoundID.Item8, base.Center);
 							TargetClosest();
@@ -25939,11 +_,11 @@
 						}
 
 						localAI[0] += 1f;
-						int num1337 = 10;
+						int num1338 = 10;
-						for (int num1338 = 0; num1338 < 2; num1338++) {
+						for (int num1339 = 0; num1339 < 2; num1339++) {
-							int num1339 = Dust.NewDust(base.position - new Vector2(num1337), width + num1337 * 2, height + num1337 * 2, 228, 0f, 0f, 100, default(Color), 2f);
+							int num1340 = Dust.NewDust(base.position - new Vector2(num1338), width + num1338 * 2, height + num1338 * 2, 228, 0f, 0f, 100, default(Color), 2f);
-							Main.dust[num1339].noGravity = true;
+							Main.dust[num1340].noGravity = true;
-							Main.dust[num1339].noLight = true;
+							Main.dust[num1340].noLight = true;
 						}
 					}
 				}
@@ -25955,37 +_,37 @@
 				}
 				else if (this.ai[0] == 1f) {
 					TargetClosest();
-					float num1340 = 0.3f;
+					float num1341 = 0.3f;
-					float num1341 = 7f;
+					float num1342 = 7f;
-					float num1342 = 4f;
+					float num1343 = 4f;
-					float num1343 = 660f;
+					float num1344 = 660f;
-					float num1344 = 4f;
+					float num1345 = 4f;
 					if (type == 521) {
-						num1340 = 0.7f;
+						num1341 = 0.7f;
-						num1341 = 14f;
+						num1342 = 14f;
-						num1343 = 500f;
+						num1344 = 500f;
-						num1342 = 6f;
+						num1343 = 6f;
-						num1344 = 3f;
+						num1345 = 3f;
 					}
 
-					base.velocity.X += this.ai[1] * num1340;
+					base.velocity.X += this.ai[1] * num1341;
-					if (base.velocity.X > num1341)
+					if (base.velocity.X > num1342)
-						base.velocity.X = num1341;
+						base.velocity.X = num1342;
 
-					if (base.velocity.X < 0f - num1341)
+					if (base.velocity.X < 0f - num1342)
-						base.velocity.X = 0f - num1341;
+						base.velocity.X = 0f - num1342;
 
-					float num1345 = Main.player[target].Center.Y - base.Center.Y;
+					float num1346 = Main.player[target].Center.Y - base.Center.Y;
-					if (Math.Abs(num1345) > num1342)
+					if (Math.Abs(num1346) > num1343)
-						num1344 = 15f;
+						num1345 = 15f;
 
-					if (num1345 > num1342)
+					if (num1346 > num1343)
-						num1345 = num1342;
+						num1346 = num1343;
-					else if (num1345 < 0f - num1342)
+					else if (num1346 < 0f - num1343)
-						num1345 = 0f - num1342;
+						num1346 = 0f - num1343;
 
-					base.velocity.Y = (base.velocity.Y * (num1344 - 1f) + num1345) / num1344;
+					base.velocity.Y = (base.velocity.Y * (num1345 - 1f) + num1346) / num1345;
-					if ((this.ai[1] > 0f && Main.player[target].Center.X - base.Center.X < 0f - num1343) || (this.ai[1] < 0f && Main.player[target].Center.X - base.Center.X > num1343)) {
+					if ((this.ai[1] > 0f && Main.player[target].Center.X - base.Center.X < 0f - num1344) || (this.ai[1] < 0f && Main.player[target].Center.X - base.Center.X > num1344)) {
 						this.ai[0] = 2f;
 						this.ai[1] = 0f;
 						if (base.Center.Y + 20f > Main.player[target].Center.Y)
@@ -25995,18 +_,18 @@
 					}
 				}
 				else if (this.ai[0] == 2f) {
-					float num1346 = 0.4f;
+					float num1347 = 0.4f;
-					float num1347 = 0.95f;
+					float num1348 = 0.95f;
-					float num1348 = 5f;
+					float num1349 = 5f;
 					if (type == 521) {
-						num1346 = 0.3f;
+						num1347 = 0.3f;
-						num1348 = 7f;
+						num1349 = 7f;
-						num1347 = 0.9f;
+						num1348 = 0.9f;
 					}
 
-					base.velocity.Y += this.ai[1] * num1346;
+					base.velocity.Y += this.ai[1] * num1347;
-					if (base.velocity.Length() > num1348)
+					if (base.velocity.Length() > num1349)
-						base.velocity *= num1347;
+						base.velocity *= num1348;
 
 					if (base.velocity.X > -1f && base.velocity.X < 1f) {
 						TargetClosest();
@@ -26015,25 +_,25 @@
 					}
 				}
 				else if (this.ai[0] == 3f) {
-					float num1349 = 0.4f;
+					float num1350 = 0.4f;
-					float num1350 = 0.2f;
+					float num1351 = 0.2f;
-					float num1351 = 5f;
+					float num1352 = 5f;
-					float num1352 = 0.95f;
+					float num1353 = 0.95f;
 					if (type == 521) {
-						num1349 = 0.6f;
+						num1350 = 0.6f;
-						num1350 = 0.3f;
+						num1351 = 0.3f;
-						num1351 = 7f;
+						num1352 = 7f;
-						num1352 = 0.9f;
+						num1353 = 0.9f;
 					}
 
-					base.velocity.X += this.ai[1] * num1349;
+					base.velocity.X += this.ai[1] * num1350;
 					if (base.Center.Y > Main.player[target].Center.Y)
-						base.velocity.Y -= num1350;
+						base.velocity.Y -= num1351;
 					else
-						base.velocity.Y += num1350;
+						base.velocity.Y += num1351;
 
-					if (base.velocity.Length() > num1351)
+					if (base.velocity.Length() > num1352)
-						base.velocity *= num1352;
+						base.velocity *= num1353;
 
 					if (base.velocity.Y > -1f && base.velocity.Y < 1f) {
 						TargetClosest();
@@ -26043,11 +_,11 @@
 				}
 
 				if (type == 521) {
-					int num1353 = 10;
+					int num1354 = 10;
-					for (int num1354 = 0; num1354 < 1; num1354++) {
+					for (int num1355 = 0; num1355 < 1; num1355++) {
-						int num1355 = Dust.NewDust(base.position - new Vector2(num1353), width + num1353 * 2, height + num1353 * 2, 228, 0f, 0f, 100, default(Color), 2f);
+						int num1356 = Dust.NewDust(base.position - new Vector2(num1354), width + num1354 * 2, height + num1354 * 2, 228, 0f, 0f, 100, default(Color), 2f);
-						Main.dust[num1355].noGravity = true;
+						Main.dust[num1356].noGravity = true;
-						Main.dust[num1355].noLight = true;
+						Main.dust[num1356].noLight = true;
 					}
 				}
 			}
@@ -26069,8 +_,8 @@
 
 				if (this.ai[0] == 0f) {
 					TargetClosest();
-					Vector2 vector207 = Main.player[target].Center - base.Center;
+					Vector2 vector208 = Main.player[target].Center - base.Center;
-					if (base.velocity.X != 0f || base.velocity.Y > 100f || justHit || vector207.Length() < 80f) {
+					if (base.velocity.X != 0f || base.velocity.Y > 100f || justHit || vector208.Length() < 80f) {
 						this.ai[0] = 1f;
 						this.ai[1] = 0f;
 					}
@@ -26094,23 +_,23 @@
 						TargetClosest();
 						base.velocity.X *= 0.85f;
 						this.ai[1] += 1f;
-						float num1356 = 15f + 30f * ((float)life / (float)lifeMax);
+						float num1357 = 15f + 30f * ((float)life / (float)lifeMax);
-						float num1357 = 3f + 4f * (1f - (float)life / (float)lifeMax);
+						float num1358 = 3f + 4f * (1f - (float)life / (float)lifeMax);
-						float num1358 = 4f;
+						float num1359 = 4f;
 						if (!Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1))
-							num1358 += 2f;
+							num1359 += 2f;
 
-						if (this.ai[1] > num1356) {
+						if (this.ai[1] > num1357) {
 							this.ai[3] += 1f;
 							if (this.ai[3] >= 3f) {
 								this.ai[3] = 0f;
-								num1358 *= 2f;
+								num1359 *= 2f;
-								num1357 /= 2f;
+								num1358 /= 2f;
 							}
 
 							this.ai[1] = 0f;
-							base.velocity.Y -= num1358;
+							base.velocity.Y -= num1359;
-							base.velocity.X = num1357 * (float)base.direction;
+							base.velocity.X = num1358 * (float)base.direction;
 						}
 					}
 					else {
@@ -26313,7 +_,7 @@
 				}
 			}
 			else if (aiStyle == 88) {
-				int num1359 = 7;
+				int num1360 = 7;
 				noTileCollide = false;
 				noGravity = true;
 				knockBackResist = 0.2f * Main.expertKnockBack;
@@ -26323,13 +_,13 @@
 				}
 				else if (target < 0 || Main.player[target].dead || !Main.player[target].active) {
 					TargetClosest();
-					Vector2 vector208 = Main.player[target].Center - base.Center;
-					if (Main.player[target].dead || vector208.Length() > 3000f)
-						this.ai[0] = -1f;
-				}
-				else {
 					Vector2 vector209 = Main.player[target].Center - base.Center;
+					if (Main.player[target].dead || vector209.Length() > 3000f)
+						this.ai[0] = -1f;
+				}
+				else {
+					Vector2 vector210 = Main.player[target].Center - base.Center;
-					if (this.ai[0] > 1f && vector209.Length() > 1000f)
+					if (this.ai[0] > 1f && vector210.Length() > 1000f)
 						this.ai[0] = 1f;
 				}
 
@@ -26376,11 +_,11 @@
 						this.ai[3] = 0f;
 					}
 					else if (value42.Length() > 80f) {
-						float num1360 = 6f;
+						float num1361 = 6f;
-						float num1361 = 30f;
+						float num1362 = 30f;
 						value42.Normalize();
-						value42 *= num1360;
+						value42 *= num1361;
-						base.velocity = (base.velocity * (num1361 - 1f) + value42) / num1361;
+						base.velocity = (base.velocity * (num1362 - 1f) + value42) / num1362;
 					}
 					else if (base.velocity.Length() > 2f) {
 						base.velocity *= 0.95f;
@@ -26401,18 +_,18 @@
 					this.ai[3] = 0f;
 					netUpdate = true;
 					while (this.ai[0] == 0f) {
-						int num1362 = Main.rand.Next(3);
+						int num1363 = Main.rand.Next(3);
-						if (num1362 == 0 && Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1)) {
+						if (num1363 == 0 && Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1)) {
 							this.ai[0] = 2f;
 							continue;
 						}
 
-						switch (num1362) {
+						switch (num1363) {
 							case 1:
 								this.ai[0] = 3f;
 								break;
 							case 2:
-								if (CountNPCS(478) + CountNPCS(479) < num1359)
+								if (CountNPCS(478) + CountNPCS(479) < num1360)
 									this.ai[0] = 4f;
 								break;
 						}
@@ -26441,11 +_,11 @@
 						this.ai[3] = 0f;
 					}
 
-					float num1363 = 7f + value43.Length() / 100f;
+					float num1364 = 7f + value43.Length() / 100f;
-					float num1364 = 25f;
+					float num1365 = 25f;
 					value43.Normalize();
-					value43 *= num1363;
+					value43 *= num1364;
-					base.velocity = (base.velocity * (num1364 - 1f) + value43) / num1364;
+					base.velocity = (base.velocity * (num1365 - 1f) + value43) / num1365;
 				}
 				else if (this.ai[0] == 2f) {
 					damage = (int)((double)defDamage * 0.5);
@@ -26489,11 +_,11 @@
 					if (Main.expertMode)
 						this.ai[2] += 0.016666668f;
 
-					float num1365 = 4f + this.ai[2] + value44.Length() / 120f;
+					float num1366 = 4f + this.ai[2] + value44.Length() / 120f;
-					float num1366 = 20f;
+					float num1367 = 20f;
 					value44.Normalize();
-					value44 *= num1365;
+					value44 *= num1366;
-					base.velocity = (base.velocity * (num1366 - 1f) + value44) / num1366;
+					base.velocity = (base.velocity * (num1367 - 1f) + value44) / num1367;
 					this.ai[1] += 1f;
 					if (this.ai[1] > 240f || !Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1)) {
 						this.ai[0] = 0f;
@@ -26525,23 +_,23 @@
 					}
 
 					this.ai[1] += 71f / (678f * (float)Math.PI);
-					float num1367 = 8f + this.ai[1];
+					float num1368 = 8f + this.ai[1];
-					float num1368 = 4f;
+					float num1369 = 4f;
 					value45.Normalize();
-					value45 *= num1367;
+					value45 *= num1368;
-					base.velocity = (base.velocity * (num1368 - 1f) + value45) / num1368;
+					base.velocity = (base.velocity * (num1369 - 1f) + value45) / num1369;
 				}
 				else if (this.ai[0] == 3.1f) {
 					knockBackResist = 0f;
 					noTileCollide = true;
 					rotation = (rotation * 4f + base.velocity.X * 0.07f) / 5f;
-					Vector2 vector210 = Main.player[target].Center - base.Center;
+					Vector2 vector211 = Main.player[target].Center - base.Center;
-					vector210.Y -= 12f;
+					vector211.Y -= 12f;
-					float num1369 = 16f;
+					float num1370 = 16f;
-					float num1370 = 8f;
+					float num1371 = 8f;
-					vector210.Normalize();
+					vector211.Normalize();
-					vector210 *= num1369;
+					vector211 *= num1370;
-					base.velocity = (base.velocity * (num1370 - 1f) + vector210) / num1370;
+					base.velocity = (base.velocity * (num1371 - 1f) + vector211) / num1371;
 					if (base.velocity.X < 0f)
 						base.direction = -1;
 					else
@@ -26550,7 +_,7 @@
 					spriteDirection = base.direction;
 					this.ai[1] += 1f;
 					if (this.ai[1] > 10f) {
-						base.velocity = vector210;
+						base.velocity = vector211;
 						if (base.velocity.X < 0f)
 							base.direction = -1;
 						else
@@ -26592,21 +_,21 @@
 					if (Main.netMode != 1) {
 						this.ai[1] = -1f;
 						this.ai[2] = -1f;
-						for (int num1371 = 0; num1371 < 1000; num1371++) {
+						for (int num1372 = 0; num1372 < 1000; num1372++) {
-							int num1372 = (int)Main.player[target].Center.X / 16;
+							int num1373 = (int)Main.player[target].Center.X / 16;
-							int num1373 = (int)Main.player[target].Center.Y / 16;
+							int num1374 = (int)Main.player[target].Center.Y / 16;
-							int num1374 = 30 + num1371 / 50;
+							int num1375 = 30 + num1372 / 50;
-							int num1375 = 20 + num1371 / 75;
+							int num1376 = 20 + num1372 / 75;
-							num1372 += Main.rand.Next(-num1374, num1374 + 1);
 							num1373 += Main.rand.Next(-num1375, num1375 + 1);
+							num1374 += Main.rand.Next(-num1376, num1376 + 1);
-							if (!WorldGen.SolidTile(num1372, num1373)) {
+							if (!WorldGen.SolidTile(num1373, num1374)) {
-								for (; !WorldGen.SolidTile(num1372, num1373) && (double)num1373 < Main.worldSurface; num1373++) {
+								for (; !WorldGen.SolidTile(num1373, num1374) && (double)num1374 < Main.worldSurface; num1374++) {
 								}
 
-								if ((new Vector2(num1372 * 16 + 8, num1373 * 16 + 8) - Main.player[target].Center).Length() < 600f) {
+								if ((new Vector2(num1373 * 16 + 8, num1374 * 16 + 8) - Main.player[target].Center).Length() < 600f) {
 									this.ai[0] = 4.1f;
-									this.ai[1] = num1372;
+									this.ai[1] = num1373;
-									this.ai[2] = num1373;
+									this.ai[2] = num1374;
 									break;
 								}
 							}
@@ -26624,23 +_,23 @@
 					spriteDirection = base.direction;
 					rotation = (rotation * 9f + base.velocity.X * 0.1f) / 10f;
 					noTileCollide = true;
-					int num1376 = (int)this.ai[1];
+					int num1377 = (int)this.ai[1];
-					int num1377 = (int)this.ai[2];
+					int num1378 = (int)this.ai[2];
-					float x3 = num1376 * 16 + 8;
+					float x3 = num1377 * 16 + 8;
-					float y4 = num1377 * 16 - 20;
+					float y4 = num1378 * 16 - 20;
 					Vector2 value46 = new Vector2(x3, y4);
 					value46 -= base.Center;
-					float num1378 = 6f + value46.Length() / 150f;
+					float num1379 = 6f + value46.Length() / 150f;
-					if (num1378 > 10f)
+					if (num1379 > 10f)
-						num1378 = 10f;
+						num1379 = 10f;
 
-					float num1379 = 10f;
+					float num1380 = 10f;
 					if (value46.Length() < 10f)
 						this.ai[0] = 4.2f;
 
 					value46.Normalize();
-					value46 *= num1378;
+					value46 *= num1379;
-					base.velocity = (base.velocity * (num1379 - 1f) + value46) / num1379;
+					base.velocity = (base.velocity * (num1380 - 1f) + value46) / num1380;
 				}
 				else {
 					if (this.ai[0] != 4.2f)
@@ -26649,41 +_,41 @@
 					rotation = (rotation * 9f + base.velocity.X * 0.1f) / 10f;
 					knockBackResist = 0f;
 					noTileCollide = true;
-					int num1380 = (int)this.ai[1];
+					int num1381 = (int)this.ai[1];
-					int num1381 = (int)this.ai[2];
+					int num1382 = (int)this.ai[2];
-					float x4 = num1380 * 16 + 8;
+					float x4 = num1381 * 16 + 8;
-					float y5 = num1381 * 16 - 20;
+					float y5 = num1382 * 16 - 20;
 					Vector2 value47 = new Vector2(x4, y5);
 					value47 -= base.Center;
-					float num1382 = 4f;
+					float num1383 = 4f;
-					float num1383 = 2f;
+					float num1384 = 2f;
 					if (Main.netMode != 1 && value47.Length() < 4f) {
-						int num1384 = 70;
+						int num1385 = 70;
 						if (Main.expertMode)
-							num1384 = (int)((double)num1384 * 0.75);
+							num1385 = (int)((double)num1385 * 0.75);
 
 						this.ai[3] += 1f;
-						if (this.ai[3] == (float)num1384) {
+						if (this.ai[3] == (float)num1385) {
-							NewNPC(num1380 * 16 + 8, num1381 * 16, 478, whoAmI);
+							NewNPC(num1381 * 16 + 8, num1382 * 16, 478, whoAmI);
 						}
-						else if (this.ai[3] == (float)(num1384 * 2)) {
+						else if (this.ai[3] == (float)(num1385 * 2)) {
 							this.ai[0] = 0f;
 							this.ai[1] = 0f;
 							this.ai[2] = 0f;
 							this.ai[3] = 0f;
-							if (CountNPCS(478) + CountNPCS(479) < num1359 && Main.rand.Next(3) != 0)
+							if (CountNPCS(478) + CountNPCS(479) < num1360 && Main.rand.Next(3) != 0)
 								this.ai[0] = 4f;
 							else if (Collision.SolidCollision(base.position, width, height))
 								this.ai[0] = 1f;
 						}
 					}
 
-					if (value47.Length() > num1382) {
+					if (value47.Length() > num1383) {
 						value47.Normalize();
-						value47 *= num1382;
+						value47 *= num1383;
 					}
 
-					base.velocity = (base.velocity * (num1383 - 1f) + value47) / num1383;
+					base.velocity = (base.velocity * (num1384 - 1f) + value47) / num1384;
 				}
 			}
 			else if (aiStyle == 89) {
@@ -26696,9 +_,9 @@
 					rotation += base.velocity.X * 0.04f;
 				}
 
-				int num1385 = 900;
+				int num1386 = 900;
 				if (Main.expertMode)
-					num1385 = 600;
+					num1386 = 600;
 
 				if (justHit) {
 					this.ai[0] -= Main.rand.Next(10, 21);
@@ -26707,16 +_,16 @@
 				}
 
 				this.ai[0] += 1f;
-				if (this.ai[0] >= (float)num1385)
+				if (this.ai[0] >= (float)num1386)
 					Transform(479);
 
-				if (Main.netMode != 1 && base.velocity.Y == 0f && (double)Math.Abs(base.velocity.X) < 0.2 && (double)this.ai[0] >= (double)num1385 * 0.75) {
+				if (Main.netMode != 1 && base.velocity.Y == 0f && (double)Math.Abs(base.velocity.X) < 0.2 && (double)this.ai[0] >= (double)num1386 * 0.75) {
-					float num1386 = this.ai[0] - (float)num1385 * 0.75f;
+					float num1387 = this.ai[0] - (float)num1386 * 0.75f;
-					num1386 /= (float)num1385 * 0.25f;
+					num1387 /= (float)num1386 * 0.25f;
-					if ((float)Main.rand.Next(-10, 120) < num1386 * 100f) {
+					if ((float)Main.rand.Next(-10, 120) < num1387 * 100f) {
 						base.velocity.Y -= (float)Main.rand.Next(20, 40) * 0.025f;
 						base.velocity.X += (float)Main.rand.Next(-20, 20) * 0.025f;
-						base.velocity *= 1f + num1386 * 2f;
+						base.velocity *= 1f + num1387 * 2f;
 						netUpdate = true;
 					}
 				}
@@ -26739,15 +_,15 @@
 				}
 
 				if (this.ai[0] == 0f || this.ai[0] == 1f) {
-					for (int num1387 = 0; num1387 < 200; num1387++) {
+					for (int num1388 = 0; num1388 < 200; num1388++) {
-						if (num1387 != whoAmI && Main.npc[num1387].active && Main.npc[num1387].type == type) {
+						if (num1388 != whoAmI && Main.npc[num1388].active && Main.npc[num1388].type == type) {
-							Vector2 vector211 = Main.npc[num1387].Center - base.Center;
+							Vector2 vector212 = Main.npc[num1388].Center - base.Center;
-							if (vector211.Length() < (float)(width + height)) {
+							if (vector212.Length() < (float)(width + height)) {
-								vector211.Normalize();
+								vector212.Normalize();
-								vector211 *= -0.1f;
+								vector212 *= -0.1f;
-								base.velocity += vector211;
+								base.velocity += vector212;
-								NPC nPC6 = Main.npc[num1387];
+								NPC nPC6 = Main.npc[num1388];
-								nPC6.velocity -= vector211;
+								nPC6.velocity -= vector212;
 							}
 						}
 					}
@@ -26755,13 +_,13 @@
 
 				if (target < 0 || Main.player[target].dead || !Main.player[target].active) {
 					TargetClosest();
-					Vector2 vector212 = Main.player[target].Center - base.Center;
-					if (Main.player[target].dead || vector212.Length() > 3000f)
-						this.ai[0] = -1f;
-				}
-				else {
 					Vector2 vector213 = Main.player[target].Center - base.Center;
+					if (Main.player[target].dead || vector213.Length() > 3000f)
+						this.ai[0] = -1f;
+				}
+				else {
+					Vector2 vector214 = Main.player[target].Center - base.Center;
-					if (this.ai[0] > 1f && vector213.Length() > 1000f)
+					if (this.ai[0] > 1f && vector214.Length() > 1000f)
 						this.ai[0] = 1f;
 				}
 
@@ -26800,11 +_,11 @@
 						this.ai[3] = 0f;
 					}
 					else if (value49.Length() > 200f) {
-						float num1388 = 5.5f + value49.Length() / 100f + this.ai[1] / 15f;
+						float num1389 = 5.5f + value49.Length() / 100f + this.ai[1] / 15f;
-						float num1389 = 40f;
+						float num1390 = 40f;
 						value49.Normalize();
-						value49 *= num1388;
+						value49 *= num1389;
-						base.velocity = (base.velocity * (num1389 - 1f) + value49) / num1389;
+						base.velocity = (base.velocity * (num1390 - 1f) + value49) / num1390;
 					}
 					else if (base.velocity.Length() > 2f) {
 						base.velocity *= 0.95f;
@@ -26843,11 +_,11 @@
 					}
 
 					this.ai[2] += 0.016666668f;
-					float num1390 = 5.5f + this.ai[2] + value50.Length() / 150f;
+					float num1391 = 5.5f + this.ai[2] + value50.Length() / 150f;
-					float num1391 = 35f;
+					float num1392 = 35f;
 					value50.Normalize();
-					value50 *= num1390;
+					value50 *= num1391;
-					base.velocity = (base.velocity * (num1391 - 1f) + value50) / num1391;
+					base.velocity = (base.velocity * (num1392 - 1f) + value50) / num1392;
 				}
 				else if (this.ai[0] == 2f) {
 					if (base.velocity.X < 0f)
@@ -26859,13 +_,13 @@
 					rotation = (rotation * 7f + base.velocity.X * 0.1f) / 8f;
 					knockBackResist = 0f;
 					noTileCollide = true;
-					Vector2 vector214 = Main.player[target].Center - base.Center;
+					Vector2 vector215 = Main.player[target].Center - base.Center;
-					vector214.Y -= 8f;
+					vector215.Y -= 8f;
-					float num1392 = 9f;
+					float num1393 = 9f;
-					float num1393 = 8f;
+					float num1394 = 8f;
-					vector214.Normalize();
+					vector215.Normalize();
-					vector214 *= num1392;
+					vector215 *= num1393;
-					base.velocity = (base.velocity * (num1393 - 1f) + vector214) / num1393;
+					base.velocity = (base.velocity * (num1394 - 1f) + vector215) / num1394;
 					if (base.velocity.X < 0f)
 						base.direction = -1;
 					else
@@ -26874,7 +_,7 @@
 					spriteDirection = base.direction;
 					this.ai[1] += 1f;
 					if (this.ai[1] > 10f) {
-						base.velocity = vector214;
+						base.velocity = vector215;
 						if (base.velocity.X < 0f)
 							base.direction = -1;
 						else
@@ -26898,14 +_,14 @@
 					knockBackResist = 0f;
 					noTileCollide = true;
 					this.ai[1] += 1f;
-					int num1394 = 45;
+					int num1395 = 45;
-					if (this.ai[1] > (float)num1394) {
+					if (this.ai[1] > (float)num1395) {
 						if (!Collision.SolidCollision(base.position, width, height)) {
 							this.ai[0] = 0f;
 							this.ai[1] = 0f;
 							this.ai[2] = 0f;
 						}
-						else if (this.ai[1] > (float)(num1394 * 2)) {
+						else if (this.ai[1] > (float)(num1395 * 2)) {
 							this.ai[0] = 1f;
 							this.ai[1] = 0f;
 							this.ai[2] = 0f;
@@ -26938,24 +_,24 @@
 						return;
 					}
 
-					Vector2 vector215 = Main.player[target].Center - base.Center;
+					Vector2 vector216 = Main.player[target].Center - base.Center;
-					vector215.Y -= Main.player[target].height / 4;
+					vector216.Y -= Main.player[target].height / 4;
-					float num1395 = vector215.Length();
+					float num1396 = vector216.Length();
-					if (num1395 > 800f) {
+					if (num1396 > 800f) {
 						this.ai[0] = 2f;
 						return;
 					}
 
 					Vector2 center35 = base.Center;
 					center35.X = Main.player[target].Center.X;
-					Vector2 vector216 = center35 - base.Center;
+					Vector2 vector217 = center35 - base.Center;
-					if (vector216.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center35, 1, 1)) {
+					if (vector217.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center35, 1, 1)) {
 						this.ai[0] = 3f;
 						this.ai[1] = center35.X;
 						this.ai[2] = center35.Y;
 						Vector2 center36 = base.Center;
 						center36.Y = Main.player[target].Center.Y;
-						if (vector216.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center36, 1, 1) && Collision.CanHit(center36, 1, 1, Main.player[target].position, 1, 1)) {
+						if (vector217.Length() > 8f && Collision.CanHit(base.Center, 1, 1, center36, 1, 1) && Collision.CanHit(center36, 1, 1, Main.player[target].position, 1, 1)) {
 							this.ai[0] = 3f;
 							this.ai[1] = center36.X;
 							this.ai[2] = center36.Y;
@@ -26973,22 +_,22 @@
 
 					if (this.ai[0] == 0f) {
 						localAI[0] = 0f;
-						vector215.Normalize();
+						vector216.Normalize();
-						vector215 *= 0.5f;
+						vector216 *= 0.5f;
-						base.velocity += vector215;
+						base.velocity += vector216;
 						this.ai[0] = 4f;
 						this.ai[1] = 0f;
 					}
 				}
 				else if (this.ai[0] == 1f) {
 					Vector2 value51 = Main.player[target].Center - base.Center;
-					float num1396 = value51.Length();
+					float num1397 = value51.Length();
-					float num1397 = 2f;
+					float num1398 = 2f;
-					num1397 += num1396 / 200f;
+					num1398 += num1397 / 200f;
-					int num1398 = 50;
+					int num1399 = 50;
 					value51.Normalize();
-					value51 *= num1397;
+					value51 *= num1398;
-					base.velocity = (base.velocity * (num1398 - 1) + value51) / num1398;
+					base.velocity = (base.velocity * (num1399 - 1) + value51) / num1399;
 					if (!Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1)) {
 						this.ai[0] = 0f;
 						this.ai[1] = 0f;
@@ -26997,30 +_,30 @@
 				else if (this.ai[0] == 2f) {
 					noTileCollide = true;
 					Vector2 value52 = Main.player[target].Center - base.Center;
-					float num1399 = value52.Length();
+					float num1400 = value52.Length();
-					float num1400 = 2f;
+					float num1401 = 2f;
-					int num1401 = 4;
+					int num1402 = 4;
 					value52.Normalize();
-					value52 *= num1400;
+					value52 *= num1401;
-					base.velocity = (base.velocity * (num1401 - 1) + value52) / num1401;
+					base.velocity = (base.velocity * (num1402 - 1) + value52) / num1402;
-					if (num1399 < 600f && !Collision.SolidCollision(base.position, width, height))
+					if (num1400 < 600f && !Collision.SolidCollision(base.position, width, height))
 						this.ai[0] = 0f;
 				}
 				else if (this.ai[0] == 3f) {
 					Vector2 value53 = new Vector2(this.ai[1], this.ai[2]);
 					Vector2 value54 = value53 - base.Center;
-					float num1402 = value54.Length();
+					float num1403 = value54.Length();
-					float num1403 = 1f;
+					float num1404 = 1f;
-					float num1404 = 3f;
+					float num1405 = 3f;
 					value54.Normalize();
-					value54 *= num1403;
+					value54 *= num1404;
-					base.velocity = (base.velocity * (num1404 - 1f) + value54) / num1404;
+					base.velocity = (base.velocity * (num1405 - 1f) + value54) / num1405;
 					if (collideX || collideY) {
 						this.ai[0] = 4f;
 						this.ai[1] = 0f;
 					}
 
-					if (num1402 < num1403 || num1402 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1))
+					if (num1403 < num1404 || num1403 > 800f || Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1))
 						this.ai[0] = 0f;
 				}
 				else {
@@ -27041,12 +_,12 @@
 						base.velocity = value55 * 0.1f;
 					}
 
-					float num1405 = 1.5f;
+					float num1406 = 1.5f;
-					float num1406 = 20f;
+					float num1407 = 20f;
 					value55 = base.velocity;
 					value55.Normalize();
-					value55 *= num1405;
+					value55 *= num1406;
-					base.velocity = (base.velocity * (num1406 - 1f) + value55) / num1406;
+					base.velocity = (base.velocity * (num1407 - 1f) + value55) / num1407;
 					this.ai[1] += 1f;
 					if (this.ai[1] > 180f) {
 						this.ai[0] = 0f;
@@ -27098,9 +_,9 @@
 					return;
 
 				bool flag85 = false;
-				int num1407 = (int)this.ai[0];
+				int num1408 = (int)this.ai[0];
-				int num1408 = (int)this.ai[1];
+				int num1409 = (int)this.ai[1];
-				if (!flag85 && (!Main.tile[num1407, num1408].active() || Main.tile[num1407, num1408].type != 378))
+				if (!flag85 && (!Main.tile[num1408, num1409].active() || Main.tile[num1408, num1409].type != 378))
 					flag85 = true;
 
 				if (!flag85 && (target == 255 || Main.player[target].dead || Vector2.Distance(base.Center, Main.player[target].Center) > 160000f)) {
@@ -27113,33 +_,33 @@
 					life = 0;
 					HitEffect();
 					active = false;
-					int num1409 = TETrainingDummy.Find((int)this.ai[0], (int)this.ai[1]);
+					int num1410 = TETrainingDummy.Find((int)this.ai[0], (int)this.ai[1]);
-					if (num1409 != -1)
+					if (num1410 != -1)
-						((TETrainingDummy)TileEntity.ByID[num1409]).Deactivate();
+						((TETrainingDummy)TileEntity.ByID[num1410]).Deactivate();
 				}
 			}
 			else if (aiStyle == 93) {
 				if (localAI[0] == 0f) {
 					localAI[0] = 1f;
-					for (int num1410 = 0; num1410 < 4; num1410++) {
+					for (int num1411 = 0; num1411 < 4; num1411++) {
-						int num1411 = NewNPC((int)base.Center.X + num1410 * 40 - 150, (int)base.Center.Y, 492, whoAmI);
+						int num1412 = NewNPC((int)base.Center.X + num1411 * 40 - 150, (int)base.Center.Y, 492, whoAmI);
-						Main.npc[num1411].netUpdate = true;
+						Main.npc[num1412].netUpdate = true;
-						Main.npc[num1411].ai[0] = whoAmI;
+						Main.npc[num1412].ai[0] = whoAmI;
-						Main.npc[num1411].ai[1] = num1410;
+						Main.npc[num1412].ai[1] = num1411;
-						Main.npc[num1411].ai[3] = 60 * num1410;
+						Main.npc[num1412].ai[3] = 60 * num1411;
-						Main.npc[num1411].TargetClosest(faceTarget: false);
+						Main.npc[num1412].TargetClosest(faceTarget: false);
-						Main.npc[num1411].timeLeft = 600;
+						Main.npc[num1412].timeLeft = 600;
-						this.ai[num1410] = num1411;
+						this.ai[num1411] = num1412;
 					}
 				}
 
 				bool flag86 = true;
-				for (int num1412 = 0; num1412 < 4; num1412++) {
+				for (int num1413 = 0; num1413 < 4; num1413++) {
-					if (this.ai[num1412] >= 0f && (!Main.npc[(int)this.ai[num1412]].active || Main.npc[(int)this.ai[num1412]].type != 492)) {
+					if (this.ai[num1413] >= 0f && (!Main.npc[(int)this.ai[num1413]].active || Main.npc[(int)this.ai[num1413]].type != 492)) {
-						this.ai[num1412] = -1f;
+						this.ai[num1413] = -1f;
 						netUpdate = true;
 					}
-					else if (this.ai[num1412] >= 0f) {
+					else if (this.ai[num1413] >= 0f) {
 						flag86 = false;
 					}
 				}
@@ -27152,69 +_,69 @@
 				}
 
 				if (Main.netMode != 1 && Main.rand.Next(300) == 0) {
-					Vector2 vector217 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(width - 70), (Main.rand.NextFloat() - 0.5f) * 20f - (float)(height / 2) - 20f).RotatedBy(rotation);
+					Vector2 vector218 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(width - 70), (Main.rand.NextFloat() - 0.5f) * 20f - (float)(height / 2) - 20f).RotatedBy(rotation);
-					vector217 += base.Center;
+					vector218 += base.Center;
-					int num1413 = NewNPC((int)vector217.X, (int)vector217.Y, Utils.SelectRandom<int>(Main.rand, 213, 215, 214, 212));
+					int num1414 = NewNPC((int)vector218.X, (int)vector218.Y, Utils.SelectRandom<int>(Main.rand, 213, 215, 214, 212));
-					Main.npc[num1413].velocity = new Vector2((Main.rand.NextFloat() - 0.5f) * 5f, -8.01f) + base.velocity;
+					Main.npc[num1414].velocity = new Vector2((Main.rand.NextFloat() - 0.5f) * 5f, -8.01f) + base.velocity;
-					Main.npc[num1413].netUpdate = true;
+					Main.npc[num1414].netUpdate = true;
-					Main.npc[num1413].timeLeft = 600;
+					Main.npc[num1414].timeLeft = 600;
 				}
 
 				if ((localAI[3] += 1f) >= 64f)
 					localAI[3] = 0f;
 
 				TargetClosest();
-				int num1414 = (int)base.Center.X / 16 + Math.Sign(base.velocity.X) * 10;
+				int num1415 = (int)base.Center.X / 16 + Math.Sign(base.velocity.X) * 10;
-				int num1415 = (int)(base.position.Y + (float)height) / 16;
+				int num1416 = (int)(base.position.Y + (float)height) / 16;
-				int num1416 = 0;
+				int num1417 = 0;
-				if (Main.tile[num1414, num1415].nactive() && Main.tileSolid[Main.tile[num1414, num1415].type] && !Main.tileSolidTop[Main.tile[num1414, num1415].type]) {
+				if (Main.tile[num1415, num1416].nactive() && Main.tileSolid[Main.tile[num1415, num1416].type] && !Main.tileSolidTop[Main.tile[num1415, num1416].type]) {
-					num1416 = 1;
+					num1417 = 1;
 				}
 				else {
-					for (; num1416 < 150 && num1415 + num1416 < Main.maxTilesY; num1416++) {
+					for (; num1417 < 150 && num1416 + num1417 < Main.maxTilesY; num1417++) {
-						int num1417 = num1415 + num1416;
+						int num1418 = num1416 + num1417;
-						if (Main.tile[num1414, num1417].nactive() && Main.tileSolid[Main.tile[num1414, num1417].type] && !Main.tileSolidTop[Main.tile[num1414, num1417].type]) {
+						if (Main.tile[num1415, num1418].nactive() && Main.tileSolid[Main.tile[num1415, num1418].type] && !Main.tileSolidTop[Main.tile[num1415, num1418].type]) {
-							num1416--;
+							num1417--;
 							break;
 						}
 					}
 				}
 
-				float num1418 = num1416 * 16;
+				float num1419 = num1417 * 16;
-				if (num1418 < 350f) {
+				if (num1419 < 350f) {
-					float num1419 = num1418 - 350f;
+					float num1420 = num1419 - 350f;
-					if (num1419 < -4f)
+					if (num1420 < -4f)
-						num1419 = -4f;
+						num1420 = -4f;
-
-					base.velocity.Y = MathHelper.Lerp(base.velocity.Y, num1419, 0.05f);
-				}
-				else if (num1418 > 450f) {
-					float num1420 = num1418 - 350f;
-					if (num1420 > 4f)
-						num1420 = 4f;
 
 					base.velocity.Y = MathHelper.Lerp(base.velocity.Y, num1420, 0.05f);
 				}
+				else if (num1419 > 450f) {
+					float num1421 = num1419 - 350f;
+					if (num1421 > 4f)
+						num1421 = 4f;
+
+					base.velocity.Y = MathHelper.Lerp(base.velocity.Y, num1421, 0.05f);
+				}
 				else {
 					base.velocity.Y *= 0.95f;
 				}
 
-				float num1421 = Main.player[target].Center.X - base.Center.X;
+				float num1422 = Main.player[target].Center.X - base.Center.X;
-				if (Math.Abs(num1421) >= 300f && (Math.Abs(base.velocity.X) < 6f || Math.Sign(base.velocity.X) != base.direction))
+				if (Math.Abs(num1422) >= 300f && (Math.Abs(base.velocity.X) < 6f || Math.Sign(base.velocity.X) != base.direction))
 					base.velocity.X += (float)base.direction * 0.06f;
 
 				rotation = base.velocity.X * 0.025f;
 				spriteDirection = -Math.Sign(base.velocity.X);
-				for (int num1422 = 0; num1422 < 2; num1422++) {
+				for (int num1423 = 0; num1423 < 2; num1423++) {
 					if (Main.rand.Next(2) != 0) {
 						Vector2 value56 = new Vector2((Main.rand.NextFloat() - 0.5f) * (float)(width - 70), (Main.rand.NextFloat() - 0.5f) * 20f + (float)(height / 2) + 10f).RotatedBy(rotation);
-						Dust dust3 = Main.dust[Dust.NewDust(base.Center, 0, 0, 228)];
+						Dust dust4 = Main.dust[Dust.NewDust(base.Center, 0, 0, 228)];
-						dust3.position = base.Center + value56;
+						dust4.position = base.Center + value56;
-						dust3.velocity = Vector2.Zero;
+						dust4.velocity = Vector2.Zero;
-						dust3.noGravity = true;
+						dust4.noGravity = true;
-						dust3.noLight = true;
+						dust4.noLight = true;
-						dust3.fadeIn = 1.5f;
+						dust4.fadeIn = 1.5f;
-						dust3.scale = 0.5f;
+						dust4.scale = 0.5f;
 					}
 				}
 			}
@@ -27232,59 +_,59 @@
 					if (this.ai[1] > 120f)
 						Opacity = 1f - (this.ai[1] - 120f) / 60f;
 
-					int num1423 = 6;
+					int num1424 = 6;
 					switch (type) {
 						case 517:
-							num1423 = 127;
+							num1424 = 127;
 							break;
 						case 422:
-							num1423 = 229;
+							num1424 = 229;
 							break;
 						case 507:
-							num1423 = 242;
+							num1424 = 242;
 							break;
 						case 493:
-							num1423 = 135;
+							num1424 = 135;
 							break;
 					}
 
 					if (Main.rand.Next(5) == 0 && this.ai[1] < 120f) {
-						for (int num1424 = 0; num1424 < 3; num1424++) {
-							Dust dust4 = Main.dust[Dust.NewDust(base.Left, width, height / 2, num1423)];
-							dust4.position = base.Center + Vector2.UnitY.RotatedByRandom(4.188790321350098) * new Vector2((float)width * 1.5f, (float)height * 1.1f) * 0.8f * (0.8f + Main.rand.NextFloat() * 0.2f);
-							dust4.velocity.X = 0f;
-							dust4.velocity.Y = (0f - Math.Abs(dust4.velocity.Y - (float)num1424 + base.velocity.Y - 4f)) * 3f;
-							dust4.noGravity = true;
-							dust4.fadeIn = 1f;
-							dust4.scale = 1f + Main.rand.NextFloat() + (float)num1424 * 0.3f;
-						}
-					}
-
-					if (this.ai[1] < 150f) {
 						for (int num1425 = 0; num1425 < 3; num1425++) {
-							if (Main.rand.Next(4) == 0) {
+							Dust dust5 = Main.dust[Dust.NewDust(base.Left, width, height / 2, num1424)];
-								Dust dust5 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1425), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1425)), 20, num1423)];
+							dust5.position = base.Center + Vector2.UnitY.RotatedByRandom(4.188790321350098) * new Vector2((float)width * 1.5f, (float)height * 1.1f) * 0.8f * (0.8f + Main.rand.NextFloat() * 0.2f);
-								dust5.velocity.X = 0f;
+							dust5.velocity.X = 0f;
-								dust5.velocity.Y = (0f - Math.Abs(dust5.velocity.Y - (float)num1425 + base.velocity.Y - 4f)) * (1f + this.ai[1] / 180f * 0.5f);
+							dust5.velocity.Y = (0f - Math.Abs(dust5.velocity.Y - (float)num1425 + base.velocity.Y - 4f)) * 3f;
-								dust5.noGravity = true;
+							dust5.noGravity = true;
-								dust5.fadeIn = 1f;
+							dust5.fadeIn = 1f;
-								dust5.scale = 1f + Main.rand.NextFloat() + (float)num1425 * 0.3f;
+							dust5.scale = 1f + Main.rand.NextFloat() + (float)num1425 * 0.3f;
-							}
 						}
 					}
 
-					if (Main.rand.Next(5) == 0 && this.ai[1] < 150f) {
+					if (this.ai[1] < 150f) {
 						for (int num1426 = 0; num1426 < 3; num1426++) {
-							Vector2 position6 = base.Center + Vector2.UnitY.RotatedByRandom(4.188790321350098) * new Vector2(width, height) * 0.7f * Main.rand.NextFloat();
-							float num1427 = 1f + Main.rand.NextFloat() * 2f + this.ai[1] / 180f * 4f;
-							for (int num1428 = 0; num1428 < 6; num1428++) {
-								Dust dust6 = Main.dust[Dust.NewDust(position6, 4, 4, num1423)];
-								dust6.position = position6;
-								dust6.velocity.X *= num1427;
-								dust6.velocity.Y = (0f - Math.Abs(dust6.velocity.Y)) * num1427;
+							if (Main.rand.Next(4) == 0) {
+								Dust dust6 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1426), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1426)), 20, num1424)];
+								dust6.velocity.X = 0f;
+								dust6.velocity.Y = (0f - Math.Abs(dust6.velocity.Y - (float)num1426 + base.velocity.Y - 4f)) * (1f + this.ai[1] / 180f * 0.5f);
 								dust6.noGravity = true;
 								dust6.fadeIn = 1f;
+								dust6.scale = 1f + Main.rand.NextFloat() + (float)num1426 * 0.3f;
+							}
+						}
+					}
+
+					if (Main.rand.Next(5) == 0 && this.ai[1] < 150f) {
+						for (int num1427 = 0; num1427 < 3; num1427++) {
+							Vector2 position6 = base.Center + Vector2.UnitY.RotatedByRandom(4.188790321350098) * new Vector2(width, height) * 0.7f * Main.rand.NextFloat();
+							float num1428 = 1f + Main.rand.NextFloat() * 2f + this.ai[1] / 180f * 4f;
+							for (int num1429 = 0; num1429 < 6; num1429++) {
+								Dust dust7 = Main.dust[Dust.NewDust(position6, 4, 4, num1424)];
+								dust7.position = position6;
+								dust7.velocity.X *= num1428;
+								dust7.velocity.Y = (0f - Math.Abs(dust7.velocity.Y)) * num1428;
+								dust7.noGravity = true;
+								dust7.fadeIn = 1f;
-								dust6.scale = 1.5f + Main.rand.NextFloat() + (float)num1428 * 0.13f;
+								dust7.scale = 1.5f + Main.rand.NextFloat() + (float)num1429 * 0.13f;
 							}
 
 							Main.PlaySound(3, position6, Utils.SelectRandom<int>(Main.rand, 1, 18));
@@ -27292,10 +_,10 @@
 					}
 
 					if (Main.rand.Next(3) != 0 && this.ai[1] < 150f) {
-						Dust dust7 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
+						Dust dust8 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
-						dust7.position = base.Center + Vector2.UnitY.RotatedByRandom(4.188790321350098) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
+						dust8.position = base.Center + Vector2.UnitY.RotatedByRandom(4.188790321350098) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
-						dust7.velocity.X = 0f;
+						dust8.velocity.X = 0f;
-						dust7.velocity.Y = Math.Abs(dust7.velocity.Y) * 0.25f;
+						dust8.velocity.Y = Math.Abs(dust8.velocity.Y) * 0.25f;
 					}
 
 					if (this.ai[1] % 60f == 1f)
@@ -27377,20 +_,20 @@
 
 				if (type == 493) {
 					if (Main.rand.Next(5) == 0) {
-						Dust dust8 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
+						Dust dust9 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
-						dust8.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
+						dust9.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
-						dust8.velocity.X = 0f;
+						dust9.velocity.X = 0f;
-						dust8.velocity.Y = Math.Abs(dust8.velocity.Y) * 0.25f;
+						dust9.velocity.Y = Math.Abs(dust9.velocity.Y) * 0.25f;
 					}
 
-					for (int num1429 = 0; num1429 < 3; num1429++) {
+					for (int num1430 = 0; num1430 < 3; num1430++) {
 						if (Main.rand.Next(5) == 0) {
-							Dust dust9 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1429), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1429)), 20, 135)];
+							Dust dust10 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1430), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1430)), 20, 135)];
-							dust9.velocity.X = 0f;
+							dust10.velocity.X = 0f;
-							dust9.velocity.Y = (0f - Math.Abs(dust9.velocity.Y - (float)num1429 + base.velocity.Y - 4f)) * 1f;
+							dust10.velocity.Y = (0f - Math.Abs(dust10.velocity.Y - (float)num1430 + base.velocity.Y - 4f)) * 1f;
-							dust9.noGravity = true;
+							dust10.noGravity = true;
-							dust9.fadeIn = 1f;
+							dust10.fadeIn = 1f;
-							dust9.scale = 1f + Main.rand.NextFloat() + (float)num1429 * 0.3f;
+							dust10.scale = 1f + Main.rand.NextFloat() + (float)num1430 * 0.3f;
 						}
 					}
 
@@ -27409,64 +_,64 @@
 							list.Add(407);
 
 						if (list.Count > 0) {
-							int num1430 = Utils.SelectRandom(Main.rand, list.ToArray());
+							int num1431 = Utils.SelectRandom(Main.rand, list.ToArray());
 							this.ai[1] = 30 * Main.rand.Next(5, 16);
-							int num1431 = Main.rand.Next(3, 6);
+							int num1432 = Main.rand.Next(3, 6);
-							int num1432 = Main.rand.Next(0, 4);
+							int num1433 = Main.rand.Next(0, 4);
-							int num1433 = 0;
+							int num1434 = 0;
 							List<Tuple<Vector2, int, int>> list2 = new List<Tuple<Vector2, int, int>>();
 							List<Vector2> list3 = new List<Vector2>();
-							list2.Add(Tuple.Create(base.Top - Vector2.UnitY * 120f, num1431, 0));
+							list2.Add(Tuple.Create(base.Top - Vector2.UnitY * 120f, num1432, 0));
-							int num1434 = 0;
+							int num1435 = 0;
-							int num1435 = list2.Count;
+							int num1436 = list2.Count;
 							while (list2.Count > 0) {
 								Vector2 item = list2[0].Item1;
-								int num1436 = 1;
 								int num1437 = 1;
+								int num1438 = 1;
-								if (num1434 > 0 && num1432 > 0 && (Main.rand.Next(3) != 0 || num1434 == 1)) {
+								if (num1435 > 0 && num1433 > 0 && (Main.rand.Next(3) != 0 || num1435 == 1)) {
-									num1437 = Main.rand.Next(Math.Max(1, list2[0].Item2));
+									num1438 = Main.rand.Next(Math.Max(1, list2[0].Item2));
-									num1436++;
+									num1437++;
-									num1432--;
+									num1433--;
 								}
 
-								for (int num1438 = 0; num1438 < num1436; num1438++) {
+								for (int num1439 = 0; num1439 < num1437; num1439++) {
-									int num1439 = list2[0].Item3;
+									int num1440 = list2[0].Item3;
-									if (num1434 == 0)
+									if (num1435 == 0)
-										num1439 = Utils.SelectRandom<int>(Main.rand, -1, 1);
+										num1440 = Utils.SelectRandom<int>(Main.rand, -1, 1);
-									else if (num1438 == 1)
+									else if (num1439 == 1)
-										num1439 *= -1;
+										num1440 *= -1;
 
-									float num1440 = ((num1434 % 2 == 0) ? 0f : ((float)Math.PI)) + (0.5f - Main.rand.NextFloat()) * ((float)Math.PI / 4f) + (float)num1439 * ((float)Math.PI / 4f) * (float)(num1434 % 2 == 0).ToDirectionInt();
+									float num1441 = ((num1435 % 2 == 0) ? 0f : ((float)Math.PI)) + (0.5f - Main.rand.NextFloat()) * ((float)Math.PI / 4f) + (float)num1440 * ((float)Math.PI / 4f) * (float)(num1435 % 2 == 0).ToDirectionInt();
 									float scaleFactor9 = 100f + 50f * Main.rand.NextFloat();
-									int num1441 = list2[0].Item2;
+									int num1442 = list2[0].Item2;
-									if (num1438 != 0)
+									if (num1439 != 0)
-										num1441 = num1437;
+										num1442 = num1438;
 
-									if (num1434 == 0) {
+									if (num1435 == 0) {
-										num1440 = (0.5f - Main.rand.NextFloat()) * ((float)Math.PI / 4f);
+										num1441 = (0.5f - Main.rand.NextFloat()) * ((float)Math.PI / 4f);
 										scaleFactor9 = 100f + 100f * Main.rand.NextFloat();
 									}
 
-									Vector2 value57 = (-Vector2.UnitY).RotatedBy(num1440) * scaleFactor9;
+									Vector2 value57 = (-Vector2.UnitY).RotatedBy(num1441) * scaleFactor9;
-									if (num1441 - 1 < 0)
+									if (num1442 - 1 < 0)
 										value57 = Vector2.Zero;
 
-									num1433 = Projectile.NewProjectile(item.X, item.Y, value57.X, value57.Y, 540, 0, 0f, Main.myPlayer, (float)(-num1434) * 10f, 0.5f + Main.rand.NextFloat() * 0.5f);
+									num1434 = Projectile.NewProjectile(item.X, item.Y, value57.X, value57.Y, 540, 0, 0f, Main.myPlayer, (float)(-num1435) * 10f, 0.5f + Main.rand.NextFloat() * 0.5f);
 									list3.Add(item + value57);
-									if (num1434 < num1431 && list2[0].Item2 > 0)
+									if (num1435 < num1432 && list2[0].Item2 > 0)
-										list2.Add(Tuple.Create(item + value57, num1441 - 1, num1439));
+										list2.Add(Tuple.Create(item + value57, num1442 - 1, num1440));
 								}
 
 								list2.Remove(list2[0]);
-								int num1442 = num1435 - 1;
+								int num1443 = num1436 - 1;
-								num1435 = num1442;
+								num1436 = num1443;
-								if (num1442 == 0) {
+								if (num1443 == 0) {
-									num1435 = list2.Count;
+									num1436 = list2.Count;
-									num1434++;
+									num1435++;
 								}
 							}
 
-							Main.projectile[num1433].localAI[0] = num1430;
+							Main.projectile[num1434].localAI[0] = num1431;
 						}
 						else {
 							this.ai[1] = 30f;
@@ -27476,42 +_,42 @@
 
 				if (type == 507) {
 					if (Main.rand.Next(5) == 0) {
-						Dust dust10 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
+						Dust dust11 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
-						dust10.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
+						dust11.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
-						dust10.velocity.X = 0f;
+						dust11.velocity.X = 0f;
-						dust10.velocity.Y = Math.Abs(dust10.velocity.Y) * 0.25f;
+						dust11.velocity.Y = Math.Abs(dust11.velocity.Y) * 0.25f;
-					}
-
-					for (int num1443 = 0; num1443 < 3; num1443++) {
-						if (Main.rand.Next(5) == 0) {
-							Dust dust11 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1443), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1443)), 20, 242)];
-							dust11.velocity.X = 0f;
-							dust11.velocity.Y = (0f - Math.Abs(dust11.velocity.Y - (float)num1443 + base.velocity.Y - 4f)) * 1f;
-							dust11.noGravity = true;
-							dust11.fadeIn = 1f;
-							dust11.color = Color.Black;
-							dust11.scale = 1f + Main.rand.NextFloat() + (float)num1443 * 0.3f;
-						}
-					}
-				}
-
-				if (type == 422) {
-					if (Main.rand.Next(5) == 0) {
-						Dust dust12 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
-						dust12.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
-						dust12.velocity.X = 0f;
-						dust12.velocity.Y = Math.Abs(dust12.velocity.Y) * 0.25f;
 					}
 
 					for (int num1444 = 0; num1444 < 3; num1444++) {
 						if (Main.rand.Next(5) == 0) {
-							Dust dust13 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1444), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1444)), 20, 229)];
+							Dust dust12 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1444), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1444)), 20, 242)];
-							dust13.velocity.X = 0f;
+							dust12.velocity.X = 0f;
-							dust13.velocity.Y = (0f - Math.Abs(dust13.velocity.Y - (float)num1444 + base.velocity.Y - 4f)) * 1f;
+							dust12.velocity.Y = (0f - Math.Abs(dust12.velocity.Y - (float)num1444 + base.velocity.Y - 4f)) * 1f;
-							dust13.noGravity = true;
+							dust12.noGravity = true;
-							dust13.fadeIn = 1f;
+							dust12.fadeIn = 1f;
-							dust13.color = Color.Black;
+							dust12.color = Color.Black;
-							dust13.scale = 1f + Main.rand.NextFloat() + (float)num1444 * 0.3f;
+							dust12.scale = 1f + Main.rand.NextFloat() + (float)num1444 * 0.3f;
+						}
+					}
+				}
+
+				if (type == 422) {
+					if (Main.rand.Next(5) == 0) {
+						Dust dust13 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
+						dust13.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
+						dust13.velocity.X = 0f;
+						dust13.velocity.Y = Math.Abs(dust13.velocity.Y) * 0.25f;
+					}
+
+					for (int num1445 = 0; num1445 < 3; num1445++) {
+						if (Main.rand.Next(5) == 0) {
+							Dust dust14 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1445), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1445)), 20, 229)];
+							dust14.velocity.X = 0f;
+							dust14.velocity.Y = (0f - Math.Abs(dust14.velocity.Y - (float)num1445 + base.velocity.Y - 4f)) * 1f;
+							dust14.noGravity = true;
+							dust14.fadeIn = 1f;
+							dust14.color = Color.Black;
+							dust14.scale = 1f + Main.rand.NextFloat() + (float)num1445 * 0.3f;
 						}
 					}
 
@@ -27522,7 +_,7 @@
 						this.ai[1] = 60 + Main.rand.Next(120);
 						Point point9 = Main.player[target].Top.ToTileCoordinates();
 						bool flag88 = CountNPCS(427) + CountNPCS(426) < 14;
-						for (int num1445 = 0; num1445 < 10; num1445++) {
+						for (int num1446 = 0; num1446 < 10; num1446++) {
 							if (WorldGen.SolidTile(point9.X, point9.Y))
 								break;
 
@@ -27542,33 +_,33 @@
 						this.ai[1] = 420 + Main.rand.Next(360);
 						Point point10 = base.Center.ToTileCoordinates();
 						Point point11 = Main.player[target].Center.ToTileCoordinates();
-						Vector2 vector218 = Main.player[target].Center - base.Center;
+						Vector2 vector219 = Main.player[target].Center - base.Center;
-						int num1446 = 20;
+						int num1447 = 20;
-						int num1447 = 3;
+						int num1448 = 3;
-						int num1448 = 8;
+						int num1449 = 8;
-						int num1449 = 2;
+						int num1450 = 2;
-						int num1450 = 0;
+						int num1451 = 0;
 						bool flag89 = false;
-						if (vector218.Length() > 2000f)
+						if (vector219.Length() > 2000f)
 							flag89 = true;
 
-						while (!flag89 && num1450 < 100) {
+						while (!flag89 && num1451 < 100) {
-							num1450++;
+							num1451++;
-							int num1451 = Main.rand.Next(point11.X - num1446, point11.X + num1446 + 1);
+							int num1452 = Main.rand.Next(point11.X - num1447, point11.X + num1447 + 1);
-							int num1452 = Main.rand.Next(point11.Y - num1446, point11.Y + num1446 + 1);
+							int num1453 = Main.rand.Next(point11.Y - num1447, point11.Y + num1447 + 1);
-							if ((num1452 < point11.Y - num1448 || num1452 > point11.Y + num1448 || num1451 < point11.X - num1448 || num1451 > point11.X + num1448) && (num1452 < point10.Y - num1447 || num1452 > point10.Y + num1447 || num1451 < point10.X - num1447 || num1451 > point10.X + num1447) && !Main.tile[num1451, num1452].nactive()) {
+							if ((num1453 < point11.Y - num1449 || num1453 > point11.Y + num1449 || num1452 < point11.X - num1449 || num1452 > point11.X + num1449) && (num1453 < point10.Y - num1448 || num1453 > point10.Y + num1448 || num1452 < point10.X - num1448 || num1452 > point10.X + num1448) && !Main.tile[num1452, num1453].nactive()) {
 								bool flag90 = true;
-								if (flag90 && Main.tile[num1451, num1452].lava())
+								if (flag90 && Main.tile[num1452, num1453].lava())
 									flag90 = false;
 
-								if (flag90 && Collision.SolidTiles(num1451 - num1449, num1451 + num1449, num1452 - num1449, num1452 + num1449))
+								if (flag90 && Collision.SolidTiles(num1452 - num1450, num1452 + num1450, num1453 - num1450, num1453 + num1450))
 									flag90 = false;
 
 								if (flag90 && !Collision.CanHitLine(base.Center, 0, 0, Main.player[target].Center, 0, 0))
 									flag90 = false;
 
 								if (flag90) {
-									Projectile.NewProjectile(num1451 * 16 + 8, num1452 * 16 + 8, 0f, 0f, 579, 0, 0f, Main.myPlayer);
+									Projectile.NewProjectile(num1452 * 16 + 8, num1453 * 16 + 8, 0f, 0f, 579, 0, 0f, Main.myPlayer);
 									flag89 = true;
 									break;
 								}
@@ -27581,20 +_,20 @@
 					return;
 
 				if (Main.rand.Next(5) == 0) {
-					Dust dust14 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
+					Dust dust15 = Main.dust[Dust.NewDust(base.Left, width, height / 2, 241)];
-					dust14.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
+					dust15.position = base.Center + Vector2.UnitY.RotatedByRandom(2.094395160675049) * new Vector2(width / 2, height / 2) * (0.8f + Main.rand.NextFloat() * 0.2f);
-					dust14.velocity.X = 0f;
+					dust15.velocity.X = 0f;
-					dust14.velocity.Y = Math.Abs(dust14.velocity.Y) * 0.25f;
+					dust15.velocity.Y = Math.Abs(dust15.velocity.Y) * 0.25f;
 				}
 
-				for (int num1453 = 0; num1453 < 3; num1453++) {
+				for (int num1454 = 0; num1454 < 3; num1454++) {
 					if (Main.rand.Next(5) == 0) {
-						Dust dust15 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1453), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1453)), 20, 6)];
+						Dust dust16 = Main.dust[Dust.NewDust(base.Top + new Vector2((float)(-width) * (0.33f - 0.11f * (float)num1454), -20f), (int)((float)width * (0.66f - 0.22f * (float)num1454)), 20, 6)];
-						dust15.velocity.X = 0f;
+						dust16.velocity.X = 0f;
-						dust15.velocity.Y = (0f - Math.Abs(dust15.velocity.Y - (float)num1453 + base.velocity.Y - 4f)) * 1f;
+						dust16.velocity.Y = (0f - Math.Abs(dust16.velocity.Y - (float)num1454 + base.velocity.Y - 4f)) * 1f;
-						dust15.noGravity = true;
+						dust16.noGravity = true;
-						dust15.fadeIn = 1f;
+						dust16.fadeIn = 1f;
-						dust15.scale = 1f + Main.rand.NextFloat() + (float)num1453 * 0.3f;
+						dust16.scale = 1f + Main.rand.NextFloat() + (float)num1454 * 0.3f;
 					}
 				}
 
@@ -27602,23 +_,23 @@
 					this.ai[1]--;
 
 				if (Main.netMode != 1 && this.ai[1] <= 0f && Main.player[target].active && !Main.player[target].dead && Distance(Main.player[target].Center) < 1080f && Main.player[target].position.Y - base.position.Y < 700f) {
-					Vector2 vector219 = base.Top + new Vector2((float)(-width) * 0.33f, -20f) + new Vector2((float)width * 0.66f, 20f) * Utils.RandomVector2(Main.rand, 0f, 1f);
+					Vector2 vector220 = base.Top + new Vector2((float)(-width) * 0.33f, -20f) + new Vector2((float)width * 0.66f, 20f) * Utils.RandomVector2(Main.rand, 0f, 1f);
 					Vector2 velocity8 = -Vector2.UnitY.RotatedByRandom(0.7853981852531433) * (7f + Main.rand.NextFloat() * 5f);
-					int num1454 = NewNPC((int)vector219.X, (int)vector219.Y, 519, whoAmI);
+					int num1455 = NewNPC((int)vector220.X, (int)vector220.Y, 519, whoAmI);
-					Main.npc[num1454].velocity = velocity8;
+					Main.npc[num1455].velocity = velocity8;
-					Main.npc[num1454].netUpdate = true;
+					Main.npc[num1455].netUpdate = true;
 					this.ai[1] = 60f;
 				}
 			}
 			else if (aiStyle == 95) {
-				float num1455 = 300f;
+				float num1456 = 300f;
 				if (base.velocity.Length() > 4f)
 					base.velocity *= 0.95f;
 
 				base.velocity *= 0.99f;
 				this.ai[0]++;
-				scale = 1f + 0.3f * (this.ai[0] / num1455);
+				scale = 1f + 0.3f * (this.ai[0] / num1456);
-				if (this.ai[0] >= num1455) {
+				if (this.ai[0] >= num1456) {
 					if (Main.netMode != 1)
 						Transform(405);
 
@@ -27630,47 +_,47 @@
 					return;
 
 				Vector2 center38 = base.Center;
-				int num1456 = (int)(this.ai[0] / (num1455 / 2f));
+				int num1457 = (int)(this.ai[0] / (num1456 / 2f));
-				for (int num1457 = 0; num1457 < num1456 + 1; num1457++) {
+				for (int num1458 = 0; num1458 < num1457 + 1; num1458++) {
 					if (Main.rand.Next(2) != 0) {
-						int num1458 = 226;
+						int num1459 = 226;
-						float num1459 = 0.4f;
+						float num1460 = 0.4f;
-						if (num1457 % 2 == 1) {
+						if (num1458 % 2 == 1) {
-							num1458 = 226;
+							num1459 = 226;
-							num1459 = 0.65f;
+							num1460 = 0.65f;
 						}
 
-						Vector2 vector220 = center38 + ((float)Main.rand.NextDouble() * ((float)Math.PI * 2f)).ToRotationVector2() * (12f - (float)(num1456 * 2));
+						Vector2 vector221 = center38 + ((float)Main.rand.NextDouble() * ((float)Math.PI * 2f)).ToRotationVector2() * (12f - (float)(num1457 * 2));
-						int num1460 = Dust.NewDust(vector220 - Vector2.One * 12f, 24, 24, num1458, base.velocity.X / 2f, base.velocity.Y / 2f);
+						int num1461 = Dust.NewDust(vector221 - Vector2.One * 12f, 24, 24, num1459, base.velocity.X / 2f, base.velocity.Y / 2f);
-						Dust dust = Main.dust[num1460];
+						Dust dust = Main.dust[num1461];
 						dust.position -= new Vector2(2f);
-						Main.dust[num1460].velocity = Vector2.Normalize(center38 - vector220) * 1.5f * (10f - (float)num1456 * 2f) / 10f;
+						Main.dust[num1461].velocity = Vector2.Normalize(center38 - vector221) * 1.5f * (10f - (float)num1457 * 2f) / 10f;
-						Main.dust[num1460].noGravity = true;
+						Main.dust[num1461].noGravity = true;
-						Main.dust[num1460].scale = num1459;
+						Main.dust[num1461].scale = num1460;
-						Main.dust[num1460].customData = this;
+						Main.dust[num1461].customData = this;
 					}
 				}
 			}
 			else if (aiStyle == 96) {
-				float num1461 = 5f;
+				float num1462 = 5f;
 				float moveSpeed = 0.15f;
 				TargetClosest();
 				Vector2 desiredVelocity3 = Main.player[target].Center - base.Center + new Vector2(0f, -250f);
-				float num1462 = desiredVelocity3.Length();
+				float num1463 = desiredVelocity3.Length();
-				if (num1462 < 20f) {
+				if (num1463 < 20f) {
 					desiredVelocity3 = base.velocity;
 				}
-				else if (num1462 < 40f) {
+				else if (num1463 < 40f) {
 					desiredVelocity3.Normalize();
-					desiredVelocity3 *= num1461 * 0.35f;
+					desiredVelocity3 *= num1462 * 0.35f;
 				}
-				else if (num1462 < 80f) {
+				else if (num1463 < 80f) {
 					desiredVelocity3.Normalize();
-					desiredVelocity3 *= num1461 * 0.65f;
+					desiredVelocity3 *= num1462 * 0.65f;
 				}
 				else {
 					desiredVelocity3.Normalize();
-					desiredVelocity3 *= num1461;
+					desiredVelocity3 *= num1462;
 				}
 
 				SimpleFlyMovement(desiredVelocity3, moveSpeed);
@@ -27680,51 +_,51 @@
 
 				this.ai[0] = 0f;
 				if (Main.netMode != 1) {
-					Vector2 vector221 = Vector2.Zero;
+					Vector2 vector222 = Vector2.Zero;
-					while (Math.Abs(vector221.X) < 1.5f) {
+					while (Math.Abs(vector222.X) < 1.5f) {
-						vector221 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(5f, 3f);
+						vector222 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(5f, 3f);
 					}
 
-					Projectile.NewProjectile(base.Center.X, base.Center.Y, vector221.X, vector221.Y, 539, 60, 0f, Main.myPlayer, 0f, whoAmI);
+					Projectile.NewProjectile(base.Center.X, base.Center.Y, vector222.X, vector222.Y, 539, 60, 0f, Main.myPlayer, 0f, whoAmI);
 				}
 			}
 			else if (aiStyle == 97) {
-				float num1463 = 7f;
+				float num1464 = 7f;
-				int num1464 = 480;
+				int num1465 = 480;
 				if (localAI[2] < 180f) {
 					localAI[2]++;
 					if (Main.netMode != 1 && localAI[2] % 60f == 0f) {
-						Vector2 vector222 = Vector2.Zero;
+						Vector2 vector223 = Vector2.Zero;
-						while (Math.Abs(vector222.X) < 1.5f) {
+						while (Math.Abs(vector223.X) < 1.5f) {
-							vector222 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(4f, 2.5f);
+							vector223 = Vector2.UnitY.RotatedByRandom(1.5707963705062866) * new Vector2(4f, 2.5f);
 						}
 
-						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector222.X, vector222.Y, 574, 0, 0f, Main.myPlayer, 0f, whoAmI);
+						Projectile.NewProjectile(base.Center.X, base.Center.Y, vector223.X, vector223.Y, 574, 0, 0f, Main.myPlayer, 0f, whoAmI);
 					}
 				}
 
 				if (localAI[1] == 1f) {
 					localAI[1] = 0f;
 					if (Main.rand.Next(4) == 0)
-						this.ai[0] = num1464;
+						this.ai[0] = num1465;
 				}
 
 				TargetClosest();
 				rotation = Math.Abs(base.velocity.X) * (float)base.direction * 0.1f;
 				spriteDirection = -base.direction;
 				Vector2 value58 = base.Center + new Vector2(base.direction * 20, 6f);
-				Vector2 vector223 = Main.player[target].Center - value58;
+				Vector2 vector224 = Main.player[target].Center - value58;
 				bool flag91 = Collision.CanHit(base.Center, 1, 1, Main.player[target].Center, 1, 1);
 				bool flag92 = false;
-				if (vector223.Length() > 400f || !flag91) {
+				if (vector224.Length() > 400f || !flag91) {
-					Vector2 value59 = vector223;
+					Vector2 value59 = vector224;
-					if (value59.Length() > num1463) {
+					if (value59.Length() > num1464) {
 						value59.Normalize();
-						value59 *= num1463;
+						value59 *= num1464;
 					}
 
-					int num1465 = 30;
+					int num1466 = 30;
-					base.velocity = (base.velocity * (num1465 - 1) + value59) / num1465;
+					base.velocity = (base.velocity * (num1466 - 1) + value59) / num1466;
 				}
 				else {
 					base.velocity *= 0.98f;
@@ -27733,12 +_,12 @@
 
 				if (this.ai[2] != 0f && this.ai[3] != 0f) {
 					Main.PlaySound(SoundID.Item8, base.Center);
-					for (int num1466 = 0; num1466 < 20; num1466++) {
+					for (int num1467 = 0; num1467 < 20; num1467++) {
-						int num1467 = Dust.NewDust(base.position, width, height, 242);
+						int num1468 = Dust.NewDust(base.position, width, height, 242);
-						Dust dust = Main.dust[num1467];
+						Dust dust = Main.dust[num1468];
 						dust.velocity *= 3f;
-						Main.dust[num1467].noGravity = true;
+						Main.dust[num1468].noGravity = true;
-						Main.dust[num1467].scale = 2.5f;
+						Main.dust[num1468].scale = 2.5f;
 					}
 
 					base.Center = new Vector2(this.ai[2] * 16f, this.ai[3] * 16f);
@@ -27746,45 +_,45 @@
 					this.ai[2] = 0f;
 					this.ai[3] = 0f;
 					Main.PlaySound(SoundID.Item8, base.Center);
-					for (int num1468 = 0; num1468 < 20; num1468++) {
+					for (int num1469 = 0; num1469 < 20; num1469++) {
-						int num1469 = Dust.NewDust(base.position, width, height, 242);
+						int num1470 = Dust.NewDust(base.position, width, height, 242);
-						Dust dust = Main.dust[num1469];
+						Dust dust = Main.dust[num1470];
 						dust.velocity *= 3f;
-						Main.dust[num1469].noGravity = true;
+						Main.dust[num1470].noGravity = true;
-						Main.dust[num1469].scale = 2.5f;
+						Main.dust[num1470].scale = 2.5f;
 					}
 				}
 
 				this.ai[0]++;
-				if (this.ai[0] >= (float)num1464 && Main.netMode != 1) {
+				if (this.ai[0] >= (float)num1465 && Main.netMode != 1) {
 					this.ai[0] = 0f;
 					Point point12 = base.Center.ToTileCoordinates();
 					Point point13 = Main.player[target].Center.ToTileCoordinates();
-					int num1470 = 20;
+					int num1471 = 20;
-					int num1471 = 3;
+					int num1472 = 3;
-					int num1472 = 10;
+					int num1473 = 10;
-					int num1473 = 1;
+					int num1474 = 1;
-					int num1474 = 0;
+					int num1475 = 0;
 					bool flag93 = false;
-					if (vector223.Length() > 2000f)
+					if (vector224.Length() > 2000f)
 						flag93 = true;
 
-					while (!flag93 && num1474 < 100) {
+					while (!flag93 && num1475 < 100) {
-						num1474++;
+						num1475++;
-						int num1475 = Main.rand.Next(point13.X - num1470, point13.X + num1470 + 1);
+						int num1476 = Main.rand.Next(point13.X - num1471, point13.X + num1471 + 1);
-						int num1476 = Main.rand.Next(point13.Y - num1470, point13.Y + num1470 + 1);
+						int num1477 = Main.rand.Next(point13.Y - num1471, point13.Y + num1471 + 1);
-						if ((num1476 < point13.Y - num1472 || num1476 > point13.Y + num1472 || num1475 < point13.X - num1472 || num1475 > point13.X + num1472) && (num1476 < point12.Y - num1471 || num1476 > point12.Y + num1471 || num1475 < point12.X - num1471 || num1475 > point12.X + num1471) && !Main.tile[num1475, num1476].nactive()) {
+						if ((num1477 < point13.Y - num1473 || num1477 > point13.Y + num1473 || num1476 < point13.X - num1473 || num1476 > point13.X + num1473) && (num1477 < point12.Y - num1472 || num1477 > point12.Y + num1472 || num1476 < point12.X - num1472 || num1476 > point12.X + num1472) && !Main.tile[num1476, num1477].nactive()) {
 							bool flag94 = true;
-							if (flag94 && Main.tile[num1475, num1476].lava())
+							if (flag94 && Main.tile[num1476, num1477].lava())
 								flag94 = false;
 
-							if (flag94 && Collision.SolidTiles(num1475 - num1473, num1475 + num1473, num1476 - num1473, num1476 + num1473))
+							if (flag94 && Collision.SolidTiles(num1476 - num1474, num1476 + num1474, num1477 - num1474, num1477 + num1474))
 								flag94 = false;
 
 							if (flag94) {
 								this.ai[1] = 20f;
-								this.ai[2] = num1475;
+								this.ai[2] = num1476;
-								this.ai[3] = num1476;
+								this.ai[3] = num1477;
 								flag93 = true;
 								break;
 							}
@@ -27816,42 +_,42 @@
 					flag96 = false;
 				}
 				else {
-					int num1477 = (int)(Main.player[target].Center.X / 16f);
+					int num1478 = (int)(Main.player[target].Center.X / 16f);
-					int num1478 = (int)(Main.player[target].Center.Y / 16f);
+					int num1479 = (int)(Main.player[target].Center.Y / 16f);
-					for (int num1479 = num1477 - 2; num1479 <= num1477 + 2; num1479++) {
+					for (int num1480 = num1478 - 2; num1480 <= num1478 + 2; num1480++) {
-						for (int num1480 = num1478; num1480 <= num1478 + 25; num1480++) {
+						for (int num1481 = num1479; num1481 <= num1479 + 25; num1481++) {
-							if (WorldGen.SolidTile2(num1479, num1480))
+							if (WorldGen.SolidTile2(num1480, num1481))
 								flag96 = false;
 						}
 					}
 				}
 
 				if (this.ai[0] < 0f) {
-					Vector2 vector224 = Main.player[target].Center - base.Center;
+					Vector2 vector225 = Main.player[target].Center - base.Center;
-					float num1481 = vector224.Length();
+					float num1482 = vector225.Length();
 					if (this.ai[0] == -1f) {
-						vector224.Normalize();
+						vector225.Normalize();
-						if (vector224.HasNaNs())
+						if (vector225.HasNaNs())
-							vector224 = new Vector2(base.direction, 0f);
+							vector225 = new Vector2(base.direction, 0f);
 
-						float num1482 = 8f + num1481 / 100f;
+						float num1483 = 8f + num1482 / 100f;
-						float num1483 = 12f;
+						float num1484 = 12f;
-						if (Main.player[target].velocity.Length() > num1483)
+						if (Main.player[target].velocity.Length() > num1484)
-							num1483 = Main.player[target].velocity.Length();
+							num1484 = Main.player[target].velocity.Length();
 
-						if (num1482 > num1483)
+						if (num1483 > num1484)
-							num1482 = num1483;
+							num1483 = num1484;
 
-						vector224 *= num1482;
+						vector225 *= num1483;
-						float num1484 = 10f;
+						float num1485 = 10f;
-						base.velocity = (base.velocity * (num1484 - 1f) + vector224) / num1484;
+						base.velocity = (base.velocity * (num1485 - 1f) + vector225) / num1485;
-						for (int num1485 = 0; num1485 < 200; num1485++) {
+						for (int num1486 = 0; num1486 < 200; num1486++) {
-							if (Main.npc[num1485].active && Main.npc[num1485].type == type && num1485 != whoAmI) {
+							if (Main.npc[num1486].active && Main.npc[num1486].type == type && num1486 != whoAmI) {
-								Vector2 vector225 = Main.npc[num1485].Center - base.Center;
+								Vector2 vector226 = Main.npc[num1486].Center - base.Center;
-								if (vector225.Length() < 40f) {
+								if (vector226.Length() < 40f) {
-									vector225.Normalize();
+									vector226.Normalize();
-									vector225 *= 1f;
+									vector226 *= 1f;
-									base.velocity -= vector225;
+									base.velocity -= vector226;
 								}
 							}
 						}
@@ -27880,28 +_,28 @@
 					if ((double)Math.Abs(rotation) < 0.02)
 						rotation = 0f;
 
-					int num1486 = 300;
+					int num1487 = 300;
-					float num1487 = Math.Abs(base.Center.X - Main.player[target].Center.X);
+					float num1488 = Math.Abs(base.Center.X - Main.player[target].Center.X);
-					if (num1487 < (float)num1486 && Collision.CanHit(base.Center, 1, 1, Main.player[target].position, 1, 1)) {
+					if (num1488 < (float)num1487 && Collision.CanHit(base.Center, 1, 1, Main.player[target].position, 1, 1)) {
 						base.velocity.X *= 0.96f;
 						base.velocity.Y *= 0.96f;
 						this.ai[1] += 1f;
 						if (this.ai[1] == 20f) {
 							if (Main.netMode != 1) {
-								int num1488 = NewNPC((int)base.Center.X, (int)base.Center.Y + 26, 516, 0, 0f, 0f, 0f, 0f, target);
+								int num1489 = NewNPC((int)base.Center.X, (int)base.Center.Y + 26, 516, 0, 0f, 0f, 0f, 0f, target);
 							}
 						}
 						else if (this.ai[1] >= 30f) {
 							this.ai[1] = 0f;
 						}
 
-						for (int num1489 = 0; num1489 < 200; num1489++) {
+						for (int num1490 = 0; num1490 < 200; num1490++) {
-							if (Main.npc[num1489].active && Main.npc[num1489].type == type && num1489 != whoAmI) {
+							if (Main.npc[num1490].active && Main.npc[num1490].type == type && num1490 != whoAmI) {
-								Vector2 vector226 = Main.npc[num1489].Center - base.Center;
+								Vector2 vector227 = Main.npc[num1490].Center - base.Center;
-								if (vector226.Length() < 100f) {
+								if (vector227.Length() < 100f) {
-									vector226.Normalize();
+									vector227.Normalize();
-									vector226 *= 0.1f;
+									vector227 *= 0.1f;
-									base.velocity -= vector226;
+									base.velocity -= vector227;
 								}
 							}
 						}
@@ -27932,22 +_,22 @@
 					this.ai[3] = 0f;
 				}
 
-				int num1490 = 300;
+				int num1491 = 300;
-				for (int num1491 = 0; num1491 < 200; num1491++) {
+				for (int num1492 = 0; num1492 < 200; num1492++) {
-					if (Main.npc[num1491].active && Main.npc[num1491].type == type && num1491 != whoAmI) {
+					if (Main.npc[num1492].active && Main.npc[num1492].type == type && num1492 != whoAmI) {
-						Vector2 vector227 = Main.npc[num1491].Center - base.Center;
+						Vector2 vector228 = Main.npc[num1492].Center - base.Center;
-						if (vector227.Length() < 50f) {
+						if (vector228.Length() < 50f) {
-							vector227.Normalize();
+							vector228.Normalize();
-							vector227 *= 0.1f;
+							vector228 *= 0.1f;
-							base.velocity -= vector227;
+							base.velocity -= vector228;
-							base.velocity.X -= vector227.X * 1f;
+							base.velocity.X -= vector228.X * 1f;
 						}
 					}
 				}
 
-				int num1492 = 800;
+				int num1493 = 800;
-				float num1493 = Math.Abs(base.Center.X - Main.player[target].Center.X);
+				float num1494 = Math.Abs(base.Center.X - Main.player[target].Center.X);
-				if (num1493 < (float)num1490 && flag95) {
+				if (num1494 < (float)num1491 && flag95) {
 					this.ai[0] = 2f;
 					this.ai[1] = 0f;
 				}
@@ -27967,28 +_,28 @@
 						else
 							base.direction = 1;
 					}
-					else if (num1493 > (float)num1492) {
+					else if (num1494 > (float)num1493) {
 						if (base.Center.X > Main.player[target].Center.X)
 							base.direction = -1;
 						else
 							base.direction = 1;
 					}
 
-					float num1494 = 2f;
+					float num1495 = 2f;
-					float num1495 = 0.1f;
+					float num1496 = 0.1f;
-					if (base.velocity.X > num1494 || base.velocity.X < 0f - num1494) {
+					if (base.velocity.X > num1495 || base.velocity.X < 0f - num1495) {
-						if (Math.Abs(base.velocity.X) < num1494 + num1495 * 2f) {
+						if (Math.Abs(base.velocity.X) < num1495 + num1496 * 2f) {
 							if (base.velocity.X < 0f)
-								base.velocity.X = 0f - num1494;
+								base.velocity.X = 0f - num1495;
 							else
-								base.velocity.X = num1494;
+								base.velocity.X = num1495;
 						}
 						else {
 							base.velocity.X *= 0.99f;
 						}
 					}
 					else {
-						base.velocity.X += (float)base.direction * num1495;
+						base.velocity.X += (float)base.direction * num1496;
 					}
 
 					spriteDirection = base.direction;
@@ -28004,44 +_,44 @@
 					this.ai[2] -= 1f;
 				}
 				else {
-					int num1496 = (int)(base.Center.Y / 16f);
+					int num1497 = (int)(base.Center.Y / 16f);
-					int num1497 = (int)((base.Center.X - 8f) / 16f);
+					int num1498 = (int)((base.Center.X - 8f) / 16f);
-					int num1498 = 30;
+					int num1499 = 30;
-					int num1499 = 15;
+					int num1500 = 15;
-					int num1500 = 0;
+					int num1501 = 0;
-					for (int num1501 = num1496; num1501 < num1496 + num1498; num1501++) {
+					for (int num1502 = num1497; num1502 < num1497 + num1499; num1502++) {
-						for (int num1502 = num1497; num1502 <= num1497 + 1; num1502++) {
+						for (int num1503 = num1498; num1503 <= num1498 + 1; num1503++) {
-							if (WorldGen.SolidTile(num1502, num1501) || Main.tile[num1502, num1501].liquid > 0) {
+							if (WorldGen.SolidTile(num1503, num1502) || Main.tile[num1503, num1502].liquid > 0) {
-								num1500 = num1501 - num1496;
+								num1501 = num1502 - num1497;
 								break;
 							}
 						}
 
-						if (num1500 != 0)
+						if (num1501 != 0)
 							break;
 					}
 
-					if (num1500 == 0)
+					if (num1501 == 0)
 						directionY = 1;
-					else if (num1500 < num1499)
+					else if (num1501 < num1500)
 						directionY = -1;
 				}
 
-				float num1503 = 2f;
+				float num1504 = 2f;
-				float num1504 = 0.1f;
+				float num1505 = 0.1f;
-				if (base.velocity.Y > num1503 || base.velocity.Y < 0f - num1503) {
+				if (base.velocity.Y > num1504 || base.velocity.Y < 0f - num1504) {
-					if (Math.Abs(base.velocity.Y) < num1503 + num1504 * 2f) {
+					if (Math.Abs(base.velocity.Y) < num1504 + num1505 * 2f) {
 						if (base.velocity.Y < 0f)
-							base.velocity.Y = 0f - num1503;
+							base.velocity.Y = 0f - num1504;
 						else
-							base.velocity.Y = num1503;
+							base.velocity.Y = num1504;
 					}
 					else {
 						base.velocity.Y *= 0.99f;
 					}
 				}
 				else {
-					base.velocity.Y += (float)directionY * num1504;
+					base.velocity.Y += (float)directionY * num1505;
 				}
 			}
 			else if (aiStyle == 99) {
@@ -28074,31 +_,31 @@
 
 				if (localAI[0] == 0f) {
 					localAI[0] = 1f;
-					for (int num1505 = 0; num1505 < 13; num1505++) {
+					for (int num1506 = 0; num1506 < 13; num1506++) {
-						int num1506 = Dust.NewDust(base.position, width, height, 6, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
+						int num1507 = Dust.NewDust(base.position, width, height, 6, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
-						Main.dust[num1506].noGravity = true;
+						Main.dust[num1507].noGravity = true;
-						Main.dust[num1506].fadeIn = 1f;
+						Main.dust[num1507].fadeIn = 1f;
-						Dust dust = Main.dust[num1506];
+						Dust dust = Main.dust[num1507];
 						dust.velocity *= 4f;
-						Main.dust[num1506].noLight = true;
+						Main.dust[num1507].noLight = true;
 					}
 				}
 
-				for (int num1507 = 0; num1507 < 3; num1507++) {
+				for (int num1508 = 0; num1508 < 3; num1508++) {
 					if (Main.rand.Next(3) < 2) {
-						int num1508 = Dust.NewDust(base.position, width, height, 6, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
+						int num1509 = Dust.NewDust(base.position, width, height, 6, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
-						Main.dust[num1508].noGravity = true;
+						Main.dust[num1509].noGravity = true;
-						Dust dust = Main.dust[num1508];
+						Dust dust = Main.dust[num1509];
 						dust.velocity *= 0.2f;
-						Main.dust[num1508].fadeIn = 1f;
+						Main.dust[num1509].fadeIn = 1f;
 						if (Main.rand.Next(6) == 0) {
-							dust = Main.dust[num1508];
+							dust = Main.dust[num1509];
 							dust.velocity *= 30f;
-							Main.dust[num1508].noGravity = false;
+							Main.dust[num1509].noGravity = false;
-							Main.dust[num1508].noLight = true;
+							Main.dust[num1509].noLight = true;
 						}
 						else {
-							Main.dust[num1508].velocity = DirectionFrom(Main.dust[num1508].position) * Main.dust[num1508].velocity.Length();
+							Main.dust[num1509].velocity = DirectionFrom(Main.dust[num1509].position) * Main.dust[num1509].velocity.Length();
 						}
 					}
 				}
@@ -28131,30 +_,30 @@
 					localAI[0] = 1f;
 					base.velocity.X = this.ai[2];
 					base.velocity.Y = this.ai[3];
-					for (int num1509 = 0; num1509 < 13; num1509++) {
+					for (int num1510 = 0; num1510 < 13; num1510++) {
-						int num1510 = Dust.NewDust(base.position, width, height, 261, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
+						int num1511 = Dust.NewDust(base.position, width, height, 261, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
-						Main.dust[num1510].noGravity = true;
+						Main.dust[num1511].noGravity = true;
-						Main.dust[num1510].fadeIn = 1f;
+						Main.dust[num1511].fadeIn = 1f;
-						Dust dust = Main.dust[num1510];
+						Dust dust = Main.dust[num1511];
 						dust.velocity *= 4f;
-						Main.dust[num1510].noLight = true;
+						Main.dust[num1511].noLight = true;
 					}
 				}
 
-				for (int num1511 = 0; num1511 < 2; num1511++) {
+				for (int num1512 = 0; num1512 < 2; num1512++) {
 					if (Main.rand.Next(10 - (int)Math.Min(7f, base.velocity.Length())) < 1) {
-						int num1512 = Dust.NewDust(base.position, width, height, 261, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
+						int num1513 = Dust.NewDust(base.position, width, height, 261, base.velocity.X * 0.5f, base.velocity.Y * 0.5f, 90, default(Color), 2.5f);
-						Main.dust[num1512].noGravity = true;
+						Main.dust[num1513].noGravity = true;
-						Dust dust = Main.dust[num1512];
+						Dust dust = Main.dust[num1513];
 						dust.velocity *= 0.2f;
-						Main.dust[num1512].fadeIn = 0.4f;
+						Main.dust[num1513].fadeIn = 0.4f;
 						if (Main.rand.Next(6) == 0) {
-							dust = Main.dust[num1512];
+							dust = Main.dust[num1513];
 							dust.velocity *= 5f;
-							Main.dust[num1512].noLight = true;
+							Main.dust[num1513].noLight = true;
 						}
 						else {
-							Main.dust[num1512].velocity = DirectionFrom(Main.dust[num1512].position) * Main.dust[num1512].velocity.Length();
+							Main.dust[num1513].velocity = DirectionFrom(Main.dust[num1513].position) * Main.dust[num1513].velocity.Length();
 						}
 					}
 				}
@@ -28173,69 +_,69 @@
 				}
 			}
 			else if (aiStyle == 101) {
-				float num1513 = 420f;
+				float num1514 = 420f;
-				float num1514 = 120f;
+				float num1515 = 120f;
-				int num1515 = 1;
+				int num1516 = 1;
 				float value60 = 0f;
 				float value61 = 1f;
-				float num1516 = 4f;
+				float num1517 = 4f;
 				bool flag97 = !(this.ai[1] >= 0f) || !Main.npc[(int)this.ai[0]].active;
 				if (Main.npc[(int)this.ai[0]].type == 439) {
 					if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 2)
-						num1515 = 2;
+						num1516 = 2;
 
 					if (Main.npc[(int)this.ai[0]].life < Main.npc[(int)this.ai[0]].lifeMax / 4)
-						num1515 = 3;
+						num1516 = 3;
 				}
 				else {
 					flag97 = true;
 				}
 
-				this.ai[1] += num1515;
+				this.ai[1] += num1516;
-				float num1517 = this.ai[1] / num1514;
+				float num1518 = this.ai[1] / num1515;
-				num1517 = MathHelper.Clamp(num1517, 0f, 1f);
+				num1518 = MathHelper.Clamp(num1518, 0f, 1f);
 				base.position = base.Center;
-				scale = MathHelper.Lerp(value60, value61, num1517);
+				scale = MathHelper.Lerp(value60, value61, num1518);
 				base.Center = base.position;
-				alpha = (int)(255f - num1517 * 255f);
+				alpha = (int)(255f - num1518 * 255f);
 				if (Main.rand.Next(6) == 0) {
 					Vector2 spinningpoint12 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
-					Dust dust16 = Main.dust[Dust.NewDust(base.Center - spinningpoint12 * 20f, 0, 0, 27)];
+					Dust dust17 = Main.dust[Dust.NewDust(base.Center - spinningpoint12 * 20f, 0, 0, 27)];
-					dust16.noGravity = true;
-					dust16.position = base.Center - spinningpoint12 * Main.rand.Next(10, 21) * scale;
-					dust16.velocity = spinningpoint12.RotatedBy(1.5707963705062866) * 4f;
-					dust16.scale = 0.5f + Main.rand.NextFloat();
-					dust16.fadeIn = 0.5f;
-				}
-
-				if (Main.rand.Next(6) == 0) {
-					Vector2 spinningpoint13 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
-					Dust dust17 = Main.dust[Dust.NewDust(base.Center - spinningpoint13 * 30f, 0, 0, 240)];
 					dust17.noGravity = true;
-					dust17.position = base.Center - spinningpoint13 * 20f * scale;
-					dust17.velocity = spinningpoint13.RotatedBy(-1.5707963705062866) * 2f;
+					dust17.position = base.Center - spinningpoint12 * Main.rand.Next(10, 21) * scale;
+					dust17.velocity = spinningpoint12.RotatedBy(1.5707963705062866) * 4f;
 					dust17.scale = 0.5f + Main.rand.NextFloat();
 					dust17.fadeIn = 0.5f;
 				}
 
 				if (Main.rand.Next(6) == 0) {
-					Vector2 vector228 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
+					Vector2 spinningpoint13 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
-					Dust dust18 = Main.dust[Dust.NewDust(base.Center - vector228 * 30f, 0, 0, 240)];
+					Dust dust18 = Main.dust[Dust.NewDust(base.Center - spinningpoint13 * 30f, 0, 0, 240)];
+					dust18.noGravity = true;
-					dust18.position = base.Center - vector228 * 20f * scale;
+					dust18.position = base.Center - spinningpoint13 * 20f * scale;
-					dust18.velocity = Vector2.Zero;
+					dust18.velocity = spinningpoint13.RotatedBy(-1.5707963705062866) * 2f;
 					dust18.scale = 0.5f + Main.rand.NextFloat();
 					dust18.fadeIn = 0.5f;
+				}
+
+				if (Main.rand.Next(6) == 0) {
+					Vector2 vector229 = Vector2.UnitY.RotatedByRandom(6.2831854820251465);
+					Dust dust19 = Main.dust[Dust.NewDust(base.Center - vector229 * 30f, 0, 0, 240)];
+					dust19.position = base.Center - vector229 * 20f * scale;
+					dust19.velocity = Vector2.Zero;
+					dust19.scale = 0.5f + Main.rand.NextFloat();
+					dust19.fadeIn = 0.5f;
-					dust18.noLight = true;
+					dust19.noLight = true;
 				}
 
 				localAI[0] += (float)Math.PI / 60f;
 				localAI[1] = 0.25f + Vector2.UnitY.RotatedBy(this.ai[1] * ((float)Math.PI * 2f) / 60f).Y * 0.25f;
-				if (this.ai[1] >= num1513) {
+				if (this.ai[1] >= num1514) {
 					flag97 = true;
 					if (Main.netMode != 1) {
-						for (int num1518 = 0; num1518 < 4; num1518++) {
+						for (int num1519 = 0; num1519 < 4; num1519++) {
-							Vector2 vector229 = new Vector2(0f, 0f - num1516).RotatedBy((float)Math.PI / 2f * (float)num1518);
+							Vector2 vector230 = new Vector2(0f, 0f - num1517).RotatedBy((float)Math.PI / 2f * (float)num1519);
-							Projectile.NewProjectile(base.Center.X, base.Center.Y, vector229.X, vector229.Y, 593, damage, 0f, Main.myPlayer);
+							Projectile.NewProjectile(base.Center.X, base.Center.Y, vector230.X, vector230.Y, 593, damage, 0f, Main.myPlayer);
 						}
 					}
 				}
@@ -28250,50 +_,50 @@
 				bool flag99 = false;
 				bool flag100 = true;
 				bool flag101 = false;
-				int num1519 = 4;
+				int num1520 = 4;
-				int num1520 = 3;
+				int num1521 = 3;
-				int num1521 = 0;
+				int num1522 = 0;
-				float num1522 = 0.2f;
+				float num1523 = 0.2f;
-				float num1523 = 2f;
+				float num1524 = 2f;
-				float num1524 = -0.2f;
+				float num1525 = -0.2f;
-				float num1525 = -4f;
+				float num1526 = -4f;
 				bool flag102 = true;
-				float num1526 = 2f;
+				float num1527 = 2f;
-				float num1527 = 0.1f;
+				float num1528 = 0.1f;
-				float num1528 = 1f;
+				float num1529 = 1f;
-				float num1529 = 0.04f;
+				float num1530 = 0.04f;
 				bool flag103 = false;
-				float num1530 = 0.96f;
+				float num1531 = 0.96f;
 				bool flag104 = true;
 				if (type == 541) {
 					flag102 = false;
 					rotation = base.velocity.X * 0.04f;
 					spriteDirection = ((base.direction > 0) ? 1 : (-1));
-					num1521 = 3;
+					num1522 = 3;
-					num1524 = -0.1f;
+					num1525 = -0.1f;
-					num1522 = 0.1f;
+					num1523 = 0.1f;
-					float num1531 = (float)life / (float)lifeMax;
+					float num1532 = (float)life / (float)lifeMax;
-					num1526 += (1f - num1531) * 2f;
+					num1527 += (1f - num1532) * 2f;
-					num1527 += (1f - num1531) * 0.02f;
+					num1528 += (1f - num1532) * 0.02f;
-					if (num1531 < 0.5f)
+					if (num1532 < 0.5f)
 						knockBackResist = 0f;
 
-					Vector2 vector230 = base.BottomLeft + new Vector2(0f, -12f);
+					Vector2 vector231 = base.BottomLeft + new Vector2(0f, -12f);
 					Vector2 bottomRight = base.BottomRight;
 					Vector2 value62 = new Vector2(-spriteDirection * 10, -4f);
 					Color color = new Color(222, 108, 48) * 0.7f;
-					float num1532 = -0.3f + MathHelper.Max(base.velocity.Y * 2f, 0f);
+					float num1533 = -0.3f + MathHelper.Max(base.velocity.Y * 2f, 0f);
-					for (int num1533 = 0; num1533 < 2; num1533++) {
+					for (int num1534 = 0; num1534 < 2; num1534++) {
 						if (Main.rand.Next(2) != 0) {
-							Dust dust19 = Main.dust[Dust.NewDust(base.Bottom, 0, 0, 268)];
+							Dust dust20 = Main.dust[Dust.NewDust(base.Bottom, 0, 0, 268)];
-							dust19.position = new Vector2(MathHelper.Lerp(vector230.X, bottomRight.X, Main.rand.NextFloat()), MathHelper.Lerp(vector230.Y, bottomRight.Y, Main.rand.NextFloat())) + value62;
+							dust20.position = new Vector2(MathHelper.Lerp(vector231.X, bottomRight.X, Main.rand.NextFloat()), MathHelper.Lerp(vector231.Y, bottomRight.Y, Main.rand.NextFloat())) + value62;
-							if (num1533 == 1)
+							if (num1534 == 1)
-								dust19.position = base.Bottom + Utils.RandomVector2(Main.rand, -6f, 6f);
+								dust20.position = base.Bottom + Utils.RandomVector2(Main.rand, -6f, 6f);
 
-							dust19.color = color;
+							dust20.color = color;
-							dust19.scale = 0.8f;
+							dust20.scale = 0.8f;
-							dust19.velocity.Y += num1532;
+							dust20.velocity.Y += num1533;
-							dust19.velocity.X += (float)spriteDirection * 0.2f;
+							dust20.velocity.X += (float)spriteDirection * 0.2f;
 						}
 					}
 
@@ -28310,20 +_,20 @@
 							netUpdate = true;
 						}
 
-						Vector2 vector231 = base.Center + Vector2.UnitX * base.direction * 200f;
+						Vector2 vector232 = base.Center + Vector2.UnitX * base.direction * 200f;
-						Vector2 vector232 = base.Center + Vector2.UnitX * base.direction * 50f - Vector2.UnitY * 6f;
+						Vector2 vector233 = base.Center + Vector2.UnitX * base.direction * 50f - Vector2.UnitY * 6f;
 						if (this.ai[0] == 54f && Main.netMode != 1) {
 							List<Point> list4 = new List<Point>();
-							Vector2 vec6 = Main.player[target].Center + new Vector2(Main.player[target].velocity.X * 30f, 0f);
+							Vector2 vec5 = Main.player[target].Center + new Vector2(Main.player[target].velocity.X * 30f, 0f);
-							Point point14 = vec6.ToTileCoordinates();
+							Point point14 = vec5.ToTileCoordinates();
-							for (int num1534 = 0; num1534 < 1000; num1534++) {
+							for (int num1535 = 0; num1535 < 1000; num1535++) {
 								if (list4.Count >= 3)
 									break;
 
 								bool flag105 = false;
-								int num1535 = Main.rand.Next(point14.X - 30, point14.X + 30 + 1);
+								int num1536 = Main.rand.Next(point14.X - 30, point14.X + 30 + 1);
 								foreach (Point item2 in list4) {
-									if (Math.Abs(item2.X - num1535) < 10) {
+									if (Math.Abs(item2.X - num1536) < 10) {
 										flag105 = true;
 										break;
 									}
@@ -28331,9 +_,9 @@
 
 								if (!flag105) {
 									int startY = point14.Y - 20;
-									Collision.ExpandVertically(num1535, startY, out int _, out int bottomY, 1, 51);
+									Collision.ExpandVertically(num1536, startY, out int _, out int bottomY, 1, 51);
-									if (StrayMethods.CanSpawnSandstormHostile(new Vector2(num1535, bottomY - 15) * 16f, 15, 15))
+									if (StrayMethods.CanSpawnSandstormHostile(new Vector2(num1536, bottomY - 15) * 16f, 15, 15))
-										list4.Add(new Point(num1535, bottomY - 15));
+										list4.Add(new Point(num1536, bottomY - 15));
 								}
 							}
 
@@ -28342,37 +_,37 @@
 							}
 						}
 
-						Vector2 vector233 = new Vector2(0.9f, 2f);
+						Vector2 vector234 = new Vector2(0.9f, 2f);
 						if (this.ai[0] < 114f && this.ai[0] > 0f) {
 							List<Vector2> list5 = new List<Vector2>();
-							for (int num1536 = 0; num1536 < 1000; num1536++) {
+							for (int num1537 = 0; num1537 < 1000; num1537++) {
-								Projectile projectile10 = Main.projectile[num1536];
+								Projectile projectile10 = Main.projectile[num1537];
 								if (projectile10.active && projectile10.type == 658)
 									list5.Add(projectile10.Center);
 							}
 
 							Vector2 value63 = new Vector2(0f, 1500f);
-							float num1537 = (this.ai[0] - 54f) / 30f;
+							float num1538 = (this.ai[0] - 54f) / 30f;
-							if (num1537 < 0.95f && num1537 >= 0f) {
+							if (num1538 < 0.95f && num1538 >= 0f) {
 								foreach (Vector2 item4 in list5) {
-									Vector2 value64 = Vector2.CatmullRom(vector232 + value63, vector232, item4, item4 + value63, num1537);
+									Vector2 value64 = Vector2.CatmullRom(vector233 + value63, vector233, item4, item4 + value63, num1538);
-									Vector2 value65 = Vector2.CatmullRom(vector232 + value63, vector232, item4, item4 + value63, num1537 + 0.05f);
+									Vector2 value65 = Vector2.CatmullRom(vector233 + value63, vector233, item4, item4 + value63, num1538 + 0.05f);
-									float num1538 = num1537;
+									float num1539 = num1538;
-									if (num1538 > 0.5f)
+									if (num1539 > 0.5f)
-										num1538 = 1f - num1538;
+										num1539 = 1f - num1539;
 
-									float num1539 = 2f;
+									float num1540 = 2f;
 									if (Vector2.Distance(value64, value65) > 5f)
-										num1539 = 3f;
+										num1540 = 3f;
 
 									if (Vector2.Distance(value64, value65) > 10f)
-										num1539 = 4f;
+										num1540 = 4f;
 
-									for (float num1540 = 0f; num1540 < num1539; num1540++) {
+									for (float num1541 = 0f; num1541 < num1540; num1541++) {
-										Dust dust20 = Main.dust[Dust.NewDust(vector232, 0, 0, 269)];
+										Dust dust21 = Main.dust[Dust.NewDust(vector233, 0, 0, 269)];
-										dust20.position = Vector2.Lerp(value64, value65, num1540 / num1539) + Utils.RandomVector2(Main.rand, -2f, 2f);
+										dust21.position = Vector2.Lerp(value64, value65, num1541 / num1540) + Utils.RandomVector2(Main.rand, -2f, 2f);
-										dust20.noLight = true;
+										dust21.noLight = true;
-										dust20.scale = 0.3f + num1537;
+										dust21.scale = 0.3f + num1538;
 									}
 								}
 							}
@@ -28394,23 +_,23 @@
 
 				if (!flag99) {
 					if (localAI[2] >= 0f) {
-						float num1541 = 16f;
+						float num1542 = 16f;
 						bool flag106 = false;
 						bool flag107 = false;
-						if (base.position.X > localAI[0] - num1541 && base.position.X < localAI[0] + num1541) {
+						if (base.position.X > localAI[0] - num1542 && base.position.X < localAI[0] + num1542) {
 							flag106 = true;
 						}
 						else if ((base.velocity.X < 0f && base.direction > 0) || (base.velocity.X > 0f && base.direction < 0)) {
 							flag106 = true;
-							num1541 += 24f;
+							num1542 += 24f;
 						}
 
-						if (base.position.Y > localAI[1] - num1541 && base.position.Y < localAI[1] + num1541)
+						if (base.position.Y > localAI[1] - num1542 && base.position.Y < localAI[1] + num1542)
 							flag107 = true;
 
 						if (flag106 && flag107) {
 							localAI[2] += 1f;
-							if (localAI[2] >= 30f && num1541 == 16f)
+							if (localAI[2] >= 30f && num1542 == 16f)
 								flag98 = true;
 
 							if (localAI[2] >= 60f) {
@@ -28435,21 +_,21 @@
 					}
 				}
 
-				int num1542 = (int)((base.position.X + (float)(width / 2)) / 16f) + base.direction * 2;
+				int num1543 = (int)((base.position.X + (float)(width / 2)) / 16f) + base.direction * 2;
-				int num1543 = (int)((base.position.Y + (float)height) / 16f);
+				int num1544 = (int)((base.position.Y + (float)height) / 16f);
-				int num1544 = (int)base.Bottom.Y / 16;
+				int num1545 = (int)base.Bottom.Y / 16;
-				int num1545 = (int)base.Bottom.X / 16;
+				int num1546 = (int)base.Bottom.X / 16;
 				if (flag103) {
-					base.velocity *= num1530;
+					base.velocity *= num1531;
 					return;
 				}
 
-				for (int num1546 = num1543; num1546 < num1543 + num1519; num1546++) {
+				for (int num1547 = num1544; num1547 < num1544 + num1520; num1547++) {
-					if (Main.tile[num1542, num1546] == null)
+					if (Main.tile[num1543, num1547] == null)
-						Main.tile[num1542, num1546] = new Tile();
+						Main.tile[num1543, num1547] = new Tile();
 
-					if ((Main.tile[num1542, num1546].nactive() && Main.tileSolid[Main.tile[num1542, num1546].type]) || Main.tile[num1542, num1546].liquid > 0) {
+					if ((Main.tile[num1543, num1547].nactive() && Main.tileSolid[Main.tile[num1543, num1547].type]) || Main.tile[num1543, num1547].liquid > 0) {
-						if (num1546 <= num1543 + 1)
+						if (num1547 <= num1544 + 1)
 							flag101 = true;
 
 						flag100 = false;
@@ -28457,11 +_,11 @@
 					}
 				}
 
-				for (int num1547 = num1544; num1547 < num1544 + num1521; num1547++) {
+				for (int num1548 = num1545; num1548 < num1545 + num1522; num1548++) {
-					if (Main.tile[num1545, num1547] == null)
+					if (Main.tile[num1546, num1548] == null)
-						Main.tile[num1545, num1547] = new Tile();
+						Main.tile[num1546, num1548] = new Tile();
 
-					if ((Main.tile[num1545, num1547].nactive() && Main.tileSolid[Main.tile[num1545, num1547].type]) || Main.tile[num1545, num1547].liquid > 0) {
+					if ((Main.tile[num1546, num1548].nactive() && Main.tileSolid[Main.tile[num1546, num1548].type]) || Main.tile[num1546, num1548].liquid > 0) {
 						flag101 = true;
 						flag100 = false;
 						break;
@@ -28469,11 +_,11 @@
 				}
 
 				if (flag102) {
-					for (int num1548 = num1543 - num1520; num1548 < num1543; num1548++) {
+					for (int num1549 = num1544 - num1521; num1549 < num1544; num1549++) {
-						if (Main.tile[num1542, num1548] == null)
+						if (Main.tile[num1543, num1549] == null)
-							Main.tile[num1542, num1548] = new Tile();
+							Main.tile[num1543, num1549] = new Tile();
 
-						if ((Main.tile[num1542, num1548].nactive() && Main.tileSolid[Main.tile[num1542, num1548].type]) || Main.tile[num1542, num1548].liquid > 0) {
+						if ((Main.tile[num1543, num1549].nactive() && Main.tileSolid[Main.tile[num1543, num1549].type]) || Main.tile[num1543, num1549].liquid > 0) {
 							flag101 = false;
 							flag98 = true;
 							break;
@@ -28487,16 +_,16 @@
 				}
 
 				if (flag100) {
-					base.velocity.Y += num1522;
+					base.velocity.Y += num1523;
-					if (base.velocity.Y > num1523)
+					if (base.velocity.Y > num1524)
-						base.velocity.Y = num1523;
+						base.velocity.Y = num1524;
 				}
 				else {
 					if ((directionY < 0 && base.velocity.Y > 0f) || flag101)
-						base.velocity.Y += num1524;
+						base.velocity.Y += num1525;
 
-					if (base.velocity.Y < num1525)
+					if (base.velocity.Y < num1526)
-						base.velocity.Y = num1525;
+						base.velocity.Y = num1526;
 				}
 
 				if (collideX) {
@@ -28517,46 +_,46 @@
 						base.velocity.Y = -1f;
 				}
 
-				if (base.direction == -1 && base.velocity.X > 0f - num1526) {
+				if (base.direction == -1 && base.velocity.X > 0f - num1527) {
-					base.velocity.X -= num1527;
+					base.velocity.X -= num1528;
-					if (base.velocity.X > num1526)
+					if (base.velocity.X > num1527)
-						base.velocity.X -= num1527;
+						base.velocity.X -= num1528;
 					else if (base.velocity.X > 0f)
-						base.velocity.X += num1527 / 2f;
+						base.velocity.X += num1528 / 2f;
 
-					if (base.velocity.X < 0f - num1526)
+					if (base.velocity.X < 0f - num1527)
-						base.velocity.X = 0f - num1526;
+						base.velocity.X = 0f - num1527;
 				}
-				else if (base.direction == 1 && base.velocity.X < num1526) {
+				else if (base.direction == 1 && base.velocity.X < num1527) {
-					base.velocity.X += num1527;
+					base.velocity.X += num1528;
-					if (base.velocity.X < 0f - num1526)
+					if (base.velocity.X < 0f - num1527)
-						base.velocity.X += num1527;
+						base.velocity.X += num1528;
 					else if (base.velocity.X < 0f)
-						base.velocity.X -= num1527 / 2f;
+						base.velocity.X -= num1528 / 2f;
 
-					if (base.velocity.X > num1526)
+					if (base.velocity.X > num1527)
-						base.velocity.X = num1526;
+						base.velocity.X = num1527;
 				}
 
-				if (directionY == -1 && base.velocity.Y > 0f - num1528) {
+				if (directionY == -1 && base.velocity.Y > 0f - num1529) {
-					base.velocity.Y -= num1529;
+					base.velocity.Y -= num1530;
-					if (base.velocity.Y > num1528)
+					if (base.velocity.Y > num1529)
-						base.velocity.Y -= num1529 * 1.25f;
+						base.velocity.Y -= num1530 * 1.25f;
 					else if (base.velocity.Y > 0f)
-						base.velocity.Y += num1529 * 0.75f;
+						base.velocity.Y += num1530 * 0.75f;
 
-					if (base.velocity.Y < 0f - num1528)
+					if (base.velocity.Y < 0f - num1529)
-						base.velocity.Y = 0f - num1526;
+						base.velocity.Y = 0f - num1527;
 				}
-				else if (directionY == 1 && base.velocity.Y < num1528) {
+				else if (directionY == 1 && base.velocity.Y < num1529) {
-					base.velocity.Y += num1529;
+					base.velocity.Y += num1530;
-					if (base.velocity.Y < 0f - num1528)
+					if (base.velocity.Y < 0f - num1529)
-						base.velocity.Y += num1529 * 1.25f;
+						base.velocity.Y += num1530 * 1.25f;
 					else if (base.velocity.Y < 0f)
-						base.velocity.Y -= num1529 * 0.75f;
+						base.velocity.Y -= num1530 * 0.75f;
 
-					if (base.velocity.Y > num1528)
+					if (base.velocity.Y > num1529)
-						base.velocity.Y = num1528;
+						base.velocity.Y = num1529;
 				}
 			}
 			else if (aiStyle == 103) {
@@ -28570,8 +_,8 @@
 				flag108 |= wet;
 				bool flag109 = false;
 				TargetClosest(faceTarget: false);
-				Vector2 vector234 = targetRect.Center.ToVector2();
+				Vector2 vector235 = targetRect.Center.ToVector2();
-				if (Main.player[target].velocity.Y > -0.1f && !Main.player[target].dead && Distance(vector234) > 150f)
+				if (Main.player[target].velocity.Y > -0.1f && !Main.player[target].dead && Distance(vector235) > 150f)
 					flag109 = true;
 
 				if (localAI[0] == -1f && !flag108)
@@ -28582,18 +_,18 @@
 
 				if (flag108) {
 					if (soundDelay == 0) {
-						float num1549 = Distance(vector234) / 40f;
+						float num1550 = Distance(vector235) / 40f;
-						if (num1549 < 10f)
+						if (num1550 < 10f)
-							num1549 = 10f;
+							num1550 = 10f;
 
-						if (num1549 > 20f)
+						if (num1550 > 20f)
-							num1549 = 20f;
+							num1550 = 20f;
 
-						soundDelay = (int)num1549;
+						soundDelay = (int)num1550;
 						Main.PlaySound(15, base.Center, 4);
 					}
 
-					float num1550 = this.ai[1];
+					float num1551 = this.ai[1];
 					bool flag110 = false;
 					pt = (base.Center + new Vector2(0f, 24f)).ToTileCoordinates();
 					tileSafely = Framing.GetTileSafely(pt.X, pt.Y - 2);
@@ -28620,22 +_,22 @@
 						if (base.velocity.Y < -3f)
 							base.velocity.Y = -3f;
 
-						Vector2 vec7 = base.Center + base.velocity.SafeNormalize(Vector2.Zero) * base.Size.Length() / 2f + base.velocity;
+						Vector2 vec6 = base.Center + base.velocity.SafeNormalize(Vector2.Zero) * base.Size.Length() / 2f + base.velocity;
-						pt = vec7.ToTileCoordinates();
+						pt = vec6.ToTileCoordinates();
 						tileSafely = Framing.GetTileSafely(pt);
 						bool flag111 = tileSafely.nactive() && (TileID.Sets.Conversion.Sand[tileSafely.type] || TileID.Sets.Conversion.Sandstone[tileSafely.type] || TileID.Sets.Conversion.HardenedSand[tileSafely.type]);
 						if (!flag111 && wet)
 							flag111 = (tileSafely.liquid > 0);
 
-						if (!flag111 && Math.Sign(base.velocity.X) == base.direction && Distance(vector234) < 400f && (this.ai[2] >= 30f || this.ai[2] < 0f)) {
+						if (!flag111 && Math.Sign(base.velocity.X) == base.direction && Distance(vector235) < 400f && (this.ai[2] >= 30f || this.ai[2] < 0f)) {
 							if (localAI[0] == 0f) {
 								Main.PlaySound(14, base.Center, 542);
 								localAI[0] = -1f;
 							}
 
 							this.ai[2] = -30f;
-							Vector2 vector235 = DirectionTo(vector234 + new Vector2(0f, -80f));
+							Vector2 vector236 = DirectionTo(vector235 + new Vector2(0f, -80f));
-							base.velocity = vector235 * 12f;
+							base.velocity = vector236 * 12f;
 						}
 					}
 					else {
@@ -28652,9 +_,9 @@
 							this.ai[0] = directionY;
 						}
 
-						float num1551 = 6f;
+						float num1552 = 6f;
 						base.velocity.X += (float)base.direction * 0.1f;
-						if (base.velocity.X < 0f - num1551 || base.velocity.X > num1551)
+						if (base.velocity.X < 0f - num1552 || base.velocity.X > num1552)
 							base.velocity.X *= 0.95f;
 
 						if (flag110)
@@ -28662,16 +_,16 @@
 						else
 							this.ai[0] = 1f;
 
-						float num1552 = 0.06f;
+						float num1553 = 0.06f;
-						float num1553 = 0.01f;
+						float num1554 = 0.01f;
 						if (this.ai[0] == -1f) {
-							base.velocity.Y -= num1553;
+							base.velocity.Y -= num1554;
-							if (base.velocity.Y < 0f - num1552)
+							if (base.velocity.Y < 0f - num1553)
 								this.ai[0] = 1f;
 						}
 						else {
-							base.velocity.Y += num1553;
+							base.velocity.Y += num1554;
-							if (base.velocity.Y > num1552)
+							if (base.velocity.Y > num1553)
 								this.ai[0] = -1f;
 						}
 
@@ -28684,9 +_,9 @@
 						if (flag109)
 							TargetClosest();
 
-						float num1554 = 1f;
+						float num1555 = 1f;
 						base.velocity.X += (float)base.direction * 0.1f;
-						if (base.velocity.X < 0f - num1554 || base.velocity.X > num1554)
+						if (base.velocity.X < 0f - num1555 || base.velocity.X > num1555)
 							base.velocity.X *= 0.95f;
 					}
 
@@ -28725,10 +_,10 @@
 						localAI[0] = 1f;
 						xLeftEnd.X += 2;
 						xRightEnd.X -= 2;
-						int num1555 = NewNPC(xLeftEnd.X, xLeftEnd.Y, 549);
+						int num1556 = NewNPC(xLeftEnd.X, xLeftEnd.Y, 549);
-						Main.npc[num1555].Bottom = xLeftEnd.ToWorldCoordinates(8f, 16f);
+						Main.npc[num1556].Bottom = xLeftEnd.ToWorldCoordinates(8f, 16f);
-						num1555 = NewNPC(xRightEnd.X, xRightEnd.Y, 549);
+						num1556 = NewNPC(xRightEnd.X, xRightEnd.Y, 549);
-						Main.npc[num1555].Bottom = xRightEnd.ToWorldCoordinates(8f, 16f);
+						Main.npc[num1556].Bottom = xRightEnd.ToWorldCoordinates(8f, 16f);
 						if (Main.netMode != 1)
 							DD2Event.FindArenaHitbox();
 					}
@@ -28738,8 +_,8 @@
 					life = lifeMax;
 					if (this.ai[0] == 3f) {
 						Main.PlayTrackedSound(SoundID.DD2_WinScene, base.Center);
-						for (int num1556 = 0; num1556 < 200; num1556++) {
+						for (int num1557 = 0; num1557 < 200; num1557++) {
-							NPC nPC9 = Main.npc[num1556];
+							NPC nPC9 = Main.npc[num1557];
 							if (nPC9.active && nPC9.type == 549) {
 								nPC9.ai[1] = 1f;
 								nPC9.ai[0] = 0f;
@@ -28754,16 +_,16 @@
 					this.ai[0]++;
 					noGravity = true;
 					if (this.ai[0] <= 120f) {
-						float num1557 = this.ai[0] / 120f;
+						float num1558 = this.ai[0] / 120f;
-						base.velocity.Y = (float)Math.Cos(num1557 * ((float)Math.PI * 2f)) * 0.25f - 0.25f;
+						base.velocity.Y = (float)Math.Cos(num1558 * ((float)Math.PI * 2f)) * 0.25f - 0.25f;
 					}
 					else {
 						base.velocity.Y = 0f;
 					}
 
-					float num1558 = Utils.InverseLerp(480f, 570f, this.ai[0], clamped: true);
+					float num1559 = Utils.InverseLerp(480f, 570f, this.ai[0], clamped: true);
-					if (num1558 != 0f)
+					if (num1559 != 0f)
-						MoonlordDeathDrama.RequestLight(num1558, base.Center);
+						MoonlordDeathDrama.RequestLight(num1559, base.Center);
 
 					if (this.ai[0] >= 600f) {
 						DD2Event.StopInvasion(win: true);
@@ -28775,52 +_,52 @@
 
 					if (true) {
 						Vector2 value66 = base.Center + new Vector2(0f, -20f);
-						float num1559 = 0.99f;
+						float num1560 = 0.99f;
 						if (this.ai[0] >= 60f)
-							num1559 = 0.79f;
+							num1560 = 0.79f;
 
 						if (this.ai[0] >= 120f)
-							num1559 = 0.58f;
+							num1560 = 0.58f;
 
 						if (this.ai[0] >= 180f)
-							num1559 = 0.43f;
+							num1560 = 0.43f;
 
 						if (this.ai[0] >= 240f)
-							num1559 = 0.33f;
+							num1560 = 0.33f;
 
 						if (this.ai[0] >= 540f)
-							num1559 = 1f;
+							num1560 = 1f;
 
-						for (int num1560 = 0; num1560 < 9; num1560++) {
+						for (int num1561 = 0; num1561 < 9; num1561++) {
-							if (!(Main.rand.NextFloat() < num1559)) {
+							if (!(Main.rand.NextFloat() < num1560)) {
-								float num1561 = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+								float num1562 = Main.rand.NextFloat() * ((float)Math.PI * 2f);
-								float num1562 = Main.rand.NextFloat();
+								float num1563 = Main.rand.NextFloat();
-								Vector2 position7 = value66 + num1561.ToRotationVector2() * (110f + 600f * num1562);
+								Vector2 position7 = value66 + num1562.ToRotationVector2() * (110f + 600f * num1563);
-								Vector2 vector236 = (num1561 - (float)Math.PI).ToRotationVector2() * (14f + 0f * Main.rand.NextFloat() + 8f * num1562);
+								Vector2 vector237 = (num1562 - (float)Math.PI).ToRotationVector2() * (14f + 0f * Main.rand.NextFloat() + 8f * num1563);
-								Dust dust21 = Dust.NewDustPerfect(position7, 264, vector236);
+								Dust dust22 = Dust.NewDustPerfect(position7, 264, vector237);
-								dust21.scale = 0.9f;
+								dust22.scale = 0.9f;
-								dust21.fadeIn = 1.15f + num1562 * 0.3f;
+								dust22.fadeIn = 1.15f + num1563 * 0.3f;
-								dust21.color = new Color(1f, 1f, 1f, num1559) * (1f - num1559);
+								dust22.color = new Color(1f, 1f, 1f, num1560) * (1f - num1560);
-								dust21.noGravity = true;
+								dust22.noGravity = true;
-								dust21.noLight = true;
+								dust22.noLight = true;
 							}
 						}
 					}
 
 					if (this.ai[0] == 100f || this.ai[0] == 160f || this.ai[0] == 220f || this.ai[0] == 280f || this.ai[0] == 340f || this.ai[0] == 370f || this.ai[0] == 400f || this.ai[0] == 430f || this.ai[0] == 460f || this.ai[0] == 500f || this.ai[0] == 520f || this.ai[0] == 540f) {
-						float num1563 = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+						float num1564 = Main.rand.NextFloat() * ((float)Math.PI * 2f);
-						float num1564 = 120f;
+						float num1565 = 120f;
-						for (int num1565 = 0; (float)num1565 < num1564; num1565++) {
+						for (int num1566 = 0; (float)num1566 < num1565; num1566++) {
-							float num1566 = (float)num1565 / num1564 * ((float)Math.PI * 2f);
+							float num1567 = (float)num1566 / num1565 * ((float)Math.PI * 2f);
-							float num1567 = Main.rand.NextFloat();
+							float num1568 = Main.rand.NextFloat();
-							Vector2 position8 = base.Center + new Vector2(0f, -20f) + num1566.ToRotationVector2() * (810f - this.ai[0]);
+							Vector2 position8 = base.Center + new Vector2(0f, -20f) + num1567.ToRotationVector2() * (810f - this.ai[0]);
-							Vector2 vector237 = (num1566 - (float)Math.PI).ToRotationVector2() * (14f + 5f * (this.ai[0] / 600f) + 8f * num1567);
+							Vector2 vector238 = (num1567 - (float)Math.PI).ToRotationVector2() * (14f + 5f * (this.ai[0] / 600f) + 8f * num1568);
-							Dust dust22 = Dust.NewDustPerfect(position8, 264, vector237);
+							Dust dust23 = Dust.NewDustPerfect(position8, 264, vector238);
-							dust22.scale = 0.9f;
+							dust23.scale = 0.9f;
-							dust22.fadeIn = 1.15f + num1567 * 0.3f;
+							dust23.fadeIn = 1.15f + num1568 * 0.3f;
-							dust22.color = new Color(1f, 1f, 1f, 0f);
+							dust23.color = new Color(1f, 1f, 1f, 0f);
-							dust22.noGravity = true;
+							dust23.noGravity = true;
-							dust22.noLight = true;
+							dust23.noLight = true;
 						}
 					}
 				}
@@ -28831,8 +_,8 @@
 					dontTakeDamageFromHostiles = true;
 					life = lifeMax;
 					if (this.ai[0] == 0f) {
-						for (int num1568 = 0; num1568 < 200; num1568++) {
+						for (int num1569 = 0; num1569 < 200; num1569++) {
-							NPC nPC10 = Main.npc[num1568];
+							NPC nPC10 = Main.npc[num1569];
 							if (nPC10.active && nPC10.type == 549) {
 								nPC10.ai[1] = 1f;
 								nPC10.ai[0] = 0f;
@@ -28847,15 +_,15 @@
 					}
 
 					this.ai[0]++;
-					float num1569 = Utils.InverseLerp(480f, 600f, this.ai[0], clamped: true);
+					float num1570 = Utils.InverseLerp(480f, 600f, this.ai[0], clamped: true);
-					if (num1569 != 0f)
+					if (num1570 != 0f)
-						MoonlordDeathDrama.RequestLight(num1569, base.Center);
+						MoonlordDeathDrama.RequestLight(num1570, base.Center);
 
-					float num1570 = 96f;
+					float num1571 = 96f;
-					if (this.ai[0] < num1570)
+					if (this.ai[0] < num1571)
-						base.velocity.Y = MathHelper.Lerp(0f, -1f, this.ai[0] / num1570);
+						base.velocity.Y = MathHelper.Lerp(0f, -1f, this.ai[0] / num1571);
 
-					if (this.ai[0] >= num1570) {
+					if (this.ai[0] >= num1571) {
 						alpha += 50;
 						if (alpha > 255)
 							alpha = 255;
@@ -28863,41 +_,41 @@
 
 					if (true) {
 						Vector2 value67 = base.Center + new Vector2(0f, MathHelper.Lerp(0f, -70f, Utils.InverseLerp(0f, 300f, this.ai[0], clamped: true)));
-						float num1571 = 0.99f;
+						float num1572 = 0.99f;
 						if (this.ai[0] >= 60f)
-							num1571 = 0.79f;
+							num1572 = 0.79f;
 
 						if (this.ai[0] >= 120f)
-							num1571 = 0.58f;
+							num1572 = 0.58f;
 
 						if (this.ai[0] >= 180f)
-							num1571 = 0.23f;
+							num1572 = 0.23f;
 
 						if (this.ai[0] >= 240f)
-							num1571 = 0.35f;
+							num1572 = 0.35f;
 
 						if (this.ai[0] >= 300f)
-							num1571 = 0.6f;
+							num1572 = 0.6f;
 
 						if (this.ai[0] >= 360f)
-							num1571 = 0.98f;
+							num1572 = 0.98f;
 
 						if (this.ai[0] >= 420f)
-							num1571 = 0.995f;
+							num1572 = 0.995f;
 
 						if (this.ai[0] >= 450f)
-							num1571 = 1f;
+							num1572 = 1f;
 
-						for (int num1572 = 0; num1572 < 12; num1572++) {
+						for (int num1573 = 0; num1573 < 12; num1573++) {
-							if (!(Main.rand.NextFloat() < num1571)) {
+							if (!(Main.rand.NextFloat() < num1572)) {
-								float num1573 = Main.rand.NextFloat() * ((float)Math.PI * 2f);
+								float num1574 = Main.rand.NextFloat() * ((float)Math.PI * 2f);
-								float num1574 = Main.rand.NextFloat();
+								float num1575 = Main.rand.NextFloat();
-								Vector2 position9 = value67 + num1573.ToRotationVector2() * (70f + 600f * num1574);
+								Vector2 position9 = value67 + num1574.ToRotationVector2() * (70f + 600f * num1575);
-								Vector2 vector238 = (num1573 - (float)Math.PI / 2f - (float)Math.PI / 8f).ToRotationVector2() * (12f + 9f * Main.rand.NextFloat() + 4f * num1574);
+								Vector2 vector239 = (num1574 - (float)Math.PI / 2f - (float)Math.PI / 8f).ToRotationVector2() * (12f + 9f * Main.rand.NextFloat() + 4f * num1575);
-								Dust dust23 = Dust.NewDustPerfect(position9, 240, vector238);
+								Dust dust24 = Dust.NewDustPerfect(position9, 240, vector239);
-								dust23.scale = 0.8f;
+								dust24.scale = 0.8f;
-								dust23.fadeIn = 0.95f + num1574 * 0.3f;
+								dust24.fadeIn = 0.95f + num1575 * 0.3f;
-								dust23.noGravity = true;
+								dust24.noGravity = true;
 							}
 						}
 					}
